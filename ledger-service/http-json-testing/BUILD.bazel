# Copyright (c) 2023 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.
# SPDX-License-Identifier: Apache-2.0

load(
    "//bazel_tools:scala.bzl",
    "da_scala_library",
    "kind_projector_plugin",
    "lf_scalacopts",
)
load("//ledger-service/utils:scalaopts.bzl", "hj_scalacopts")

[
    da_scala_library(
        name = "{}".format(edition),
        srcs = glob(["src/main/scala/**/*.scala"]),
        data = ["//canton:canton-ee_deploy.jar"] if edition == "ee" else [],
        plugins = [
            kind_projector_plugin,
        ],
        scala_deps = [
            "@maven//:com_typesafe_akka_akka_actor",
            "@maven//:com_typesafe_akka_akka_http_core",
            "@maven//:com_typesafe_akka_akka_stream",
            "@maven//:io_spray_spray_json",
            "@maven//:org_scalacheck_scalacheck",
            "@maven//:org_scalactic_scalactic",
            "@maven//:org_scalatest_scalatest_core",
            "@maven//:org_scalatest_scalatest_matchers_core",
            "@maven//:org_typelevel_cats_effect",
        ],
        scalacopts = hj_scalacopts,
        tags = ["maven_coordinates=com.daml:http-json-testing:__VERSION__"] + (["canton-ee"] if edition == "ee" else []),
        visibility = ["//visibility:public"],
        runtime_deps = [
            "@maven//:ch_qos_logback_logback_classic",
        ],
        deps = [
            "//bazel_tools/runfiles:scala_runfiles",
            "//canton/it-lib",
            "//daml-lf/transaction",
            "//language-support/scala/bindings-akka",
            "//ledger-api/rs-grpc-bridge",
            "//ledger-api/testing-utils",
            "//ledger-service/fetch-contracts",
            "@maven//:org_scalatest_scalatest_compatible",
            "//ledger-service/http-json:http-json-{}".format(edition),
            "//ledger-service/http-json-cli:{}".format(edition),
            "//ledger-service/cli-opts",
            "//ledger-service/metrics",
            "//ledger-service/utils",
            "//ledger/ledger-api-auth",
            "//ledger/ledger-api-common",
            "//libs-scala/contextualized-logging",
            "//libs-scala/jwt",
            "//libs-scala/ledger-resources",
            "//libs-scala/ports",
            "//libs-scala/resources",
            "//libs-scala/scala-utils",
        ],
    )
    for edition in [
        "ce",
        "ee",
    ]
]
