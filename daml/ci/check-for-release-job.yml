# Copyright (c) 2022 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.
# SPDX-License-Identifier: Apache-2.0

jobs:
- job: check_for_release
  dependsOn:
    - git_sha
  variables:
    branch_sha: $[ dependencies.git_sha.outputs['out.branch'] ]
    fork_sha: $[ dependencies.git_sha.outputs['out.fork_point'] ]
  pool:
    name: "ubuntu_20_04"
    demands: assignment -equals default
  steps:
    - template: bash-lib.yml
      parameters:
        var_name: bash-lib
    - bash: |
        set -euo pipefail
        eval "$(./dev-env/bin/dade-assist)"
        source $(bash-lib)

        ./release.sh check

        changes_release_files() {
            changed="$(git diff-tree --no-commit-id --name-only -r $(fork_sha) $(branch_sha) | sort)"
            [ "LATEST" = "$changed" ]
        }

        changes_one_line_in_latest() {
            changed="$(git diff-tree --no-commit-id --numstat -r $(fork_sha) $(branch_sha) -- LATEST | awk '{print $1 "_" $2}')"
            add_one="1_0"
            change_one="1_1"
            [[ "$add_one" == "$changed" || "$change_one" == "$changed" ]]
        }

        added_line() {
            echo "$(git diff $(fork_sha) $(branch_sha) -- LATEST | tail -n+6 | grep '^\+' | cut -c2-)"
        }

        if changes_release_files; then
            if changes_one_line_in_latest; then
                setvar is_release true
                setvar trigger_sha $(branch_sha)
                setvar release_sha "$(added_line | awk '{print $1}')"
                RELEASE_TAG="$(added_line | awk '{print $2}')"
                setvar release_tag "$RELEASE_TAG"
                if [ "$(added_line | awk '{print $3}')" == "SPLIT_RELEASE" ]; then
                  setvar split_release_process true
                else
                  setvar split_release_process false
                fi
            else
                echo "Release commit should only add one version."
                exit 1
            fi
        else
            RELEASE_TAG="0.0.0"
            setvar is_release false
        fi

        # This is the last snapshot that does not support Scala 2.13.
        CMP="$(semver compare "$RELEASE_TAG" '1.11.0-snapshot.20210212.6300.0.ad161d7f')"

        if [[ $CMP == '1' || "$RELEASE_TAG" == '0.0.0' ]]; then
            setvar scala_2_13 true
        else
            setvar scala_2_13 false
        fi
      name: out

