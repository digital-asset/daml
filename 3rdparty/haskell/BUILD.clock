package(default_visibility = ["//visibility:public"])

load("@rules_haskell//haskell:defs.bzl",
  "haskell_library",
)
load("@ai_formation_hazel//:hazel.bzl", "hazel_library")

cc_library(
  name = "cbits-darwin",
  # clock does something rather strange where it includes the C file into the
  # hsc file using a CPP include directive, but also compiles the C file into
  # an object file. Therefore, we both provide the C file as a header, and
  # compile it into an object.
  srcs = ["cbits/hs_clock_darwin.c"],
  hdrs = ["cbits/hs_clock_darwin.c"],
  strip_include_prefix = "cbits",
)

cc_library(
  name = "cbits-windows",
  # clock does something rather strange where it includes the C file into the
  # hsc file using a CPP include directive, but also compiles the C file into
  # an object file. Therefore, we both provide the C file as a header, and
  # compile it into an object.
  srcs = ["cbits/hs_clock_win32.c"],
  hdrs = ["cbits/hs_clock_win32.c"],
  strip_include_prefix = "cbits",
)

cc_library(
  name = "clock-cbits",
  deps = select({
    "@bazel_tools//src/conditions:darwin": [":cbits-darwin"],
    "@bazel_tools//src/conditions:windows": [":cbits-windows"],
    "//conditions:default": [],
  }),
)

haskell_library(
  name = "lib",
  srcs = glob([
    "System/Clock.hsc",
  ]),
  compiler_flags = [
    "-XDeriveGeneric",
    "-XScopedTypeVariables",
    "-XViewPatterns",
  ],
  deps = [
      hazel_library("base"),
      hazel_library("ghc-prim"),
      ":clock-cbits",
  ],
  package_name = "clock",
  version = "0.7.2",
)
