name:          void
category:      Data Structures
version:       0.7.2
license:       BSD3
cabal-version: >= 1.10
license-file:  LICENSE
author:        Edward A. Kmett
maintainer:    Edward A. Kmett <ekmett@gmail.com>
stability:     portable
homepage:      http://github.com/ekmett/void
bug-reports:   http://github.com/ekmett/void/issues
copyright:     Copyright (C) 2008-2015 Edward A. Kmett
synopsis:      A Haskell 98 logically uninhabited data type
description:   A Haskell 98 logically uninhabited data type, used to indicate that a given term should not exist.
build-type:    Simple

extra-source-files:
  .ghci
  .gitignore
  .travis.yml
  .vim.custom
  CHANGELOG.markdown
  README.markdown

source-repository head
  type: git
  location: git://github.com/ekmett/void.git

flag safe
  manual: True
  default: False

library
  default-language: Haskell98
  hs-source-dirs: src
  exposed-modules:
    Data.Void.Unsafe

  build-depends: base >= 3 && < 10

  ghc-options: -Wall

  if flag(safe)
    cpp-options: -DSAFE

  if !impl(ghc>=7.9)
    hs-source-dirs: src-old
    exposed-modules: Data.Void
    build-depends:
      deepseq    >= 1.1 && < 1.5,
      hashable   >= 1.1,
      semigroups >= 0.8.2

    if impl(ghc)
      other-extensions: DeriveDataTypeable
      cpp-options: -DLANGUAGE_DeriveDataTypeable

    if impl(ghc >= 7.2)
      other-extensions: StandaloneDeriving
      -- other-extensions: DeriveGeneric isn't known to cabal yet
      cpp-options: -DLANGUAGE_DeriveGeneric
      build-depends: ghc-prim
