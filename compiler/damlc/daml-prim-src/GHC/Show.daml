-- Copyright (c) 2021 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.
-- SPDX-License-Identifier: Apache-2.0

{-# LANGUAGE NoImplicitPrelude #-}
{-# LANGUAGE MagicHash #-}
{-# LANGUAGE CPP #-}

-- | MOVE Prelude
module GHC.Show
  ( Show(..)
  , ShowS
  , showParen
  , showString
  , showCommaSpace
  , showSpace
  ) where

import Data.String ()  -- Used by the deriving mechanism
import GHC.Base
import GHC.CString (fromString)
import GHC.Tuple ()  -- We're using tuples but they are builtin syntax.
import GHC.Types
import GHC.Classes ()
import DA.Types

-- | `showS` should represent some text, and applying it to some argument
-- should prepend the argument to the represented text.
type ShowS = Text -> Text

-- | Use the `Show` class for values that can be converted to a
-- readable `Text` value.
--
-- Derived instances of `Show` have the following properties:
--
-- * The result of `show` is a syntactically correct expression
--   that only contains constants (given the fixity declarations in
--   force at the point where the type is declared).
--   It only contains the constructor names defined in the data type,
--   parentheses, and spaces. When labelled constructor fields are
--   used, braces, commas, field names, and equal signs are also used.
--
-- * If the constructor is defined to be an infix operator, then
--   `showsPrec` produces infix applications of the constructor.
--
-- * If the  precedence of the top-level constructor in `x` is less than `d`
--   (associativity is ignored), the representation will be enclosed in
--   parentheses. For example, if `d` is `0` then the result
--   is never surrounded in parentheses; if `d` is `11` it is always
--   surrounded in parentheses, unless it is an atomic expression.
--
-- * If the constructor is defined using record syntax, then `show`
--   will produce the record-syntax form, with the fields given in the
--   same order as the original declaration.

class  Show a  where
    {-# MINIMAL showsPrec | show #-}

    -- | Convert a value to a readable `Text` value. Unlike `show`,
    -- `showsPrec` should satisfy the rule
    -- `showsPrec d x r ++ s == showsPrec d x (r ++ s)`

    showsPrec : Int    -- ^ the operator precedence of the enclosing
                        -- context (a number from `0` to `11`).
                        -- Function application has precedence `10`.
              -> a      -- ^ the value to be converted to a `Text`
              -> ShowS

    -- | Convert a value to a readable `Text` value.
    show      : a   -> Text

    -- | Allows you to show lists of values.
    showList  : [a] -> ShowS

    showsPrec _ x s = show x ++ s
    show x          = shows x ""
    showList ls   s = showList__ shows ls s

shows x = showsPrec (I# 0#) x

showList__ : (a -> ShowS) ->  [a] -> ShowS
showList__ _     []     s = "[]" ++ s
showList__ showx (x::xs) s = "[" ++ showx x (showl showx xs s)

showl : (a -> ShowS) -> [a] -> ShowS
showl _ []      s = "]" ++ s
showl showx (y::ys) s = "," ++ showx y (showl showx ys s)


-- | Utility function that surrounds the inner show function with
-- parentheses when the 'Bool' parameter is 'True'.
showParen       : Bool -> ShowS -> ShowS
showParen b p   =  if b then showString "(" . p . showString ")" else p


-- | Utility function converting a 'String' to a show function that
-- simply prepends the string unchanged.
showString      : Text -> ShowS
showString = (++)

-- | Prepends a single space to the front of the string.
showSpace : ShowS
showSpace = showString " "

-- | Prepends a comma and a single space to the front of the string.
showCommaSpace : ShowS
showCommaSpace = showString ", "

deriving instance Show ()
deriving instance Show Ordering
deriving instance Show Bool
deriving instance (Show a, Show b) => Show (Either a b)

instance Show Int where
  show = primitive @"BEToText"

#ifdef DAML_NUMERIC
instance Show (Numeric n) where
  show = primitive @"BEToTextNumeric"
#else
instance Show Decimal where
  show = primitive @"BEToText"
#endif

instance Show Text where
  show x = "\"" ++ x ++ "\""

instance Show a => Show [a]  where
  showsPrec _ = showList

instance (Show a, Show b) => Show (a,b) where
  showsPrec _ (a,b) =
    showString "("
    . shows a
    . showString ","
    . shows b
    . showString ")"

instance (Show a, Show b, Show c) => Show (a,b,c) where
  showsPrec _ (a,b,c) =
    showString "("
    . shows a
    . showString ","
    . shows b
    . showString ","
    . shows c
    . showString ")"

instance (Show a, Show b, Show c, Show d) => Show (a,b,c,d) where
  showsPrec _ (a,b,c,d) =
    showString "("
    . shows a
    . showString ","
    . shows b
    . showString ","
    . shows c
    . showString ","
    . shows d
    . showString ")"

instance (Show a, Show b, Show c, Show d, Show e) => Show (a,b,c,d,e) where
  showsPrec _ (a,b,c,d,e) =
    showString "("
    . shows a
    . showString ","
    . shows b
    . showString ","
    . shows c
    . showString ","
    . shows d
    . showString ","
    . shows e
    . showString ")"

instance (Show a, Show b, Show c, Show d, Show e, Show f) => Show (a, b, c, d, e, f) where
  showsPrec _ (a, b, c, d, e, f) =
    showString "("
    . shows a
    . showString ","
    . shows b
    . showString ","
    . shows c
    . showString ","
    . shows d
    . showString ","
    . shows e
    . showString ","
    . shows f
    . showString ")"

instance (Show a, Show b, Show c, Show d, Show e, Show f, Show g) => Show (a, b, c, d, e, f, g) where
  showsPrec _ (a, b, c, d, e, f, g) =
    showString "("
    . shows a
    . showString ","
    . shows b
    . showString ","
    . shows c
    . showString ","
    . shows d
    . showString ","
    . shows e
    . showString ","
    . shows f
    . showString ","
    . shows g
    . showString ")"

instance (Show a, Show b, Show c, Show d, Show e, Show f, Show g, Show h) => Show (a, b, c, d, e, f, g, h) where
  showsPrec _ (a, b, c, d, e, f, g, h) =
    showString "("
    . shows a
    . showString ","
    . shows b
    . showString ","
    . shows c
    . showString ","
    . shows d
    . showString ","
    . shows e
    . showString ","
    . shows f
    . showString ","
    . shows g
    . showString ","
    . shows h
    . showString ")"

instance (Show a, Show b, Show c, Show d, Show e, Show f, Show g, Show h, Show i) => Show (a, b, c, d, e, f, g, h, i) where
  showsPrec _ (a, b, c, d, e, f, g, h, i) =
    showString "("
    . shows a
    . showString ","
    . shows b
    . showString ","
    . shows c
    . showString ","
    . shows d
    . showString ","
    . shows e
    . showString ","
    . shows f
    . showString ","
    . shows g
    . showString ","
    . shows h
    . showString ","
    . shows i
    . showString ")"

instance (Show a, Show b, Show c, Show d, Show e, Show f, Show g, Show h, Show i, Show j) => Show (a, b, c, d, e, f, g, h, i, j) where
  showsPrec _ (a, b, c, d, e, f, g, h, i, j) =
    showString "("
    . shows a
    . showString ","
    . shows b
    . showString ","
    . shows c
    . showString ","
    . shows d
    . showString ","
    . shows e
    . showString ","
    . shows f
    . showString ","
    . shows g
    . showString ","
    . shows h
    . showString ","
    . shows i
    . showString ","
    . shows j
    . showString ")"

instance (Show a, Show b, Show c, Show d, Show e, Show f, Show g, Show h, Show i, Show j, Show k) => Show (a, b, c, d, e, f, g, h, i, j, k) where
  showsPrec _ (a, b, c, d, e, f, g, h, i, j, k) =
    showString "("
    . shows a
    . showString ","
    . shows b
    . showString ","
    . shows c
    . showString ","
    . shows d
    . showString ","
    . shows e
    . showString ","
    . shows f
    . showString ","
    . shows g
    . showString ","
    . shows h
    . showString ","
    . shows i
    . showString ","
    . shows j
    . showString ","
    . shows k
    . showString ")"

instance (Show a, Show b, Show c, Show d, Show e, Show f, Show g, Show h, Show i, Show j, Show k, Show l) => Show (a, b, c, d, e, f, g, h, i, j, k, l) where
  showsPrec _ (a, b, c, d, e, f, g, h, i, j, k, l) =
    showString "("
    . shows a
    . showString ","
    . shows b
    . showString ","
    . shows c
    . showString ","
    . shows d
    . showString ","
    . shows e
    . showString ","
    . shows f
    . showString ","
    . shows g
    . showString ","
    . shows h
    . showString ","
    . shows i
    . showString ","
    . shows j
    . showString ","
    . shows k
    . showString ","
    . shows l
    . showString ")"

instance (Show a, Show b, Show c, Show d, Show e, Show f, Show g, Show h, Show i, Show j, Show k, Show l, Show m) => Show (a, b, c, d, e, f, g, h, i, j, k, l, m) where
  showsPrec _ (a, b, c, d, e, f, g, h, i, j, k, l, m) =
    showString "("
    . shows a
    . showString ","
    . shows b
    . showString ","
    . shows c
    . showString ","
    . shows d
    . showString ","
    . shows e
    . showString ","
    . shows f
    . showString ","
    . shows g
    . showString ","
    . shows h
    . showString ","
    . shows i
    . showString ","
    . shows j
    . showString ","
    . shows k
    . showString ","
    . shows l
    . showString ","
    . shows m
    . showString ")"

instance (Show a, Show b, Show c, Show d, Show e, Show f, Show g, Show h, Show i, Show j, Show k, Show l, Show m, Show n) => Show (a, b, c, d, e, f, g, h, i, j, k, l, m, n) where
  showsPrec _ (a, b, c, d, e, f, g, h, i, j, k, l, m, n) =
    showString "("
    . shows a
    . showString ","
    . shows b
    . showString ","
    . shows c
    . showString ","
    . shows d
    . showString ","
    . shows e
    . showString ","
    . shows f
    . showString ","
    . shows g
    . showString ","
    . shows h
    . showString ","
    . shows i
    . showString ","
    . shows j
    . showString ","
    . shows k
    . showString ","
    . shows l
    . showString ","
    . shows m
    . showString ","
    . shows n
    . showString ")"

instance (Show a, Show b, Show c, Show d, Show e, Show f, Show g, Show h, Show i, Show j, Show k, Show l, Show m, Show n, Show o) => Show (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) where
  showsPrec _ (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) =
    showString "("
    . shows a
    . showString ","
    . shows b
    . showString ","
    . shows c
    . showString ","
    . shows d
    . showString ","
    . shows e
    . showString ","
    . shows f
    . showString ","
    . shows g
    . showString ","
    . shows h
    . showString ","
    . shows i
    . showString ","
    . shows j
    . showString ","
    . shows k
    . showString ","
    . shows l
    . showString ","
    . shows m
    . showString ","
    . shows n
    . showString ","
    . shows o
    . showString ")"

instance (Show a, Show b, Show c, Show d, Show e, Show f, Show g, Show h, Show i, Show j, Show k, Show l, Show m, Show n, Show o, Show p) => Show (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) where
  showsPrec _ (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) =
    showString "("
    . shows a
    . showString ","
    . shows b
    . showString ","
    . shows c
    . showString ","
    . shows d
    . showString ","
    . shows e
    . showString ","
    . shows f
    . showString ","
    . shows g
    . showString ","
    . shows h
    . showString ","
    . shows i
    . showString ","
    . shows j
    . showString ","
    . shows k
    . showString ","
    . shows l
    . showString ","
    . shows m
    . showString ","
    . shows n
    . showString ","
    . shows o
    . showString ","
    . shows p
    . showString ")"

instance (Show a, Show b, Show c, Show d, Show e, Show f, Show g, Show h, Show i, Show j, Show k, Show l, Show m, Show n, Show o, Show p, Show q) => Show (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) where
  showsPrec _ (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) =
    showString "("
    . shows a
    . showString ","
    . shows b
    . showString ","
    . shows c
    . showString ","
    . shows d
    . showString ","
    . shows e
    . showString ","
    . shows f
    . showString ","
    . shows g
    . showString ","
    . shows h
    . showString ","
    . shows i
    . showString ","
    . shows j
    . showString ","
    . shows k
    . showString ","
    . shows l
    . showString ","
    . shows m
    . showString ","
    . shows n
    . showString ","
    . shows o
    . showString ","
    . shows p
    . showString ","
    . shows q
    . showString ")"

instance (Show a, Show b, Show c, Show d, Show e, Show f, Show g, Show h, Show i, Show j, Show k, Show l, Show m, Show n, Show o, Show p, Show q, Show r) => Show (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) where
  showsPrec _ (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) =
    showString "("
    . shows a
    . showString ","
    . shows b
    . showString ","
    . shows c
    . showString ","
    . shows d
    . showString ","
    . shows e
    . showString ","
    . shows f
    . showString ","
    . shows g
    . showString ","
    . shows h
    . showString ","
    . shows i
    . showString ","
    . shows j
    . showString ","
    . shows k
    . showString ","
    . shows l
    . showString ","
    . shows m
    . showString ","
    . shows n
    . showString ","
    . shows o
    . showString ","
    . shows p
    . showString ","
    . shows q
    . showString ","
    . shows r
    . showString ")"

instance (Show a, Show b, Show c, Show d, Show e, Show f, Show g, Show h, Show i, Show j, Show k, Show l, Show m, Show n, Show o, Show p, Show q, Show r, Show s) => Show (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) where
  showsPrec _ (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) =
    showString "("
    . shows a
    . showString ","
    . shows b
    . showString ","
    . shows c
    . showString ","
    . shows d
    . showString ","
    . shows e
    . showString ","
    . shows f
    . showString ","
    . shows g
    . showString ","
    . shows h
    . showString ","
    . shows i
    . showString ","
    . shows j
    . showString ","
    . shows k
    . showString ","
    . shows l
    . showString ","
    . shows m
    . showString ","
    . shows n
    . showString ","
    . shows o
    . showString ","
    . shows p
    . showString ","
    . shows q
    . showString ","
    . shows r
    . showString ","
    . shows s
    . showString ")"

instance (Show a, Show b, Show c, Show d, Show e, Show f, Show g, Show h, Show i, Show j, Show k, Show l, Show m, Show n, Show o, Show p, Show q, Show r, Show s, Show t) => Show (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) where
  showsPrec _ (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) =
    showString "("
    . shows a
    . showString ","
    . shows b
    . showString ","
    . shows c
    . showString ","
    . shows d
    . showString ","
    . shows e
    . showString ","
    . shows f
    . showString ","
    . shows g
    . showString ","
    . shows h
    . showString ","
    . shows i
    . showString ","
    . shows j
    . showString ","
    . shows k
    . showString ","
    . shows l
    . showString ","
    . shows m
    . showString ","
    . shows n
    . showString ","
    . shows o
    . showString ","
    . shows p
    . showString ","
    . shows q
    . showString ","
    . shows r
    . showString ","
    . shows s
    . showString ","
    . shows t
    . showString ")"
