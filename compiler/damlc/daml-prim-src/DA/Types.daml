-- Copyright (c) 2020 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.
-- SPDX-License-Identifier: Apache-2.0

{-# LANGUAGE NoImplicitPrelude #-}


-- | MOVE Prelude A module containing all the standard types from the base libraries,
--   so they have nice names when used from Java or similar.
module DA.Types
  ( Either (..)
  ) where

import GHC.Types()

-- | The `Either` type represents values with two possibilities: a value of
-- type `Either a b` is either `Left a` or `Right b`.
--
-- The `Either` type is sometimes used to represent a value which is
-- either correct or an error; by convention, the `Left` constructor is
-- used to hold an error value and the `Right` constructor is used to
-- hold a correct value (mnemonic: "right" also means "correct").
data Either a b = Left a | Right b


-- NOTE(MH): These types are not supposed to be used in DAML. The converter to
-- DAML-LF rewrites the types above to them, so they are visible to non-DAML users.
data Tuple2 a b =
    Tuple2{_1 : a; _2 : b}
data Tuple3 a b c =
    Tuple3{_1 : a; _2 : b; _3 : c}
data Tuple4 a b c d =
    Tuple4{_1 : a; _2 : b; _3 : c; _4 : d}
data Tuple5 a b c d e =
    Tuple5{_1 : a; _2 : b; _3 : c; _4 : d, _5 : e}
data Tuple6 a b c d e f =
    Tuple6{_1 : a; _2 : b; _3 : c; _4 : d; _5 : e; _6 : f}
data Tuple7 a b c d e f g =
    Tuple7{_1 : a; _2 : b; _3 : c; _4 : d; _5 : e; _6 : f; _7 : g}
data Tuple8 a b c d e f g h =
    Tuple8{_1 : a; _2 : b; _3 : c; _4 : d; _5 : e; _6 : f; _7 : g; _8 : h}
data Tuple9 a b c d e f g h i =
    Tuple9{_1 : a; _2 : b; _3 : c; _4 : d; _5 : e; _6 : f; _7 : g; _8 : h; _9 : i}
data Tuple10 a b c d e f g h i j =
    Tuple10{_1 : a; _2 : b; _3 : c; _4 : d; _5 : e; _6 : f; _7 : g; _8 : h; _9 : i; _10 : j}
data Tuple11 a b c d e f g h i j k =
    Tuple11{_1 : a; _2 : b; _3 : c; _4 : d; _5 : e; _6 : f; _7 : g; _8 : h; _9 : i; _10 : j; _11 : k}
data Tuple12 a b c d e f g h i j k l =
    Tuple12{_1 : a; _2 : b; _3 : c; _4 : d; _5 : e; _6 : f; _7 : g; _8 : h; _9 : i; _10 : j; _11 : k; _12 : l}
data Tuple13 a b c d e f g h i j k l m =
    Tuple13{_1 : a; _2 : b; _3 : c; _4 : d; _5 : e; _6 : f; _7 : g; _8 : h; _9 : i; _10 : j; _11 : k; _12 : l; _13 : m}
data Tuple14 a b c d e f g h i j k l m n =
    Tuple14{_1 : a; _2 : b; _3 : c; _4 : d; _5 : e; _6 : f; _7 : g; _8 : h; _9 : i; _10 : j; _11 : k; _12 : l; _13 : m; _14 : n}
data Tuple15 a b c d e f g h i j k l m n o =
    Tuple15{_1 : a; _2 : b; _3 : c; _4 : d; _5 : e; _6 : f; _7 : g; _8 : h; _9 : i; _10 : j; _11 : k; _12 : l; _13 : m; _14 : n; _15 : o}
data Tuple16 a b c d e f g h i j k l m n o p =
    Tuple16{_1 : a; _2 : b; _3 : c; _4 : d; _5 : e; _6 : f; _7 : g; _8 : h; _9 : i; _10 : j; _11 : k; _12 : l; _13 : m; _14 : n; _15 : o; _16 : p}
data Tuple17 a b c d e f g h i j k l m n o p q =
    Tuple17{_1 : a; _2 : b; _3 : c; _4 : d; _5 : e; _6 : f; _7 : g; _8 : h; _9 : i; _10 : j; _11 : k; _12 : l; _13 : m; _14 : n; _15 : o; _16 : p; _17 : q}
data Tuple18 a b c d e f g h i j k l m n o p q r =
    Tuple18{_1 : a; _2 : b; _3 : c; _4 : d; _5 : e; _6 : f; _7 : g; _8 : h; _9 : i; _10 : j; _11 : k; _12 : l; _13 : m; _14 : n; _15 : o; _16 : p; _17 : q; _18 : r}
data Tuple19 a b c d e f g h i j k l m n o p q r s =
    Tuple19{_1 : a; _2 : b; _3 : c; _4 : d; _5 : e; _6 : f; _7 : g; _8 : h; _9 : i; _10 : j; _11 : k; _12 : l; _13 : m; _14 : n; _15 : o; _16 : p; _17 : q; _18 : r; _19 : s}
data Tuple20 a b c d e f g h i j k l m n o p q r s t =
    Tuple20{_1 : a; _2 : b; _3 : c; _4 : d; _5 : e; _6 : f; _7 : g; _8 : h; _9 : i; _10 : j; _11 : k; _12 : l; _13 : m; _14 : n; _15 : o; _16 : p; _17 : q; _18 : r; _19 : s; _20 : t}
