-- Copyright (c) 2020 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.
-- SPDX-License-Identifier: Apache-2.0

-- | Tuple - Ubiquitous functions of tuples.
module DA.Tuple
  ( fst
  , snd
  , curry
  , uncurry
  , module DA.Tuple
  ) where

-- | The pair obtained from a pair by application of a programmer
-- supplied function to the argument pair's first field.
first : (a -> a') -> (a, b) -> (a', b)
first f (x, y) = (f x, y)

-- | The pair obtained from a pair by application of a programmer
-- supplied function to the argument pair's second field.
second : (b -> b') -> (a, b) -> (a, b')
second f (x, y) = (x, f y)

-- | The pair obtained from a pair by application of a programmer
-- supplied function to both the argument pair's first and second
-- fields.
both : (a -> b) -> (a, a) -> (b, b)
both f (x, y) = (f x, f y)

-- | The pair obtained from a pair by permuting the order of the
-- argument pair's first and second fields.
swap : (a, b) -> (b, a)
swap (x, y) = (y, x)

-- | Duplicate a single value into a pair.
--
-- > dupe 12 == (12, 12)
dupe : a -> (a,a)
dupe x = (x,x)

-- | Extract the 'fst' of a triple.
fst3 : (a,b,c) -> a
fst3 (a,b,c) = a

-- | Extract the 'snd' of a triple.
snd3 : (a,b,c) -> b
snd3 (a,b,c) = b

-- | Extract the final element of a triple.
thd3 : (a,b,c) -> c
thd3 (a,b,c) = c

-- | Converts an uncurried function to a curried function.
curry3 : ((a, b, c) -> d) -> a -> b -> c -> d
curry3 f a b c = f (a,b,c)

-- | Converts a curried function to a function on a triple.
uncurry3 : (a -> b -> c -> d) -> ((a, b, c) -> d)
uncurry3 f ~(a,b,c) = f a b c
