-- Copyright (c) 2021 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.
-- SPDX-License-Identifier: Apache-2.0

{-# LANGUAGE CPP #-}
{-# LANGUAGE NoImplicitPrelude #-}

#ifndef DAML_EXCEPTIONS

-- | HIDE
module DA.Internal.Exception where

#else

-- | MOVE DA.Exception This module contains the definitions needed for exception desugaring.
module DA.Internal.Exception
    ( module DA.Internal.Exception
    , AnyException
    , GeneralError
    , ArithmeticError
    , ContractError
    ) where

import GHC.Types
import DA.Internal.LF
import DA.Internal.Prelude ( Optional (..) )

type Exception e =
    ( HasMessage e
    , HasThrow e
    , HasToAnyException e
    , HasFromAnyException e
    )

class HasMessage e where
    message : e -> Text

class HasThrow e where
    throwPure : forall t. e -> t

class HasToAnyException e where
    toAnyException : e -> AnyException

class HasFromAnyException e where
    fromAnyException : AnyException -> Optional e

{--
instance HasMessage AnyException where
    message = primitive @"BEAnyExceptionMessage"
instance HasMessage GeneralError where
    message = primitive @"BEGeneralErrorMessage"
instance HasMessage ArithmeticError where
    message = primitive @"BEArithmeticErrorMessage"
instance HasMessage ContractError where
    message = primitive @"BEContractErrorMessage"
--}

{--
instance HasThrow GeneralError where
    throwPure = primitive @"EThrow"
instance HasThrow ArithmeticError where
    throwPure = primitive @"EThrow"
instance HasThrow ContractError where
    throwPure = primitive @"EThrow"
--}

instance HasToAnyException AnyException where
    toAnyException e = e
{--
instance HasToAnyException GeneralError where
    toAnyException = primitive @"EToAnyException"
instance HasToAnyException ArithmeticError where
    toAnyException = primitive @"EToAnyException"
instance HasToAnyException ContractError where
    toAnyException = primitive @"EToAnyException"
--}

instance HasFromAnyException AnyException where
    fromAnyException = Some
{--
instance HasFromAnyException GeneralError where
    fromAnyException = primitive @"EFromAnyException"
instance HasFromAnyException ArithmeticError where
    fromAnyException = primitive @"EFromAnyException"
instance HasFromAnyException ContractError where
    fromAnyException = primitive @"EFromAnyException"
--}


#endif
