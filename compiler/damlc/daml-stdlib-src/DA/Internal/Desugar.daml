-- Copyright (c) 2021 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.
-- SPDX-License-Identifier: Apache-2.0

{-# LANGUAGE CPP #-}
{-# LANGUAGE AllowAmbiguousTypes #-}
{-# LANGUAGE NoImplicitPrelude #-}


-- | HIDE Automatically imported qualified in every module.
module DA.Internal.Desugar (
    module DA.Internal.Template,
    module DA.Internal.Template.Functions,
    module DA.Internal.Exception,
    Eq(..), Show(..),
    Bool(..), Text, Optional(..),
    concat, magic,
    Party, ContractId, Update, Any,
    NonConsuming(..), PreConsuming(..), PostConsuming(..), Consuming(..),
    Implements(..),
    TypeRep,
) where

import DA.Internal.Prelude
import DA.Internal.Template
import DA.Internal.Template.Functions
import DA.Internal.LF
#ifndef DAML_EXCEPTIONS
import DA.Internal.Exception ()
#else
import DA.Internal.Exception
#endif
import GHC.Types (magic, Symbol)

-- These are only used as markers by desugaring, we do not translate them to LF.
data NonConsuming t = NonConsuming {}
data PreConsuming t = PreConsuming {}
data Consuming t = Consuming {}
data PostConsuming t = PostConsuming {}

class Implements t i where
  toInterface : t -> i
  fromInterface : i -> Optional t
  toInterfaceContractId : ContractId t -> ContractId i
  fromInterfaceContractId : ContractId i -> Update (Optional (ContractId t))
  interfaceTypeRep : t -> TypeRep
