-- Copyright (c) 2020 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.
-- SPDX-License-Identifier: Apache-2.0

module DA.Monoid
  ( All(..)
  , Any(..)
  , Endo(..)
  , Sum(..)
  , Product(..)
  ) where

import DA.Monoid.Types

deriving instance Eq All
deriving instance Ord All
deriving instance Show All

instance Semigroup All where
  All a1 <> All a2 = All $ a1 && a2

-- | Boolean Monoid under conjunction (&&)
instance Monoid All where
  mempty = All True


deriving instance Eq Any
deriving instance Ord Any
deriving instance Show Any

instance Semigroup Any where
  Any a1 <> Any a2 = Any $ a1 || a2

-- | Boolean Monoid under disjunction (||)
instance Monoid Any where
  mempty = Any False


instance Semigroup (Endo a) where
  Endo e1 <> Endo e2 = Endo $ e1 . e2

instance Monoid (Endo a) where
  mempty = Endo identity

deriving instance Eq a => Eq (Sum a)
deriving instance Ord a => Ord (Sum a)
deriving instance Show a => Show (Sum a)
deriving instance Additive a => Additive (Sum a)
deriving instance Multiplicative a => Multiplicative (Sum a)

instance Additive a => Semigroup (Sum a) where
  Sum a <> Sum b = Sum (a + b)

instance Additive a => Monoid (Sum a) where
  mempty = aunit


deriving instance Eq a => Eq (Product a)
deriving instance Ord a => Ord (Product a)
deriving instance Show a => Show (Product a)
deriving instance Additive a => Additive (Product a)
deriving instance Multiplicative a => Multiplicative (Product a)

instance Multiplicative a => Semigroup (Product a) where
  Product a <> Product b = Product (a * b)

instance Multiplicative a => Monoid (Product a) where
  mempty = munit

instance DA.Internal.Record.HasField "getAll" All Bool where
  getField (All x) = x
  setField x _ = All x

instance DA.Internal.Record.HasField "getAny" Any Bool where
  getField (Any x) = x
  setField x _ = Any x

instance DA.Internal.Record.HasField "appEndo" (Endo a) (a -> a) where
  getField (Endo f) = f
  setField f _ = Endo f
