-- Copyright (c) 2020 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.
-- SPDX-License-Identifier: Apache-2.0
{-# LANGUAGE CPP #-}

-- | The pieces that make up the DAML language.
module Prelude (module X) where

import DA.Internal.Prelude as X hiding (magic)
import DA.Internal.LF as X hiding (Pair(..), TextMap, Map, unpackPair, Any)
-- Template desugaring uses fromAnyTemplate and toAnyTemplate so we
-- canâ€™t remove them from the typeclass for older LF versions
-- but we can hide them.
#ifdef DAML_ANY_TYPE
import DA.Internal.Any as X
import DA.Internal.Template as X
import DA.Internal.Template.Functions as X
#else
import DA.Internal.Template as X
import DA.Internal.Template.Functions as X
  hiding
  ( fromAnyTemplate, toAnyTemplate
  , fromAnyChoice, toAnyChoice, _fromAnyChoice, _toAnyChoice
  , _templateTypeRep, templateTypeRep
  , toAnyContractKey, _toAnyContractKey, fromAnyContractKey, _fromAnyContractKey)
#endif
import DA.Internal.Compatible as X
import DA.Internal.Assert as X
