-- Copyright (c) 2020, Digital Asset (Switzerland) GmbH and/or its affiliates.
-- All rights reserved.

module RecordDotUpdates where

data Outer = Outer {
  inner : Inner,
  text : Text,
  int : Int
}

data Inner = Inner {
  text : Text,
  int : Int
}

data OuterW = OuterW with
  inner : Inner
  text : Text
  int : Int

f : Outer -> Outer
f o = o { text = "hello"
        , inner.text = "world"
        , inner.int = 42
        , int = 31
        }

g : Outer -> Outer
g o = o with text = "foo"
             inner.text = "bar"
             inner.int = 1
             int = 2

h : Outer -> Outer
h o = o with

i : OuterW -> OuterW
i o = o { text = "hello"
        , inner.text = "world"
        , inner.int = 42
        , int = 31
        }


x = Inner {text = "hello", int = 42}
x' = let text = "world" in x {text}

y = Outer {inner = x, text = "world", int = 21}
y' = let text = "world" in let int = 12 in y {text, inner.text = text, int, inner.int = int}

z = let Outer {..} = y in Outer {..}
