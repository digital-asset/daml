-- Copyright (c) 2019, Digital Asset (Switzerland) GmbH and/or its affiliates.
-- All rights reserved.

daml 1.2
module Records_more where

-- Tests for 'HasField' record preprocessor rewrites.

data A = A with x: Int deriving Eq
data B = B with y: A; z: A deriving Eq
data C = C {a : Int, b : Int} deriving Eq

main = scenario do

  f <- return $ \ x y z -> x {a = y, b = z}
  assert $ f C{a = 1, b = 2} 3 4 == C{a = 3, b = 4}
  f <- return $ \ x y z -> x {a = y + z}
  assert $ f C{a = 1, b = 2} 1 2 == C{a = 3, b = 2}
  f <- return $ \ x a -> B a with x a with x
  assert $ f 1 A{x = 12} == B (A 1) (A 1)
  f <- return $ \ a -> a {x = a.x + 1}
  assert $ (f A{x = 1}).x == 2
  f <- return $ \b -> b {y = b.y, z = b.z{x = 4}}
  assert $ (f B{y = A{x = 1}, z = A{x = 2}}).z.x == 4
  assert $ let res = f B{y = A{x = 1}, z = A{x = 2}} in res.z.x == 4
  f <- return $ \b -> b {y = b.y, z = b.z{x = (\ x -> x * x) b.z.x}}
  assert $ (f B{y = A{x = 1}, z = A{x = 2}}).z.x == 4
  f <- return $ \b -> b {y = b.y{x = b.y.x + 1}, z = b.z{x = (\ x -> x * x) b.z{x = b.z.x}.x}}
  assert $ (f B{y = A{x = 1}, z = A{x = 2}}).y.x == 2
  assert $ (f B{y = A{x = 1}, z = A{x = 2}}).z.x == 4

  f <- return $ \ l -> map (.x) l
  assert $ f [A 1, A 2, A 3] == [1, 2, 3]
  f <- return $ \ l -> map (.y.x) l
  assert $ f [B (A 1) (A 2), B (A 2) (A 3), B (A 3) (A 4)] == [1, 2, 3]
