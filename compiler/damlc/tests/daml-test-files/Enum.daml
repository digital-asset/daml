-- Copyright (c) 2020, Digital Asset (Switzerland) GmbH and/or its affiliates.
-- All rights reserved.


module Enum where

import DA.Assert

data Days = Mon | Tue | Wed | Thu | Fri | Sat | Sun
  deriving (Eq,Bounded,Enum,Show)

main = scenario do
  show (minBound : Int) === "-9223372036854775808"
  show (maxBound : Int) === "9223372036854775807"
  minBound === Mon
  maxBound === Sun
  succ Mon === Tue
  pred Thu === Wed
  [Fri ..] === [Fri,Sat,Sun]
  [Tue .. Thu] === [Tue,Wed,Thu]
  [Mon, Wed ..] === [Mon,Wed,Fri,Sun]
  [Mon, Wed .. Sat] === [Mon,Wed,Fri]
  [Tue, Thu .. Thu] === [Tue,Thu]
  [Tue, Thu .. Wed] === [Tue]
  [Tue, Thu .. Tue] === [Tue]
  [Tue, Thu .. Mon] === []
  [Sun, Sat ..] === [Sun,Sat,Fri,Thu,Wed,Tue,Mon]
  [Sun, Sat .. Tue] === [Sun,Sat,Fri,Thu,Wed,Tue]
  [Sun, Fri .. Mon] === [Sun,Fri,Wed,Mon]
  [Sun, Fri .. Tue] === [Sun,Fri,Wed]
  [Sun, Fri .. Wed] === [Sun,Fri,Wed]
  [Sat, Wed .. Tue] === [Sat, Wed]
  [Sat, Wed .. Wed] === [Sat, Wed]
  [Sat, Wed .. Fri] === [Sat]
  [Sat, Wed .. Sat] === [Sat]
  [Sat, Wed .. Sun] === []
  enumerate === [Mon,Tue,Wed,Thu,Fri,Sat,Sun]
  alice <- getParty "alice"
  submitMustFail alice do
    succ Sun === Mon
