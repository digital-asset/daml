-- Copyright (c) 2020, Digital Asset (Switzerland) GmbH and/or its affiliates.
-- All rights reserved.

module MoreChoiceObserverDivulgence where

import Daml.Script

-- @SINCE-LF 2.1

-- This example is a small modification of `DiscloseViaChoiceObserver`, but now the divulgence is achieved using a separate `Divulger` template, with a `Divulge` choice, which does a `fetch` on the given `id`, in the view of a choice-observer.

template Secret with
    owner: Party
    text: Text
  where
    signatory owner
    nonconsuming choice Reveal: Text with
        receiver: Party
      controller receiver
      do pure text

template Divulger with
    owner: Party
  where
    signatory owner
    nonconsuming choice Divulge: () with
        id: ContractId Secret
        divulgee: Party
      observer divulgee
      controller owner
      do
        _ <- fetch id
        pure ()

-- @ERROR range=37:1-37:5; Attempt to fetch or exercise a contract not visible to the reading parties.
test : Script ()
test = script do
    alice <- allocateParty "Alice"
    bob <- allocateParty "Bob"
    -- (1) Alice creates a secret
    id <- submit alice do createCmd Secret with owner = alice; text = "s3cr3t"
    -- (2) Bob cannot see the secret
    submitMustFail bob do exerciseCmd id Reveal with receiver = bob
    -- (3) Alice creates a divulger & uses it
    submit alice do
      createAndExerciseCmd (Divulger with owner = alice) (Divulge with divulgee = bob; id)
    -- (4) Now Bob can see the secret
    submit bob do exerciseCmd id Reveal with receiver = bob
    pure ()
