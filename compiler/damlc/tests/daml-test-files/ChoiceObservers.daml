-- Copyright (c) 2020, Digital Asset (Switzerland) GmbH and/or its affiliates.
-- All rights reserved.

module ChoiceObservers where

-- @SINCE-LF 1.dev

-- @QUERY-LF [ .modules[] | .templates[] | select(lf::get_template_name($pkg) == ["TheTemplate"]) | .choices[] | select(lf::get_name($pkg) == "C1") | .observers ] == [ null ]

-- @QUERY-LF [ .modules[] | .templates[] | select(lf::get_template_name($pkg) == ["TheTemplate"]) | .choices[] | select(lf::get_name($pkg) == "C2") | .observers | has("app") ] == [ true ]


template TheTemplate
  with
    s : Party
  where
    signatory s

    let another = s

    -- Existing syntax: choice with controller.
    choice C1 : () with xs : [Party]
      controller xs
      do return ()

    -- New syntax: choice with observer and controller.
    choice C2 : () with ys : [Party]
      observer ys
      controller ys
      do return ()

    choice C3 : () with ys : [Party]
      observer ([]:[Party]) -- explicit empty choice observers; should be distinguishable from no observer clause
      controller ys
      do return ()

    choice C4 : () with ys : [Party]
      observer [this.s, s, another] ++ arg.ys ++ ys -- check everything is correctly in scope
      controller ys
      do return ()
