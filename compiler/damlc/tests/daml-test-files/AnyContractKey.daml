-- Copyright (c) 2019, Digital Asset (Switzerland) GmbH and/or its affiliates.
-- All rights reserved.

-- @SINCE-LF 1.7
daml 1.2 module AnyContractKey where

import DA.Assert

template T1
  with
    x : Int
    p : Party
  where
    signatory p
    key p : Party
    maintainer key

template T2
  with
    y : Text
    p : Party
  where
    signatory p
    key (p, y) : (Party, Text)
    maintainer key._1

template Template t => GenericT t
  with
    wrapped : t
    p : Party
  where
    signatory p
    key (p, wrapped) : (Party, t)
    maintainer key._1

template instance GT1 = GenericT T1
template instance GT2 = GenericT T2

main = scenario do
  p <- getParty "alice"
  fromAnyContractKey @T1 (toAnyContractKey @T1 p) === Some p
  fromAnyContractKey @T2 (toAnyContractKey @T2 (p, "foobar")) === Some (p, "foobar")

  fromAnyContractKey @T2 (toAnyContractKey @T1 p) === None
  fromAnyContractKey @T1 (toAnyContractKey @T2 (p, "foobar")) === None

  fromAnyContractKey @GT1 (toAnyContractKey @GT1 (p, (T1 0 p))) === Some (p, T1 0 p)
  fromAnyContractKey @GT2 (toAnyContractKey @GT1 (p, (T1 0 p))) === None
