-- Copyright (c) 2023 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.
-- SPDX-License-Identifier: Apache-2.0

-- @SINCE-LF-FEATURE DAML_INTERFACE
-- @ENABLE-SCENARIOS

module ChoiceFunctions where

import DA.Assert ((===))

data EmptyInterfaceView = EmptyInterfaceView {}

template T
  with
    p : Party
  where
    signatory p

    choice C1 : ()
      controller p
      do pure ()
    choice C2 : ()
      with
        q, r : Party
      observer r
      controller p, q
      do pure ()

instance HasChoiceController T C1 where
  _choiceController = GHC.Types.primitive @"EChoiceController"

instance HasChoiceObserver T C1 where
  _choiceObserver = GHC.Types.primitive @"EChoiceObserver"

instance HasChoiceController T C2 where
  _choiceController = GHC.Types.primitive @"EChoiceController"

instance HasChoiceObserver T C2 where
  _choiceObserver = GHC.Types.primitive @"EChoiceObserver"

interface I where
  viewtype EmptyInterfaceView

  pi : Party

  choice C3 : ()
    controller pi this
    do pure ()
  choice C4 : ()
    with
      q, r : Party
    observer r
    controller pi this, q
    do pure ()

  interface instance I for T where
    view = EmptyInterfaceView
    pi = p

instance HasChoiceController I C3 where
  _choiceController = GHC.Types.primitive @"EChoiceController"

instance HasChoiceObserver I C3 where
  _choiceObserver = GHC.Types.primitive @"EChoiceObserver"

instance HasChoiceController I C4 where
  _choiceController = GHC.Types.primitive @"EChoiceController"

instance HasChoiceObserver I C4 where
  _choiceObserver = GHC.Types.primitive @"EChoiceObserver"

main = scenario do
  a <- getParty "a"
  b <- getParty "b"
  c <- getParty "c"
  d <- getParty "d"

  choiceController (T a) C1 === [a]
  choiceObserver (T a) C1 === []
  choiceController (T b) C1 === [b]
  choiceObserver (T b) C1 === []

  choiceController (T a) (C2 c d) === [a, c]
  choiceObserver (T a) (C2 c d) === [d]
  choiceController (T b) (C2 c d) === [b, c]
  choiceObserver (T b) (C2 c d) === [d]

  choiceController (toInterface @I (T a)) C3 === [a]
  choiceObserver (toInterface @I (T a)) C3 === []
  choiceController (toInterface @I (T b)) C3 === [b]
  choiceObserver (toInterface @I (T b)) C3 === []

  choiceController (toInterface @I (T a)) (C4 c d) === [a, c]
  choiceObserver (toInterface @I (T a)) (C4 c d) === [d]
  choiceController (toInterface @I (T b)) (C4 c d) === [b, c]
  choiceObserver (toInterface @I (T b)) (C4 c d) === [d]

  pure ()
