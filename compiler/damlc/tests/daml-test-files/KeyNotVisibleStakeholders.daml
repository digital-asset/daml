-- Copyright (c) 2022, Digital Asset (Switzerland) GmbH and/or its affiliates.
-- All rights reserved.

{-# LANGUAGE ApplicativeDo #-}

-- @ERROR failed due to a missing authorization from 's'
-- @ERROR failed due to a missing authorization from 's'
-- @ERROR failed due to a missing authorization from 's'
-- @ERROR failed due to a missing authorization from 's'

-- We make this a separate test since itâ€™s annoying to assert
-- which script an error message belongs to
-- and here we sidestep this by having the same error for all tests.
module KeyNotVisibleStakeholders where

import Daml.Script

template Keyed
  with
    sig : Party
  where
    signatory sig

    key sig : Party
    maintainer key

template Divulger
  with
    divulgee : Party
    sig : Party
  where
    signatory divulgee
    observer sig

    nonconsuming choice DivulgeKeyed : Keyed
      with
        keyedCid : ContractId Keyed
      controller sig
      do fetch keyedCid

template Delegation
  with
    sig : Party
    divulgee : Party
  where
    signatory sig
    observer divulgee

    choice FetchKeyed
      : (ContractId Keyed, Keyed)
      controller divulgee
      do
        fetchByKey @Keyed sig

    choice LookupKeyed
      : Optional (ContractId Keyed)
      controller divulgee
      do
        lookupByKey sig

divulgeeFetch = script do
  sig <- allocateParty "s" -- Signatory
  divulgee <- allocateParty "d" -- Divulgee
  keyedCid <- submit sig do createCmd Keyed with ..
  divulgercid <- submit divulgee do createCmd Divulger with ..
  submit sig do exerciseCmd divulgercid DivulgeKeyed with ..
  submit divulgee do
    _ <- createAndExerciseCmd (Delegation sig divulgee) FetchKeyed
    pure ()

divulgeeLookup = script do
  sig <- allocateParty "s" -- Signatory
  divulgee <- allocateParty "d" -- Divulgee
  keyedCid <- submit sig do createCmd Keyed with ..
  divulgercid <- submit divulgee do createCmd Divulger with ..
  submit sig do exerciseCmd divulgercid DivulgeKeyed with ..
  submit divulgee do
    _ <- createAndExerciseCmd (Delegation sig divulgee) LookupKeyed
    pure ()

blindFetch = script do
  sig <- allocateParty "s" -- Signatory
  divulgee <- allocateParty "d" -- Divulgee
  blind <- allocateParty "b" -- Blind
  keyedCid <- submit sig do createCmd Keyed with ..
  divulgercid <- submit divulgee do createCmd Divulger with ..
  submit sig do exerciseCmd divulgercid DivulgeKeyed with ..
  submit blind do
    _ <- createAndExerciseCmd (Delegation sig blind) FetchKeyed
    pure ()

blindLookup = script do
  sig <- allocateParty "s" -- Signatory
  divulgee <- allocateParty "d" -- Divulgee
  blind <- allocateParty "b" -- Blind
  keyedCid <- submit sig do createCmd Keyed with ..
  divulgercid <- submit divulgee do createCmd Divulger with ..
  submit sig do exerciseCmd divulgercid DivulgeKeyed with ..
  submit blind do
    _ <- createAndExerciseCmd (Delegation sig blind) LookupKeyed
    pure ()
