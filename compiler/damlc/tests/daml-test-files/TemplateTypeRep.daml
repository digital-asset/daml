-- Copyright (c) 2019, Digital Asset (Switzerland) GmbH and/or its affiliates.
-- All rights reserved.

-- @SINCE-LF 1.dev
daml 1.2 module TemplateTypeRep where

import DA.Action
import qualified TemplateTypeRep2

template T1
  with
    x : Int
    p : Party
  where
    signatory p

template T2
  with
    y : Text
    p : Party
  where
    signatory p

template Template t => GenericT t
  with
    wrapped : t
    p : Party
  where
    signatory p

template instance GT1 = GenericT T1
template instance GT2 = GenericT T2

assertTypeRepEq : CanAbort m => TemplateTypeRep -> TemplateTypeRep -> m ()
assertTypeRepEq a b =
  unless (a == b) $ abort "TypeReps are not equal"

assertTypeRepNeq : CanAbort m => TemplateTypeRep -> TemplateTypeRep -> m ()
assertTypeRepNeq a b =
  unless (a /= b) $ abort "TypeReps are equal"


main = scenario do
  assertTypeRepEq (templateTypeRep @T1) (templateTypeRep @T1)
  assertTypeRepEq (templateTypeRep @T2) (templateTypeRep @T2)
  assertTypeRepEq (templateTypeRep @GT1) (templateTypeRep @GT1)
  assertTypeRepEq (templateTypeRep @GT2) (templateTypeRep @GT2)

  assertTypeRepNeq (templateTypeRep @T1) (templateTypeRep @T2)
  assertTypeRepNeq (templateTypeRep @GT1) (templateTypeRep @GT2)
  assertTypeRepNeq (templateTypeRep @T1) (templateTypeRep @TemplateTypeRep2.T1)
