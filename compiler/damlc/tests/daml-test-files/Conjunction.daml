-- Copyright (c) 2020, Digital Asset (Switzerland) GmbH and/or its affiliates.
-- All rights reserved.


module Conjunction where

template Foo
  with
    p : Party
    q : Party
    ps : [Party]
  where
    signatory p
    observer q

    nonconsuming choice Call1 : Int
      controller p,q
      do return 41

    nonconsuming choice Call2 : Int
      controller [p, q]
      do return 42

    choice Call3 : Int
      controller ps
      do return 43

template Bar
  with
    p : Party
    q : Party
  where
    signatory p
    observer q

    nonconsuming choice DelegatedCall1 : Int
      with cid : ContractId Foo
      controller q
      do exercise cid Call1

    nonconsuming choice DelegatedCall2 : Int
      with cid : ContractId Foo
      controller q
      do exercise cid Call2

    choice DelegatedCall3 : Int
      with cid : ContractId Foo
      controller q
      do exercise cid Call3

main = scenario do

  p <- getParty "p"
  q <- getParty "q"

  fooCid <- submit p $ create Foo with p; q; ps = [p, q]
  barCid <- submit p $ create Bar with p; q

  submitMustFail p $ exercise fooCid Call1
  submitMustFail q $ exercise fooCid Call1
  submitMustFail p $ exercise fooCid Call2
  submitMustFail q $ exercise fooCid Call2
  submitMustFail p $ exercise fooCid Call3
  submitMustFail q $ exercise fooCid Call3

  41 <- submit q $ exercise barCid DelegatedCall1 with cid = fooCid
  42 <- submit q $ exercise barCid DelegatedCall2 with cid = fooCid
  43 <- submit q $ exercise barCid DelegatedCall3 with cid = fooCid

  return ()
