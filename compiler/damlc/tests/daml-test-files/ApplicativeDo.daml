{-# LANGUAGE ApplicativeDo #-}
-- @INFO Use let
-- @INFO Redundant pure
module ApplicativeDo where

-- This used to produce a reference to GHC.Base.return
-- which resulted in an interface error, see
-- https://github.com/digital-asset/daml/issues/6820
referenceReturn : Update ()
referenceReturn = do
  -- this redundant create matters for the error
  _ <- pure ()
  x <- pure ()
  pure x
  -- this let matters as well
  let _ = ()
  pure ()

-- Issue #4555: Check that ($) works in the last line
-- of an applicative do block.
pureDollar : Applicative m => m Int -> m Int
pureDollar m = do
    x <- m
    y <- m
    pure $ x + y
