-- Copyright (c) 2024 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.
-- SPDX-License-Identifier: Apache-2.0

module MyTemplates where

import DA.List

data UpgradedChoiceReturn = UpgradedChoiceReturn
  { someData : Text
  , someOtherData : Optional Text
  }
  deriving (Eq, Show)

data UpgradedChoiceReturnWrapper = UpgradedChoiceReturnWrapper
  { unwrap : UpgradedChoiceReturn
  }
  deriving (Eq, Show)

data UpgradedChoiceData = UpgradedChoiceData
  { firstArg : Text
  , secondArg : Optional Text
  }
  deriving (Eq, Show)

template ValidUpgrade
  with
    party : Party
    newField : Optional Text
  where
    signatory party

    choice SameTypeChoice : Text
      controller party
      do pure "V2"

    choice UpgradedChoice : UpgradedChoiceReturn with
        firstArg : Text
        secondArg : Optional Text
      controller party
      do pure $ UpgradedChoiceReturn (firstArg <> ":V2:" <> show secondArg) secondArg

    choice UpgradedChoiceNested : UpgradedChoiceReturnWrapper with
        choiceData : UpgradedChoiceData
      controller party
      do 
        pure $ UpgradedChoiceReturnWrapper $ UpgradedChoiceReturn
          (choiceData.firstArg <> ":V2:" <> show choiceData.secondArg) choiceData.secondArg

    choice NewAddedChoice : Text
      controller party
      do pure "V2"

-- This upgrade is invalid at runtime based on signatories and observers, not the datatype, so we may test those individually
-- replacement signatories + observers are ignored in v1, added in v2, to test them changing in upgrade
template InvalidUpgradeStakeholders
  with
    signatories : [Party]
    observers : [Party]
    replacementSignatories : [Party]
    replacementObservers : [Party]
  where
    signatory replacementSignatories
    observer replacementObservers

    choice InvalidUpgradeStakeholdersCall : () with 
      controller (head $ signatory this)
      do pure ()

template EnsureChanges
  with
    v1Valid : Bool
    v2Valid : Bool
    party : Party
  where
    signatory party
    ensure v2Valid

    choice EnsureChangesCall : Text 
      controller party
      do pure "V2"

template NameChangesOops
  with 
    party : Party
  where
    signatory party
    choice NameChangesCall : Text
      controller party
      do pure "V2"

data NameChangesNestedDataOops = NameChangesNestedDataOops
  { someNumber : Int
  } deriving (Eq, Show)

template NameChangesNested
  with 
    party : Party
    nested : NameChangesNestedDataOops
  where
    signatory party
    choice NameChangesNestedCall : Text
      controller party
      do pure "V2"

template FieldsRemoved
  with
    party : Party
  where
    signatory party
    choice FieldsRemovedCall : Text
      controller party
      do pure "V2"

template NonOptionalFieldsAdded
  with
    party : Party
    newField : Int
  where
    signatory party
    choice NonOptionalFieldsAddedCall : Text
      controller party
      do pure "V2"

template FieldsRenamed
  with
    party : Party
    someDifferentData : Int
  where
    signatory party
    choice FieldsRenamedCall : Text
      controller party
      do pure "V2"

data FieldsRemovedNestedData = FieldsRemovedNestedData
  with
    party : Party
  deriving (Eq, Show)

template FieldsRemovedNested
  with
    nestedData : FieldsRemovedNestedData
  where
    signatory nestedData.party
    choice FieldsRemovedNestedCall : Text
      controller nestedData.party
      do pure "V2"

data NonOptionalFieldsAddedNestedData = NonOptionalFieldsAddedNestedData
  with
    party : Party
    newField : Int
  deriving (Eq, Show)

template NonOptionalFieldsAddedNested
  with
    nestedData : NonOptionalFieldsAddedNestedData
  where
    signatory nestedData.party
    choice NonOptionalFieldsAddedNestedCall : Text
      controller nestedData.party
      do pure "V2"

data FieldsRenamedNestedData = FieldsRenamedNestedData
  with
    party : Party
    someDifferentData : Int
  deriving (Eq, Show)

template FieldsRenamedNested
  with
    nestedData : FieldsRenamedNestedData
  where
    signatory nestedData.party
    choice FieldsRenamedNestedCall : Text
      controller nestedData.party
      do pure "V2"

data VariantUnchangedData
  = VariantUnchangedData1
  | VariantUnchangedData2
  deriving (Eq, Show)
template VariantUnchanged
  with
    party : Party
    nestedData : VariantUnchangedData
  where
    signatory party
    choice VariantUnchangedCall : Text
      controller party
      do pure "V2"

data VariantRemovedData
  = VariantRemovedData1
  deriving (Eq, Show)
template VariantRemoved
  with
    party : Party
    nestedData : VariantRemovedData
  where
    signatory party
    choice VariantRemovedCall : Text
      controller party
      do pure "V2"

data VariantAdditionalData
  = VariantAdditionalData1
  | VariantAdditionalData2
  | VariantAdditionalData3
  deriving (Eq, Show)
template VariantAdditional
  with
    party : Party
    nestedData : VariantAdditionalData
  where
    signatory party
    choice VariantAdditionalCall : Text
      controller party
      do pure "V2"

template ValidUpgradeUtils
  with
    party : Party
  where
    signatory party
    choice ValidUpgradeFetch : ValidUpgrade with
        cid : ContractId ValidUpgrade
      controller party
      do fetch cid

    choice SameChoiceExercise : Text with
        cid : ContractId ValidUpgrade
      controller party
      do exercise cid SameTypeChoice

template SharedTemplate
  with
    party : Party
    ob : Party
    additionalField : Optional Text
  where
    signatory party
    observer ob
