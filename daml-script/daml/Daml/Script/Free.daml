-- Copyright (c) 2023 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.
-- SPDX-License-Identifier: Apache-2.0

-- | HIDE
module Daml.Script.Free
  ( Free(..)
  , lift
  , foldFree
  ) where 

-- | A free monad
data Free f a
  = Pure a
  | Free (f (Free f a))

instance Functor f => Functor (Free f) where
  fmap f (Pure a) = Pure (f a)
  fmap f (Free x) = Free (fmap f <$> x)

instance Functor f => Applicative (Free f) where
  pure = Pure
  Pure f <*> Pure a = Pure (f a)
  Pure f <*> Free x = Free (fmap f <$> x)
  Free x <*> my     = Free ((<*> my) <$> x)

instance Functor f => Action (Free f) where
  Pure a >>= f = f a
  Free x >>= f = Free ((>>= f) <$> x)

lift : Functor f => f a -> Free f a
lift fa = Free (Pure <$> fa)

foldFree : Action m => (forall x. f x -> m x) -> Free f a -> m a
foldFree _ (Pure a) = pure a
foldFree f (Free x) = f x >>= foldFree f
