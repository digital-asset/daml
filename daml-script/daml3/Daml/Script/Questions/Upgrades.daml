-- Copyright (c) 2023 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.
-- SPDX-License-Identifier: Apache-2.0

module Daml.Script.Questions.Upgrades where

import Daml.Script.Internal

data TransformTemplate = TransformTemplate with
  tpl : AnyTemplate
  desiredTplId : TemplateTypeRep
instance IsQuestion TransformTemplate (Either Text LedgerValue) where command = "TransformTemplate"

transformTemplate : forall t' t. (Template t, HasAgreement t, Template t', HasAgreement t') => t -> Script (Either Text t')
transformTemplate = transformAnyTemplate . toAnyTemplate

transformAnyTemplate : forall t. (Template t, HasAgreement t) => AnyTemplate -> Script (Either Text t)
transformAnyTemplate t = fmap fromLedgerValue <$> lift TransformTemplate with
  tpl = t
  desiredTplId = templateTypeRep @t

-- Consider if theres a way to "tag" an AnyTemplate with the name without package id
-- akin to `EquivilentTemplate "Main:MyTemplate"`, we can bring the name down to value level using generated typeclasses
-- but for type level, we'd need to share a data type between the multiple definitions, essentially fool the type system into thinking they're the same
-- I dont think this is possible without symbols
