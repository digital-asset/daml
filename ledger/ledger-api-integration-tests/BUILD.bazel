# Copyright (c) 2019 The DAML Authors. All rights reserved.
# SPDX-License-Identifier: Apache-2.0

load(
    "//rules_daml:daml.bzl",
    "daml_compile",
)
load(
    "//bazel_tools:scala.bzl",
    "da_scala_binary",
    "da_scala_library",
    "da_scala_test_suite",
)

dependencies = [
    "//3rdparty/jvm/ch/qos/logback:logback_classic",
    "//3rdparty/jvm/com/github/scopt:scopt",
    "//3rdparty/jvm/com/google/guava:guava",
    "//3rdparty/jvm/com/typesafe/akka:akka_stream",
    "//3rdparty/jvm/com/typesafe/scala_logging:scala_logging",
    "//3rdparty/jvm/io/grpc:grpc_core",
    "//3rdparty/jvm/io/grpc:grpc_netty",
    "//3rdparty/jvm/io/grpc:grpc_services",
    "//3rdparty/jvm/io/netty:netty_codec_http2",
    "//3rdparty/jvm/io/netty:netty_handler",
    "//3rdparty/jvm/org/scalatest:scalatest",
    "//3rdparty/jvm/org/scalaz:scalaz_concurrent",
    "//3rdparty/jvm/org/scalaz:scalaz_core",
    "//3rdparty/jvm/org/slf4j:slf4j_api",
    "//bazel_tools/runfiles:scala_runfiles",
    "//daml-lf/archive:daml_lf_archive_scala",
    "//daml-lf/archive:daml_lf_java_proto",
    "//daml-lf/data",
    "//daml-lf/engine",
    "//daml-lf/interpreter",
    "//daml-lf/language",
    "//daml-lf/scenario-interpreter",
    "//daml-lf/transaction",
    "//language-support/scala/bindings",
    "//ledger-api/rs-grpc-akka",
    "//ledger-api/rs-grpc-bridge",
    "//ledger-api/testing-utils",
    "//ledger/ledger-api-client:ledger-api-client",
    "//ledger/ledger-api-common:ledger-api-common",
    "//ledger/ledger-api-domain:ledger-api-domain",
    "//ledger/ledger-api-scala-logging",
    "//ledger/sandbox:sandbox",
    "//ledger/test-common:test-common",
    "//ledger/sandbox:sandbox-scala-tests-lib",
    "//ledger/participant-state",
]

da_scala_library(
    name = "ledger-api-integration-tests-lib",
    srcs = glob(["src/test/lib/**/*.scala"]),
    visibility = [
        "//visibility:public",
    ],
    deps = dependencies,
)

java_library(
    name = "default-it-logback-config",
    resources = ["src/test/resources/logback-test.xml"],
    visibility = [
        "//visibility:public",
    ],
)

da_scala_test_suite(
    name = "ledger-api-integration-tests",
    size = "large",
    # WARNING: srcs list has to be explicit here! It can not be added via deps, due to
    # test discovery mechanism in the test_suite macro working only on sources.
    srcs = glob(
        include = ["src/test/itsuite/**/*.scala"],
        ### GS: enabling all tests again for the regular test suite until we figure out how to
        ###     run sandbox on postgres with ledger-api-test-tool
        # the excluded tests are run by the conformance test via the ledger-api-test-tool
        # see //ledger/sandbox:conformance-test-*
        # exclude = ["src/test/itsuite/**/TransactionServiceIT.scala"],
    ),
    data = [
        "//ledger/sandbox:Test-1.5.dar",
        "//ledger/test-common:Test-stable.dar",
        "@postgresql_dev_env//:all",
        "@postgresql_dev_env//:createdb",
        "@postgresql_dev_env//:initdb",
        "@postgresql_dev_env//:pg_ctl",
    ],
    # this test suite is very intensive, long, and relying on timeouts. Moreover,
    # the test suite already parallelizes each scala test, so we'll still be busy
    # only with this one. for the same reason we do not run it on macos -- it takes
    # up to 20 minutes on our macOS ci workers.
    tags = [
        "dont-run-on-darwin",
        "exclusive",
    ],
    deps = [
        ":default-it-logback-config",
        ":ledger-api-integration-tests-lib",
    ] + dependencies,
)
