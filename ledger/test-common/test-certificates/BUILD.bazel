# Copyright (c) 2021 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.
# SPDX-License-Identifier: Apache-2.0

load("@os_info//:os_info.bzl", "is_windows")

genrule(
    name = "test-certificates",
    srcs = [
        ":openssl-template.cnf",
    ],
    outs = [
        "openssl.cnf",
        "index.txt",
        "serial",
        "ca.key",
        "ca.crt",
        "client.key",
        "client.pem",
        "client.csr",
        "client.crt",
        "server.key",
        "server.pem",
        "server.csr",
        "server.crt",
        "ocsp.key.pem",
        "ocsp.csr",
        "ocsp.crt",
        "client-revoked.key",
        "client-revoked.pem",
        "client-revoked.csr",
        "client-revoked.crt",
    ],
    cmd = """
set -eou pipefail

ABSOLUTE_OUT=$$( cd "$$(dirname $(location openssl.cnf))" >/dev/null 2>&1 && pwd )
NEWCERTS_DIR=$$ABSOLUTE_OUT/newcerts

# Generate SSL config from the template
cat $(location openssl-template.cnf) | sed -e "s;<ROOTDIR>;$$ABSOLUTE_OUT;g" > $(location openssl.cnf)

# Setup directories
mkdir $$NEWCERTS_DIR
touch $(location index.txt)
echo 1000 > $(location serial)

# Generate Root CA private key
$(location @openssl_dev_env//:openssl) genrsa -out $(location ca.key) 4096
chmod 400 $(location ca.key)
# Create Root Certificate (self-signed)
$(location @openssl_dev_env//:openssl) req -config $(location openssl.cnf) \
    -key $(location ca.key) \
    -new -x509 -days 7300 -sha256 -extensions v3_ca \
    -subj '/CN=0.0.0.0.ca' \
    -out $(location ca.crt)
# Dump out cert details
$(location @openssl_dev_env//:openssl) x509 -noout -text -in $(location ca.crt)

# Generate server key, csr and crt
$(location @openssl_dev_env//:openssl) genrsa -out $(location server.key) 4096
$(location @openssl_dev_env//:openssl) pkey -in $(location server.key) -out $(location server.pem)
$(location @openssl_dev_env//:openssl) req -config $(location openssl.cnf) \
    -subj '/CN=0.0.0.0.server' \
    -addext "subjectAltName = DNS:localhost, IP:127.0.0.1" \
    -key $(location server.pem) \
    -new -sha256 -out $(location server.csr)
$(location @openssl_dev_env//:openssl) ca -batch -config $(location openssl.cnf) \
    -extensions server_cert -days 365 -notext -md sha256 \
    -in $(location server.csr) \
    -out $(location server.crt)
chmod 444 $(location server.crt)

# Generate Client CA private key
$(location @openssl_dev_env//:openssl) genrsa -out $(location client.key) 4096
$(location @openssl_dev_env//:openssl) pkey -in $(location client.key) -out $(location client.pem)
$(location @openssl_dev_env//:openssl) req -new -key $(location client.pem) \
    -subj '/CN=0.0.0.0.client' \
    -addext "subjectAltName = DNS:localhost, IP:127.0.0.1" \
    -out $(location client.csr)
# Sign Client Cert
$(location @openssl_dev_env//:openssl) ca -batch -config $(location openssl.cnf) \
    -extensions usr_cert -notext -md sha256 \
    -in $(location client.csr) \
    -out $(location client.crt)
# Validate cert is correct
$(location @openssl_dev_env//:openssl) verify -CAfile $(location ca.crt) \
    $(location client.crt)


# Generate OCSP Server private key
$(location @openssl_dev_env//:openssl) genrsa \
    -out $(location ocsp.key.pem) 4096
# Sign OCSP Server certificate
$(location @openssl_dev_env//:openssl) req -config $(location openssl.cnf) -new -sha256 \
    -subj '/CN=ocsp.127.0.0.1' \
    -key $(location ocsp.key.pem) \
    -out $(location ocsp.csr)
$(location @openssl_dev_env//:openssl) ca -batch -config $(location openssl.cnf) \
    -extensions ocsp -days 375 -notext -md sha256 \
    -in $(location ocsp.csr) \
    -out $(location ocsp.crt)
# Validate extensions
$(location @openssl_dev_env//:openssl) x509 -noout -text \
    -in $(location ocsp.crt)


# Generate Client-Revoked CA private key
$(location @openssl_dev_env//:openssl) genpkey -out $(location client-revoked.key) -algorithm RSA -pkeyopt rsa_keygen_bits:2048
$(location @openssl_dev_env//:openssl) pkey -in $(location client-revoked.key) -out $(location client-revoked.pem)
$(location @openssl_dev_env//:openssl) req -new -key $(location client-revoked.pem) \
    -subj '/CN=0.0.0.0.clientrevoked' \
    -addext "subjectAltName = DNS:localhost, IP:127.0.0.1" \
    -out $(location client-revoked.csr)
# Sign Client Cert
$(location @openssl_dev_env//:openssl) ca -batch -config $(location openssl.cnf) \
    -extensions usr_cert -notext -md sha256 \
    -in $(location client-revoked.csr) \
    -out $(location client-revoked.crt)
# Validate cert is correct
$(location @openssl_dev_env//:openssl) verify -CAfile $(location ca.crt) \
    $(location client-revoked.crt)
# Revoke
$(location @openssl_dev_env//:openssl) ca -batch -config $(location openssl.cnf) -revoke $(location client-revoked.crt)

    """,
    tools = [
        "@openssl_dev_env//:openssl",
    ],
    visibility = ["//visibility:public"],
)
