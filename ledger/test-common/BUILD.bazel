# Copyright (c) 2021 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.
# SPDX-License-Identifier: Apache-2.0

load(
    "//rules_daml:daml.bzl",
    "daml_compile",
)
load(
    "//bazel_tools:scala.bzl",
    "da_scala_library",
    "silencer_plugin",
)
load(
    "//language-support/scala/codegen:codegen.bzl",
    "dar_to_scala",
)
load("@scala_version//:index.bzl", "scala_major_version")
load("@scala_version//:index.bzl", "scala_major_version")
load(":test-common.bzl", "test_common_configurations", "test_common_lf_targets")

[
    [
        alias(
            name = "%s-%s%s" % (target_prefix, name, target_suffix),
            actual = ":%s-%s%s" % (
                target_prefix,
                test_common_lf_targets.get(lf_target),
                target_suffix,
            ),
            visibility = ["//visibility:public"],
        ),
    ]
    for (target_prefix, target_suffix) in [
        ("model-tests", ".dar"),
        ("test-dars", ""),
        ("test-dars", "-lib"),
    ]
    for (name, lf_target) in test_common_configurations.items()
]

da_scala_library(
    name = "test-common",
    srcs = glob(["src/main/scala/**/*.scala"]),
    visibility = [
        "//visibility:public",
    ],
    deps = [
        "//ledger-api/grpc-definitions:ledger_api_proto_scala",
        "//libs-scala/timer-utils",
        "@maven//:ch_qos_logback_logback_classic",
        "@maven//:ch_qos_logback_logback_core",
        "@maven//:io_grpc_grpc_context",
    ],
)

[
    [
        daml_compile(
            name = "%s-tests-%s" % (test_name, target_suffix),
            srcs = glob(["src/main/daml/%s/*.daml" % test_name]),
            project_name = "%s-tests" % test_name,
            target = target,
            visibility = ["//visibility:public"],
        ),
        dar_to_scala(
            name = "%s-tests-%s.scala-codegen" % (test_name, target_suffix),
            srcs = [":%s-tests-%s.dar" % (test_name, target_suffix)],
            package_prefix = "com.daml.ledger.test.%s" % test_name,
            srcjar_out = "%s-%s.scala.srcjar" % (test_name, target_suffix),
            verbosity = 2,
            visibility = ["//visibility:public"],
        ),
        da_scala_library(
            name = "%s-tests-%s.scala" % (test_name, target_suffix),
            srcs = [
                ":%s-tests-%s.scala-codegen" % (test_name, target_suffix),
            ],
            plugins = [silencer_plugin],
            scala_deps = extra_deps,
            scalacopts = [
                "-P:silencer:lineContentFilters=import _root_.scala.language.higherKinds;",
            ],
            visibility = ["//visibility:public"],
            deps = [
                "//language-support/scala/bindings",
            ],
        ),
    ]
    for (test_name, extra_deps) in [
        (
            "model",
            ["@maven//:org_scala_lang_modules_scala_collection_compat"],
        ),
        (
            "semantic",
            ["@maven//:org_scala_lang_modules_scala_collection_compat"],
        ),
        ("performance", []),
        ("package_management", []),
    ]
    for (target, target_suffix) in test_common_lf_targets.items()
]

[
    [
        genrule(
            name = "test-dars-lookup-%s.scala" % target_suffix,
            outs = ["Dars-%s.scala" % target_suffix],
            cmd = """
cat > $@ <<EOF
package com.daml.ledger.test_common
object TestDars {
    val fileNames: Map[String, String] =
      List(
        "model",
        "performance",
        "semantic",
        "package_management",
      )
      .map(name => name -> ("ledger/test-common/" + name + "-tests-%s.dar"))
      .toMap
}
EOF
""" % target_suffix,
        ),
        da_scala_library(
            name = "test-dars-%s-lib" % target_suffix,
            srcs = [":test-dars-lookup-%s.scala" % target_suffix],
            generated_srcs = [":dar-file-names-scala-%s" % target_suffix],
            # generated_srcs is required for scaladoc
            resources = ["test-dars-%s" % target_suffix],
            visibility = ["//ledger:__subpackages__"],
        ),
        filegroup(
            name = "test-dars-%s" % target_suffix,
            srcs = [
                ":model-tests-%s.dar" % target_suffix,
                ":performance-tests-%s.dar" % target_suffix,
                ":semantic-tests-%s.dar" % target_suffix,
                ":package_management-tests-%s.dar" % target_suffix,
            ],
            visibility = ["//visibility:public"],
        ),
    ]
    for (target, target_suffix) in test_common_lf_targets.items()
]
