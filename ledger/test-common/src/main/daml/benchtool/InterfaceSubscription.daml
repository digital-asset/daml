-- Copyright (c) 2022 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.
-- SPDX-License-Identifier: Apache-2.0

module InterfaceSubscription where

import Foo

data FooData = FooData
  with
    signatory : Party
    observers : [Party]
    payload : Text
    keyId: Text
    templateName: Text
  deriving (Eq, Show)

interface FooI1 where
  viewtype FooData

  interface instance FooI1 for Foo.Foo1 where
    view = FooData with templateName = "Foo1", ..


foo2ToFooData : Foo.Foo2 -> FooData
foo2ToFooData Foo.Foo2{..} = FooData with templateName = "Foo2", ..

fooDataToFoo2 : FooData -> Foo.Foo2
fooDataToFoo2 FooData{..}
  | templateName == "Foo2" = Foo.Foo2 {..}
  | otherwise = error "fooDataToFoo2 called non non-foo2"

foo2Roundtrip : Int -> Foo.Foo2 -> Foo.Foo2
foo2Roundtrip n x
  | n <= 0 = x
  | otherwise = foo2Roundtrip (n - 1) (fooDataToFoo2 $ foo2ToFooData x)

interface FooI2 where
  viewtype FooData

  interface instance FooI2 for Foo.Foo2 where
    view = foo2ToFooData $ foo2Roundtrip 10 this

foo3ToFooData : Foo.Foo3 -> FooData
foo3ToFooData Foo.Foo3{..} = FooData with templateName = "Foo3", ..

fooDataToFoo3 : FooData -> Foo.Foo3
fooDataToFoo3 FooData{..}
  | templateName == "Foo3" = Foo.Foo3 {..}
  | otherwise = error "fooDataToFoo3 called non non-foo3"

foo3Roundtrip : Int -> Foo.Foo3 -> Foo.Foo3
foo3Roundtrip n x
  | n <= 0 = x
  | otherwise = foo3Roundtrip (n - 1) (fooDataToFoo3 $ foo3ToFooData x)

interface FooI3 where
  viewtype FooData

  interface instance FooI3 for Foo.Foo3 where
    view = foo3ToFooData $ foo3Roundtrip 100 this
