-- Copyright (c) 2021 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.
-- SPDX-License-Identifier: Apache-2.0

module RaceTests where

import DA.Optional (isSome)

type RaceKey = Text

template DummyContract with
    owner : Party
  where
    signatory owner

template ContractWithKey with
    owner : Party
  where
    signatory owner
    key owner: Party
    maintainer key

    controller owner can
      ContractWithKey_Archive : ()
        do
          return ()

    controller owner can
      nonconsuming ContractWithKey_Exercise : ()
        do
          return ()

template FetchWrapper with
    fetcher : Party
    contractId : ContractId ContractWithKey
  where 
    signatory fetcher
    controller fetcher can
      nonconsuming FetchWrapper_Fetch: ContractWithKey
        do fetch contractId

template LookupResult with
    owner : Party
    found : Bool
  where
    signatory owner

template LookupWrapper with
    owner : Party
  where
    signatory owner

    controller owner can
      nonconsuming LookupWrapper_Lookup : ()
        do
          optionalContractId <- lookupByKey @ContractWithKey owner
          create LookupResult with owner = owner, found = isSome optionalContractId
          pure ()

template CreateWrapper with
    owner : Party
  where
    signatory owner
    controller owner can
      nonconsuming CreateWrapper_CreateTransient : ()
        do
          contract <- create ContractWithKey with owner
          _ <- exercise contract ContractWithKey_Archive
          return ()
