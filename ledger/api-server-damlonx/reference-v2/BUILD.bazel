# Copyright (c) 2019 The DAML Authors. All rights reserved.
# SPDX-License-Identifier: Apache-2.0

load(
    "//bazel_tools:scala.bzl",
    "da_scala_binary",
)
load(
    "//ledger/ledger-api-test-tool:conformance.bzl",
    "conformance_test",
    "server_conformance_test",
)

da_scala_binary(
    name = "reference-v2",
    srcs = glob(["src/main/scala/**/*.scala"]),
    main_class = "com.daml.ledger.api.server.damlonx.reference.v2.ReferenceServer",
    resources = glob(["src/main/resources/**/*"]),
    visibility = ["//visibility:public"],
    runtime_deps = [
        "@maven//:ch_qos_logback_logback_classic",
        "@maven//:ch_qos_logback_logback_core",
        "@maven//:com_h2database_h2",
    ],
    deps = [
        "//daml-lf/archive:daml_lf_archive_reader",
        "//daml-lf/archive:daml_lf_dev_archive_java_proto",
        "//daml-lf/data",
        "//daml-lf/language",
        "//daml-lf/transaction",
        "//language-support/scala/bindings",
        "//ledger/ledger-api-auth",
        "//ledger/ledger-api-client",
        "//ledger/ledger-api-common",
        "//ledger/ledger-api-domain",
        "//ledger/participant-state",
        "//ledger/participant-state-index",
        "//ledger/participant-state/kvutils",
        "//ledger/sandbox",
        "@maven//:com_github_scopt_scopt_2_12",
        "@maven//:com_typesafe_akka_akka_actor_2_12",
        "@maven//:com_typesafe_akka_akka_stream_2_12",
        "@maven//:io_netty_netty_handler",
        "@maven//:io_netty_netty_tcnative_boringssl_static",
        "@maven//:org_slf4j_slf4j_api",
    ],
)

########################################
### Testing the index server
########################################

da_scala_binary(
    name = "ephemeral-postgres-reference-server",
    srcs = glob(["src/test/scala/**/*.scala"]),
    main_class = "com.daml.ledger.api.server.damlonx.reference.v2.EphemeralPostgresReferenceServerMain",
    resources = ["src/main/resources/logback.xml"],
    visibility = ["//visibility:public"],
    deps = [
        ":reference-v2",
        "//ledger/sandbox:sandbox-scala-tests-lib",
        "@maven//:org_slf4j_slf4j_api",
    ],
)

SERVERS = {
    "h2database": {
        "binary": ":reference-v2",
        "server_args": [
            "--port=6865",
            # "db_close_delay=-1" is needed so that the in-memory database is not closed
            # (and therefore lost) after the flyway migration
            "--jdbc-url=jdbc:h2:mem:daml_on_x;db_close_delay=-1;db_close_on_exit=false",
        ],
    },
    "postgres": {
        "binary": ":ephemeral-postgres-reference-server",
        "extra_data": [
            "@postgresql_dev_env//:all",
            "@postgresql_dev_env//:createdb",
            "@postgresql_dev_env//:initdb",
            "@postgresql_dev_env//:pg_ctl",
        ],
        "server_args": [
            "--port=6865",
        ],
    },
}

server_conformance_test(
    name = "conformance-test",
    servers = SERVERS,
    test_tool_args = [
        "--all-tests",
        "--exclude=LotsOfPartiesIT",
        "--exclude=TimeIT",
    ],
)

conformance_test(
    name = "conformance-test-h2database-multi-node",
    ports = [
        6865,
        6866,
    ],
    server = ":reference-v2",
    server_args = [
        "--port=6865",
        # "db_close_delay=-1" is needed so that the in-memory database is not closed
        # (and therefore lost) after the flyway migration
        "--jdbc-url=jdbc:h2:mem:daml_on_x;db_close_delay=-1;db_close_on_exit=false",
        "--extra-participant=second-participant,6866,jdbc:h2:mem:daml_on_x2;db_close_delay=-1;db_close_on_exit=false",
    ],
    test_tool_args = [
        "--include=SemanticTests,TransactionServiceIT",
    ],
)
