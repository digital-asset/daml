# Copyright (c) 2019 The DAML Authors. All rights reserved.
# SPDX-License-Identifier: Apache-2.0

load(
    "//bazel_tools:scala.bzl",
    "da_scala_binary",
)
load(
    "//ledger/ledger-api-test-tool:conformance.bzl",
    "conformance_test",
)

da_scala_binary(
    name = "reference-v2",
    srcs = glob(["src/main/scala/**/*.scala"]),
    main_class = "com.daml.ledger.api.server.damlonx.reference.v2.ReferenceServer",
    resources = glob(["src/main/resources/**/*"]),
    visibility = ["//visibility:public"],
    runtime_deps = [
        "//3rdparty/jvm/ch/qos/logback:logback_classic",
        "//3rdparty/jvm/ch/qos/logback:logback_core",
        "//3rdparty/jvm/com/h2database:h2",
    ],
    deps = [
        "//3rdparty/jvm/com/github/scopt",
        "//3rdparty/jvm/com/typesafe/akka:akka_stream",
        "//3rdparty/jvm/io/netty:netty_handler",
        "//3rdparty/jvm/io/netty:netty_tcnative_boringssl_static",
        "//3rdparty/jvm/org/slf4j:slf4j_api",
        "//daml-lf/archive:daml_lf_archive_scala",
        "//daml-lf/archive:daml_lf_java_proto",
        "//daml-lf/data",
        "//daml-lf/language",
        "//daml-lf/transaction",
        "//language-support/scala/bindings",
        "//ledger/api-server-damlonx",
        "//ledger/ledger-api-client",
        "//ledger/ledger-api-common",
        "//ledger/ledger-api-domain",
        "//ledger/participant-state",
        "//ledger/participant-state-index",
        "//ledger/participant-state-index/reference",
        "//ledger/participant-state/kvutils",
        "//ledger/sandbox",
    ],
)

########################################
### Testing the index server
########################################

da_scala_binary(
    name = "ephemeral-postgres-reference-server",
    srcs = glob(["src/test/scala/**/*.scala"]),
    main_class = "com.daml.ledger.api.server.damlonx.reference.v2.EphemeralPostgresReferenceServerMain",
    resources = ["src/main/resources/logback.xml"],
    visibility = ["//visibility:public"],
    deps = [
        ":reference-v2",
        "//3rdparty/jvm/org/slf4j:slf4j_api",
        "//ledger/sandbox:sandbox-scala-tests-lib",
    ],
)

conformance_test(
    name = "conformance-test",
    extra_data = [
        "@postgresql_dev_env//:all",
        "@postgresql_dev_env//:createdb",
        "@postgresql_dev_env//:initdb",
        "@postgresql_dev_env//:pg_ctl",
    ],
    server = ":ephemeral-postgres-reference-server",
    server_args = [
        "--port 6865",
    ],
    test_tool_args = [
        "--all-tests",
        "--exclude TimeIT",
        "--timeout-scale-factor=10",
    ],
)

conformance_test(
    name = "conformance-test-h2database",
    server = ":reference-v2",
    server_args = [
        "--port 6865",
        # db_close_delay=-1 is needed so that the in-memory database is not closed (and therefore lost)
        # after the flyway migration
        "--jdbc-url jdbc:h2:mem:daml_on_x;db_close_delay=-1;db_close_on_exit=false",
    ],
    test_tool_args = [
        "--all-tests",
        "--exclude TimeIT",
        "--timeout-scale-factor=10",
    ],
)

conformance_test(
    name = "conformance-test-h2database-multi-node",
    ports = [
        6865,
        6866,
    ],
    server = ":reference-v2",
    server_args = [
        "--port 6865",
        # db_close_delay=-1 is needed so that the in-memory database is not closed (and therefore lost)
        # after the flyway migration
        "--jdbc-url jdbc:h2:mem:daml_on_x;db_close_delay=-1;db_close_on_exit=false",
        "--extra-participant second-participant,6866,jdbc:h2:mem:daml_on_x2;db_close_delay=-1;db_close_on_exit=false",
    ],
    test_tool_args = [
        "--include=SemanticTests",
        "--timeout-scale-factor=10",
    ],
)
