// Copyright (c) 2021 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.
// SPDX-License-Identifier: Apache-2.0

//
// Protocol buffer messages used by the participant state key-value utilities
// for implementing a Daml ledger backed by a key-value store.
//
// These messages should only be produced and consumed by the methods in
// `KeyValueCommitting`, `KeyValueConsumption` and `KeyValueSubmission` objects.
//

syntax = "proto3";

package com.daml.ledger.participant.state.kvutils.store.events;

option java_package = "com.daml.ledger.participant.state.kvutils.store.events";
option csharp_namespace = "Com.Daml.Ledger.Participant.State.KVUtils.Store.Events";

import "com/daml/daml_lf_dev/daml_lf.proto";
import "com/daml/ledger/participant/state/kvutils/daml_kvutils.proto";

// A public package upload.
// Daml-LF packages will be deduplicated based on their hashes. Only unique
// ones will be added to the key-value storage. Deduplication has no impact on the
// upload result.
message DamlPackageUploadEntry {
  // A unique string scoped to a particular participant for matching the
  // request with the result.
  // Implementers are free to select adequate mechanism e.g. UUID or similar.
  string submission_id = 1;

  // List of archives to be uploaded.
  repeated daml_lf_dev.Archive archives = 2;

  // Description provided by the backing participant describing where it got
  // the package from, e.g., when, where, or by whom the packages were
  // uploaded.
  string source_description = 3;

  // Uploading participant's id.
  string participant_id = 4;
}

// A message indicating that package upload was unsuccessful.
// If validation of any of the uploaded packages fails, the whole upload fails
// and a rejection message is produced.
message DamlPackageUploadRejectionEntry {
  // An id selected by the submitter, can be used for matching rejection with
  // the original upload entry.
  string submission_id = 1;

  // Id of the participant that uploaded the package.
  string participant_id = 2;

  oneof reason {
    Invalid invalid_package = 3;
    ParticipantNotAuthorized participant_not_authorized = 4;
    Duplicate duplicate_submission = 5;
  }
}
