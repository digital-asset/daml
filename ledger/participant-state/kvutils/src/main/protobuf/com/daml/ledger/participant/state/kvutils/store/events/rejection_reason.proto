// Copyright (c) 2021 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.
// SPDX-License-Identifier: Apache-2.0
syntax = "proto3";

package com.daml.ledger.participant.state.kvutils.store.events;

option java_package = "com.daml.ledger.participant.state.kvutils.store.events";
option java_multiple_files = true;
option csharp_namespace = "Com.Daml.Ledger.Participant.State.KVUtils.Store.Events";

import "google/protobuf/timestamp.proto";
import "com/daml/ledger/participant/state/kvutils/store/state.proto";
//
// Used by participant.state.v1 API.
//

// The transaction relied on contracts or keys being active that were no longer active.
message Inconsistent {
  string details = 1;
}

// The transaction has been disputed.
// Dispute occurs when the Daml model conformance or authorization fails.
message Disputed {
  string details = 1;
}

// Committer did not have sufficient resources to process the transaction.
message ResourcesExhausted {
  string details = 1;
}

// The transaction submission exceeded its maximum record time.
message MaximumRecordTimeExceeded {
  string details = 1;
}

// The ledger time of the transaction submission violates some constraint.
message InvalidLedgerTime {
  string details = 1;
  google.protobuf.Timestamp ledger_time = 2;
  google.protobuf.Timestamp lower_bound = 3;
  google.protobuf.Timestamp upper_bound = 4;
}

// The committer has already seen a command/submission with the same deduplication
// key during its implementation specific deduplication window.
message Duplicate {
  string details = 1;
  string submission_id = 2;
}

// A party mentioned as a stakeholder or actor has not been on-boarded on
// the ledger.
message PartyNotKnownOnLedger {
  string details = 1;
}

// The submitting party cannot act via the participant to which the request has been sent.
message SubmitterCannotActViaParticipant {
  string details = 1;
  string submitter_party = 2;
  string participant_id = 3;
}

// Submitted request content was not valid: a Daml package, a party name
// or a configuration.
message Invalid {
  string details = 1;
}

// Participant not authorized to submit the request.
message ParticipantNotAuthorized {
  string details = 1;
}

// A mismatch in the configuration generation, that is, the
// new configuration did not carry a generation that was one
// larger than previous generation.
message GenerationMismatch {
  int64 expected_generation = 1;
}

// The request timed out, e.g. record time exceeded maximum record time.
message TimedOut {
  google.protobuf.Timestamp record_time = 1;
  google.protobuf.Timestamp maximum_record_time = 2;
}

// The requested entity already exists.
message AlreadyExists {
  string details = 1;
}

//
// Rejections used by participant.state.v2 API.
//
message ValidationFailure {
  string details = 1;
}
message DuplicateKeys {
}
message InconsistentKeys {
}
message InconsistentContracts {
}
message MissingInputState {
  com.daml.ledger.participant.state.kvutils.store.DamlStateKey key = 1;
}
message InvalidParticipantState {
  string details = 1;
  map<string, string> metadata = 2;
}
message RecordTimeOutOfRange {
  google.protobuf.Timestamp minimum_record_time = 1;
  google.protobuf.Timestamp maximum_record_time = 2;
}
message CausalMonotonicityViolated {
}
message SubmittingPartyNotKnownOnLedger {
  string submitter_party = 1;
}
message PartiesNotKnownOnLedger {
  repeated string parties = 1;
}
