# Copyright (c) 2020 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.
# SPDX-License-Identifier: Apache-2.0

load("@os_info//:os_info.bzl", "is_windows")
load("//rules_daml:daml.bzl", "daml_compile")
load(
    "//bazel_tools:scala.bzl",
    "da_scala_binary",
    "da_scala_library",
    "da_scala_test_suite",
    "scaladoc_jar",
    "silencer_plugin",
)
load("//bazel_tools:pom_file.bzl", "pom_file")

compile_deps = [
    "//daml-lf/archive:daml_lf_archive_reader",
    "//daml-lf/archive:daml_lf_dev_archive_java_proto",
    "//daml-lf/data",
    "//daml-lf/engine",
    "//daml-lf/language",
    "//daml-lf/transaction",
    "//daml-lf/transaction:transaction_java_proto",
    "//daml-lf/transaction:value_java_proto",
    "//language-support/scala/bindings",
    "//ledger-api/rs-grpc-akka",
    "//ledger-api/rs-grpc-bridge",
    "//ledger/caching",
    "//ledger/ledger-api-akka",
    "//ledger/ledger-api-auth",
    "//ledger/ledger-api-client",
    "//ledger/ledger-api-common",
    "//ledger/ledger-api-domain",
    "//ledger/ledger-api-health",
    "//ledger/ledger-resources",
    "//ledger/metrics",
    "//ledger/participant-state",
    "//ledger/participant-state-index",
    "//libs-scala/build-info",
    "//libs-scala/contextualized-logging",
    "//libs-scala/concurrent",
    "//libs-scala/ports",
    "//libs-scala/resources",
    "//libs-scala/resources-akka",
    "//libs-scala/scala-utils",
    "//libs-scala/timer-utils",
    "@maven//:com_github_scopt_scopt_2_12",
    "@maven//:com_google_guava_guava",
    "@maven//:com_typesafe_akka_akka_actor_2_12",
    "@maven//:com_typesafe_akka_akka_stream_2_12",
    "@maven//:com_typesafe_play_anorm_2_12",
    "@maven//:com_typesafe_play_anorm_tokenizer_2_12",
    "@maven//:com_zaxxer_HikariCP",
    "@maven//:io_dropwizard_metrics_metrics_core",
    "@maven//:io_dropwizard_metrics_metrics_graphite",
    "@maven//:io_grpc_grpc_netty",
    "@maven//:io_grpc_grpc_services",
    "@maven//:io_netty_netty_common",
    "@maven//:io_netty_netty_handler",
    "@maven//:io_netty_netty_transport",
    "@maven//:net_logstash_logback_logstash_logback_encoder",
    "@maven//:org_flywaydb_flyway_core",
    "@maven//:org_scala_lang_modules_scala_java8_compat_2_12",
    "@maven//:org_scalaz_scalaz_core_2_12",
    "@maven//:org_slf4j_slf4j_api",
]

runtime_deps = [
    "@maven//:ch_qos_logback_logback_classic",
    "@maven//:com_h2database_h2",
    "@maven//:org_postgresql_postgresql",
    "@maven//:org_xerial_sqlite_jdbc",
]

da_scala_library(
    name = "participant-integration-api",
    srcs = glob(["src/main/scala/**/*.scala"]),
    resources =
        glob(
            ["src/main/resources/**/*"],
            # Do not include logback.xml into the library: let the user
            # of the sandbox-as-a-library decide how to log.
            exclude = ["src/main/resources/logback.xml"],
        ),
    tags = ["maven_coordinates=com.daml:participant-integration-api:__VERSION__"],
    visibility = [
        "//visibility:public",
    ],
    runtime_deps = runtime_deps,
    deps = compile_deps,
)

da_scala_library(
    name = "ledger-api-server",
    srcs = glob(["src/main/scala/**/*.scala"]),
    resources =
        glob(
            ["src/main/resources/**/*"],
            # Do not include logback.xml into the library: let the user
            # of the sandbox-as-a-library decide how to log.
            exclude = ["src/main/resources/logback.xml"],
        ),
    tags = ["maven_coordinates=com.daml:ledger-api-server:__VERSION__"],
    visibility = [
        "//visibility:public",
    ],
    runtime_deps = runtime_deps,
    deps = compile_deps,
)

da_scala_library(
    name = "participant-integration-api-tests-lib",
    srcs = glob(["src/test/lib/**/*.scala"]),
    visibility = ["//visibility:public"],
    runtime_deps = [
        "@maven//:com_h2database_h2",
        "@maven//:com_typesafe_akka_akka_slf4j_2_12",
        "@maven//:org_postgresql_postgresql",
    ],
    deps = [
        ":participant-integration-api",
        "//bazel_tools/runfiles:scala_runfiles",
        "//daml-lf/archive:daml_lf_archive_reader",
        "//daml-lf/archive:daml_lf_dev_archive_java_proto",
        "//daml-lf/data",
        "//daml-lf/language",
        "//daml-lf/transaction",
        "//daml-lf/transaction-test-lib",
        "//language-support/scala/bindings",
        "//ledger-api/rs-grpc-bridge",
        "//ledger-api/testing-utils",
        "//ledger/ledger-api-common",
        "//ledger/ledger-api-domain",
        "//ledger/ledger-api-health",
        "//ledger/ledger-resources",
        "//ledger/metrics",
        "//ledger/participant-state",
        "//ledger/participant-state-index",
        "//libs-scala/contextualized-logging",
        "//libs-scala/ports",
        "//libs-scala/postgresql-testing",
        "//libs-scala/resources",
        "@maven//:com_typesafe_akka_akka_actor_2_12",
        "@maven//:com_typesafe_akka_akka_stream_2_12",
        "@maven//:io_dropwizard_metrics_metrics_core",
        "@maven//:io_grpc_grpc_netty",
        "@maven//:io_netty_netty_common",
        "@maven//:io_netty_netty_transport",
        "@maven//:org_scalacheck_scalacheck_2_12",
        "@maven//:org_scalactic_scalactic_2_12",
        "@maven//:org_scalatest_scalatest_2_12",
    ],
)

test_deps = [
    ":participant-integration-api",
    ":participant-integration-api-tests-lib",
    "//bazel_tools/runfiles:scala_runfiles",
    "//daml-lf/archive:daml_lf_archive_reader",
    "//daml-lf/archive:daml_lf_dev_archive_java_proto",
    "//daml-lf/data",
    "//daml-lf/engine",
    "//daml-lf/interpreter",
    "//daml-lf/language",
    "//daml-lf/transaction",
    "//daml-lf/transaction-test-lib",
    "//language-support/scala/bindings",
    "//ledger-api/rs-grpc-akka",
    "//ledger-api/rs-grpc-akka:rs-grpc-akka-tests-lib",
    "//ledger-api/rs-grpc-bridge",
    "//ledger-api/sample-service",
    "//ledger-api/testing-utils",
    "//ledger/caching",
    "//ledger/ledger-api-auth",
    "//ledger/ledger-api-client",
    "//ledger/ledger-api-common",
    "//ledger/ledger-api-common:ledger-api-common-scala-tests-lib",
    "//ledger/ledger-api-domain",
    "//ledger/ledger-api-health",
    "//ledger/ledger-resources",
    "//ledger/ledger-resources:ledger-resources-test-lib",
    "//ledger/metrics",
    "//ledger/participant-state",
    "//ledger/participant-state-index",
    "//ledger/test-common",
    "//libs-scala/contextualized-logging",
    "//libs-scala/concurrent",
    "//libs-scala/grpc-utils",
    "//libs-scala/ports",
    "//libs-scala/postgresql-testing",
    "//libs-scala/resources",
    "//libs-scala/timer-utils",
    "@maven//:ch_qos_logback_logback_classic",
    "@maven//:ch_qos_logback_logback_core",
    "@maven//:com_typesafe_akka_akka_actor_2_12",
    "@maven//:com_typesafe_akka_akka_stream_2_12",
    "@maven//:com_typesafe_akka_akka_stream_testkit_2_12",
    "@maven//:com_typesafe_akka_akka_testkit_2_12",
    "@maven//:commons_io_commons_io",
    "@maven//:io_dropwizard_metrics_metrics_core",
    "@maven//:io_grpc_grpc_netty",
    "@maven//:io_grpc_grpc_services",
    "@maven//:io_netty_netty_common",
    "@maven//:io_netty_netty_handler",
    "@maven//:io_netty_netty_transport",
    "@maven//:org_awaitility_awaitility",
    "@maven//:org_flywaydb_flyway_core",
    "@maven//:org_mockito_mockito_core",
    "@maven//:org_mockito_mockito_scala_2_12",
    "@maven//:org_reactivestreams_reactive_streams",
    "@maven//:org_scalacheck_scalacheck_2_12",
    "@maven//:org_scalactic_scalactic_2_12",
    "@maven//:org_scalatest_scalatest_2_12",
    "@maven//:org_scalaz_scalaz_core_2_12",
    "@maven//:org_slf4j_slf4j_api",
]

da_scala_test_suite(
    name = "participant-integration-api-tests",
    srcs = glob(
        ["src/test/suite/**/*.scala"],
        exclude = ["src/test/suite/**/ResetService*IT.scala"],
    ),
    data = [
        "//ledger/test-common:model-tests.dar",
        "//ledger/test-common/test-certificates",
    ],
    resources = glob(["src/test/resources/**/*"]),
    deps = test_deps,
)

exports_files(["src/main/resources/logback.xml"])

scaladoc_jar(
    name = "scaladoc",
    srcs = [
        ":sources",
        "//ledger/ledger-api-auth:sources",
        "//ledger/participant-state:sources",
    ],
    doctitle = "DAML participant integration API",
    plugins = [
        silencer_plugin,
    ],
    root_content = "rootdoc.txt",
    scalacopts = ["-P:silencer:checkUnused"],
    visibility = [
        "//visibility:public",
    ],
    deps = compile_deps,
) if not is_windows else None

filegroup(
    name = "sources",
    srcs = glob(["src/main/scala/**/*.scala"]),
    visibility = ["//visibility:public"],
)
