# Copyright (c) 2022 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.
# SPDX-License-Identifier: Apache-2.0

load("//ledger/ledger-api-tests:conformance.bzl", "conformance_test")
load("@os_info//:os_info.bzl", "is_windows")

java_binary(
    name = "canton",
    main_class = "com.digitalasset.canton.CantonCommunityApp",
    runtime_deps = ["@canton//:lib"],
)

# Disabled on Windows because `coreutils` and `grpcurl` aren't easily available.
genrule(
    name = "canton-test-runner-with-dependencies-script",
    srcs = [
        ":canton-test-runner.sh",
    ],
    outs = ["canton-test-runner-with-dependencies.sh"],
    cmd = """
cat > $@ <<EOF
#!/usr/bin/env bash

set -euo pipefail

f=bazel_tools/tools/bash/runfiles/runfiles.bash
source "\\$${RUNFILES_DIR:-/dev/null}/\\$$f" 2>/dev/null || \\
  source "\\$$(grep -sm1 "^\\$$f " "\\$${RUNFILES_MANIFEST_FILE:-/dev/null}" | cut -f2- -d' ')" 2>/dev/null || \\
  source "\\$$0.runfiles/\\$$f" 2>/dev/null || \\
  source "\\$$(grep -sm1 "^\\$$f " "\\$$0.runfiles_manifest" | cut -f2- -d' ')" 2>/dev/null || \\
  source "\\$$(grep -sm1 "^\\$$f " "\\$$0.exe.runfiles_manifest" | cut -f2- -d' ')" 2>/dev/null || \\
  { echo>&2 "ERROR: cannot find \\$$f"; exit 1; }; f=; set -e

PATH="\\$$(rlocation coreutils_nix/bin):\\$$(rlocation curl_nix/bin):\\$$(rlocation grpcurl_nix/bin):\\$$(rlocation jq_dev_env/bin):\\$$PATH"
export PATH

EOF
cat $< >> $@
""",
) if not is_windows else None

# Required because running `canton-test-runner-with-dependencies-script` directly fails.
sh_binary(
    name = "canton-test-runner-with-dependencies",
    srcs = [":canton-test-runner-with-dependencies-script"],
    # Ideally these would be part of the script definition above, but that doesn't seem to work.
    deps = ["@bazel_tools//tools/bash/runfiles"],
) if not is_windows else None

conformance_test(
    name = "conformance-test",
    dev_mod_flag = "-C _shared.participant_parameters.unsafe-enable-daml-lf-dev-version=true",
    extra_data = [
        ":bootstrap.canton",
        ":canton_deploy.jar",
        ":canton.conf",
        ":logback-debug.xml",
        "@coreutils_nix//:bin/base64",
        "@curl_nix//:bin/curl",
        "@grpcurl_nix//:bin/grpcurl",
        "@jq_dev_env//:jq",
        "@bazel_tools//tools/jdk",
    ],
    extra_runner_args = ["7000"],
    lf_versions = [
        "default",
        "latest",
        # TODO https://github.com/digital-asset/daml/issues/13653
        #  reactivate dev tests once canton supports clashing interface choice names
        # "dev",
    ],
    ports = [
        5011,
        5021,
        5031,
        5041,
    ],
    runner = "@//bazel_tools/client_server/runner_with_health_check",
    server = ":canton-test-runner-with-dependencies",
    server_args = [],
    test_tool_args = [
        "--verbose",
        "--concurrent-test-runs=1",  # lowered from default #procs to reduce flakes - details in https://github.com/digital-asset/daml/issues/7316
        "--timeout-scale-factor=2",  # increased to reduce flakes particularly wrt timeouts in TransactionService*IT tests
        "--exclude=" + ",".join([
            # dynamic config management not supported by Canton
            "ConfigManagementServiceIT",
            "LedgerConfigurationServiceIT",
            "ClosedWorldIT",  # Canton currently fails this test with a different error (missing namespace in "unallocated" party id)
            "ParticipantPruningIT",  # pruning not supported in Canton Community
            # tests with special config run in canton enterprise-repo
            "TLSOnePointThreeIT",
            "TLSAtLeastOnePointTwoIT",
            "CommandDeduplicationPeriodValidationIT:OffsetPruned",  # requires pruning not available in canton community
            "DeeplyNestedValueIT",  # FIXME: Too deeply nested values flake with a time out (half of the time)
        ]),
    ],
) if not is_windows else None
