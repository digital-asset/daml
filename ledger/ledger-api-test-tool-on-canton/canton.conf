# Copyright (c) 2020 The DAML Authors. All rights reserved.
# SPDX-License-Identifier: Apache-2.0

canton {
  parameters {
    party-change-notification {
      type = via-domain
    }
  }

  domains {
    test_domain {
      storage {
        type = memory
      }

      crypto.type = tink

      public-api.port = 4011
      admin-api.port = 4012

      domain-parameters {
        participant-response-timeout = PT1M
        ledger-time-record-time-tolerance = PT3M
        mediator-reaction-timeout = PT1M
        max-rate-per-participant = 1000
      }
    }
  }

  participants {
    participant_1 {
      storage {
        type = "h2"
        config = {
          url = "jdbc:h2:mem:db1;MODE=PostgreSQL;LOCK_TIMEOUT=10000;DB_CLOSE_DELAY=-1"
          user = "participant_1"
          password = "pwd"
          driver = org.h2.Driver
        }
      }

      crypto.type = tink

      ledger-api.port = 5011
      admin-api.port = 5012
    }

    participant_2 {
      storage {
        type = "h2"
        config = {
          url = "jdbc:h2:mem:db2;MODE=PostgreSQL;LOCK_TIMEOUT=10000;DB_CLOSE_DELAY=-1"
          user = "participant_2"
          password = "pwd"
          driver = org.h2.Driver
        }
      }

      crypto.type = tink

      ledger-api.port = 5021
      admin-api.port = 5022
    }

    participant_3 {
      storage {
        type = "h2"
        config = {
          url = "jdbc:h2:mem:db3;MODE=PostgreSQL;LOCK_TIMEOUT=10000;DB_CLOSE_DELAY=-1"
          user = "participant_3"
          password = "pwd"
          driver = org.h2.Driver
        }
      }

      crypto.type = tink

      ledger-api.port = 5031
      admin-api.port = 5032
    }

    participant_4 {
      storage {
        type = "h2"
        config = {
          url = "jdbc:h2:mem:db4;MODE=PostgreSQL;LOCK_TIMEOUT=10000;DB_CLOSE_DELAY=-1"
          user = "participant_4"
          password = "pwd"
          driver = org.h2.Driver
        }
      }

      crypto.type = tink

      ledger-api.port = 5041
      admin-api.port = 5042
    }
  }

  monitoring.health {
    server.port = 7000

    check {
      type = ping
      participant = participant_1
      interval = 5s
      timeout = 20s
    }
  }
}
