This is a workaround for some strange behavior from Bazel: when the cache is
enabled, bazel complains that some system headers have not been listed as
dependencies. Bazel _does_ pick up on the `cxx_builtin_include_directory` but
fails to apply the `-no-canonical-prefixes -fno-canonical-system-headers` flags
when building the network cbits (only happens on network). See
https://github.com/digital-asset/daml/issues/180

There are quite a few things that should be clarified but in the meantime we
specify the whole `C:/` drive as a prefix for matching system headers (see
https://github.com/bazelbuild/bazel/blob/357cb1e8f6b2ef90c4840a88e5b564d2f6fdaa71/src/main/java/com/google/devtools/build/lib/rules/cpp/CppCompileAction.java#L466.)

Generated with:
git -C rules_haskell diff $(git -C rules_haskell  merge-base master HEAD) > bazel_tools/haskell-win-sys-includes.patch

diff --git a/haskell/CROSSTOOL.windows b/haskell/CROSSTOOL.windows
index ae16776..ffa52bf 100644
--- a/haskell/CROSSTOOL.windows
+++ b/haskell/CROSSTOOL.windows
@@ -30,6 +30,8 @@ toolchain {
   tool_path { name: "objcopy" path: "mingw/bin/objcopy" }
   tool_path { name: "objdump" path: "mingw/bin/objdump" }
   tool_path { name: "strip" path: "mingw/bin/strip" }
+
+  cxx_builtin_include_directory: "C:/"
   cxx_builtin_include_directory: "mingw"
   cxx_flag: "-std=gnu++0x"
 
