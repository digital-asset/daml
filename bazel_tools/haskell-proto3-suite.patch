diff --git a/proto3-suite.cabal b/proto3-suite.cabal
index 8ef63e9..08d40ca 100644
--- a/proto3-suite.cabal
+++ b/proto3-suite.cabal
@@ -65,7 +65,7 @@ library
                        quickcheck-instances < 0.4,
                        safe ==0.3.*,
                        semigroups ==0.18.*,
-                       swagger2 >=2.1.6 && <2.4,
+                       swagger2 >=2.1.6 && <2.5,
                        system-filepath,
                        text >= 0.2 && <1.3,
                        transformers >=0.4 && <0.6,
diff --git a/src/Proto3/Suite/DotProto/Generate.hs b/src/Proto3/Suite/DotProto/Generate.hs
index 2cf78cd..03faf3b 100644
--- a/src/Proto3/Suite/DotProto/Generate.hs
+++ b/src/Proto3/Suite/DotProto/Generate.hs
@@ -1023,7 +1023,11 @@ toSchemaInstanceDeclaration messageName maybeConstructors fieldNames = do
         where
           _paramSchemaType = jsonpbName "_paramSchemaType"
 
+#if MIN_VERSION_swagger2(2,4,0)
+          _paramSchemaTypeExpression = HsApp justC (HsVar (jsonpbName "SwaggerObject"))
+#else
           _paramSchemaTypeExpression = HsVar (jsonpbName "SwaggerObject")
+#endif
 
   let _schemaParamSchemaExpression = HsRecUpdate memptyE paramSchemaUpdates
 
diff --git a/src/Proto3/Suite/DotProto/Generate/Swagger.hs b/src/Proto3/Suite/DotProto/Generate/Swagger.hs
index 6c6962a..17adf90 100644
--- a/src/Proto3/Suite/DotProto/Generate/Swagger.hs
+++ b/src/Proto3/Suite/DotProto/Generate/Swagger.hs
@@ -1,3 +1,4 @@
+{-# LANGUAGE CPP                 #-}
 {-# LANGUAGE DataKinds           #-}
 {-# LANGUAGE FlexibleInstances   #-}
 {-# LANGUAGE FlexibleContexts    #-}
@@ -17,7 +18,11 @@ module Proto3.Suite.DotProto.Generate.Swagger
   )
 where
 
+#if MIN_VERSION_swagger2(2,4,0)
+import           Control.Lens                    ((&), (?~))
+#else
 import           Control.Lens                    ((&), (.~), (?~))
+#endif
 import           Data.Aeson                      (Value (String))
 import           Data.Aeson.Encode.Pretty        (encodePretty)
 import           Data.ByteString                 (ByteString)
@@ -55,7 +60,11 @@ instance {-# OVERLAPPING #-} ToSchema (OverrideToSchema (V.Vector ByteString)) w
   declareNamedSchema _ = return (NamedSchema Nothing schema_)
     where
       schema_ = mempty
+#if MIN_VERSION_swagger2(2,4,0)
+        & type_ ?~ SwaggerArray
+#else
         & type_ .~ SwaggerArray
+#endif
         & items ?~ SwaggerItemsObject (Inline byteSchema)
 
 {-| This is a convenience function that uses type inference to select the
@@ -66,7 +75,7 @@ asProxy _ = Proxy
 
 -- | Pretty-prints a schema. Useful when playing around with schemas in the
 -- REPL.
-ppSchema :: ToSchema a => proxy a -> IO ()
+ppSchema :: ToSchema a => Proxy a -> IO ()
 ppSchema = LC8.putStrLn . encodePretty . toSchema
 
 -- | JSONPB schemas for protobuf enumerations
@@ -77,7 +86,11 @@ instance (Finite e, Named e) => ToSchema (Enumerated e) where
     let enumMemberNames = dropPrefix . fst <$> enumerate (proxy# :: Proxy# e)
     return $ NamedSchema (Just enumName)
            $ mempty
+#if MIN_VERSION_swagger2(2,4,0)
+             & type_ ?~ SwaggerString
+#else
              & type_ .~ SwaggerString
+#endif
              & enum_ ?~ fmap String enumMemberNames
 
 instance ToSchema (Fixed Int32) where
