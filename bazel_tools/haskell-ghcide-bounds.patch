diff --git a/ghcide.cabal b/ghcide.cabal
index bba7ee4..6acb632 100644
--- a/ghcide.cabal
+++ b/ghcide.cabal
@@ -43,8 +43,8 @@ library
         filepath,
         haddock-library >= 1.8,
         hashable,
-        haskell-lsp-types == 0.21.*,
-        haskell-lsp == 0.21.*,
+        haskell-lsp-types == 0.23.*,
+        haskell-lsp == 0.23.*,
         mtl,
         network-uri,
         prettyprinter-ansi-terminal,
diff --git a/src/Development/IDE/LSP/LanguageServer.hs b/src/Development/IDE/LSP/LanguageServer.hs
index 2b3fa59..ac7c29f 100644
--- a/src/Development/IDE/LSP/LanguageServer.hs
+++ b/src/Development/IDE/LSP/LanguageServer.hs
@@ -144,14 +144,14 @@ runLanguageServer options userHandlers onInitialConfig onConfigChange getIdeStat
                     Response x@RequestMessage{_id, _params} wrap act ->
                         checkCancelled ide clearReqId waitForCancel lspFuncs wrap act x _id _params $
                             \case
-                              Left e  -> sendFunc $ wrap $ ResponseMessage "2.0" (responseId _id) Nothing (Just e)
-                              Right r -> sendFunc $ wrap $ ResponseMessage "2.0" (responseId _id) (Just r) Nothing
+                              Left e  -> sendFunc $ wrap $ ResponseMessage "2.0" (responseId _id) (Left e)
+                              Right r -> sendFunc $ wrap $ ResponseMessage "2.0" (responseId _id) (Right r)
                     ResponseAndRequest x@RequestMessage{_id, _params} wrap wrapNewReq act ->
                         checkCancelled ide clearReqId waitForCancel lspFuncs wrap act x _id _params $
                             \(res, newReq) -> do
                                 case res of
-                                    Left e  -> sendFunc $ wrap $ ResponseMessage "2.0" (responseId _id) Nothing (Just e)
-                                    Right r -> sendFunc $ wrap $ ResponseMessage "2.0" (responseId _id) (Just r) Nothing
+                                    Left e  -> sendFunc $ wrap $ ResponseMessage "2.0" (responseId _id) (Left e)
+                                    Right r -> sendFunc $ wrap $ ResponseMessage "2.0" (responseId _id) (Right r)
                                 whenJust newReq $ \(rm, newReqParams) -> do
                                     reqId <- getNextReqId
                                     sendFunc $ wrapNewReq $ RequestMessage "2.0" reqId rm newReqParams
@@ -175,16 +175,16 @@ runLanguageServer options userHandlers onInitialConfig onConfigChange getIdeStat
                         Left () -> do
                             logDebug (ideLogger ide) $ T.pack $
                                 "Cancelled request " <> show _id
-                            sendFunc $ wrap $ ResponseMessage "2.0" (responseId _id) Nothing $
-                                Just $ ResponseError RequestCancelled "" Nothing
+                            sendFunc $ wrap $ ResponseMessage "2.0" (responseId _id) $
+                                Left $ ResponseError RequestCancelled "" Nothing
                         Right res -> k res
                 ) $ \(e :: SomeException) -> do
                     logError (ideLogger ide) $ T.pack $
                         "Unexpected exception on request, please report!\n" ++
                         "Message: " ++ show msg ++ "\n" ++
                         "Exception: " ++ show e
-                    sendFunc $ wrap $ ResponseMessage "2.0" (responseId _id) Nothing $
-                        Just $ ResponseError InternalError (T.pack $ show e) Nothing
+                    sendFunc $ wrap $ ResponseMessage "2.0" (responseId _id) $
+                        Left $ ResponseError InternalError (T.pack $ show e) Nothing
 
 initializeRequestHandler :: PartialHandlers config
 initializeRequestHandler = PartialHandlers $ \WithMessage{..} x -> return x{
diff --git a/src/Development/IDE/Plugin/Completions/Logic.hs b/src/Development/IDE/Plugin/Completions/Logic.hs
index 1ec68cf..c37571f 100644
--- a/src/Development/IDE/Plugin/Completions/Logic.hs
+++ b/src/Development/IDE/Plugin/Completions/Logic.hs
@@ -132,7 +132,7 @@ occNameToComKind ty oc
 
 mkCompl :: IdeOptions -> CompItem -> CompletionItem
 mkCompl IdeOptions{..} CI{origName,importedFrom,thingType,label,isInfix,docs} =
-  CompletionItem label kind (List []) ((colon <>) <$> typeText)
+  CompletionItem label kind Nothing ((colon <>) <$> typeText)
     (Just $ CompletionDocMarkup $ MarkupContent MkMarkdown $ T.intercalate sectionSeparator docs')
     Nothing Nothing Nothing Nothing (Just insertText) (Just Snippet)
     Nothing Nothing Nothing Nothing Nothing
@@ -186,13 +186,13 @@ getArgText typ = argText
 
 mkModCompl :: T.Text -> CompletionItem
 mkModCompl label =
-  CompletionItem label (Just CiModule) (List []) Nothing
+  CompletionItem label (Just CiModule) Nothing Nothing
     Nothing Nothing Nothing Nothing Nothing Nothing Nothing
     Nothing Nothing Nothing Nothing Nothing
 
 mkImportCompl :: T.Text -> T.Text -> CompletionItem
 mkImportCompl enteredQual label =
-  CompletionItem m (Just CiModule) (List []) (Just label)
+  CompletionItem m (Just CiModule) Nothing (Just label)
     Nothing Nothing Nothing Nothing Nothing Nothing Nothing
     Nothing Nothing Nothing Nothing Nothing
   where
@@ -200,13 +200,13 @@ mkImportCompl enteredQual label =
 
 mkExtCompl :: T.Text -> CompletionItem
 mkExtCompl label =
-  CompletionItem label (Just CiKeyword) (List []) Nothing
+  CompletionItem label (Just CiKeyword) Nothing Nothing
     Nothing Nothing Nothing Nothing Nothing Nothing Nothing
     Nothing Nothing Nothing Nothing Nothing
 
 mkPragmaCompl :: T.Text -> T.Text -> CompletionItem
 mkPragmaCompl label insertText =
-  CompletionItem label (Just CiKeyword) (List []) Nothing
+  CompletionItem label (Just CiKeyword) Nothing Nothing
     Nothing Nothing Nothing Nothing Nothing (Just insertText) (Just Snippet)
     Nothing Nothing Nothing Nothing Nothing
 
diff --git a/stack-ghc-lib.yaml b/stack-ghc-lib.yaml
index 8cfa84b..47a433d 100644
--- a/stack-ghc-lib.yaml
+++ b/stack-ghc-lib.yaml
@@ -2,9 +2,9 @@ resolver: nightly-2019-09-16
 packages:
 - .
 extra-deps:
-- haskell-lsp-0.21.0.0
-- haskell-lsp-types-0.21.0.0
-- lsp-test-0.10.2.0
+- haskell-lsp-0.23.0.0
+- haskell-lsp-types-0.23.0.0
+- lsp-test-0.11.0.7
 - hie-bios-0.4.0
 - ghc-lib-parser-8.8.1
 - ghc-lib-8.8.1
diff --git a/stack.yaml b/stack.yaml
index 738a28d..fec4625 100644
--- a/stack.yaml
+++ b/stack.yaml
@@ -2,9 +2,9 @@ resolver: nightly-2019-09-21
 packages:
 - .
 extra-deps:
-- haskell-lsp-0.21.0.0
-- haskell-lsp-types-0.21.0.0
-- lsp-test-0.10.2.0
+- haskell-lsp-0.23.0.0
+- haskell-lsp-types-0.23.0.0
+- lsp-test-0.11.0.7
 - hie-bios-0.4.0
 - fuzzy-0.1.0.0
 - regex-pcre-builtin-0.95.1.1.8.43
diff --git a/stack84.yaml b/stack84.yaml
index 753c5d5..fbb674c 100644
--- a/stack84.yaml
+++ b/stack84.yaml
@@ -5,9 +5,9 @@ packages:
 extra-deps:
 - aeson-1.4.6.0
 - base-orphans-0.8.2
-- haskell-lsp-0.21.0.0
-- haskell-lsp-types-0.21.0.0
-- lsp-test-0.10.2.0
+- haskell-lsp-0.23.0.0
+- haskell-lsp-types-0.23.0.0
+- lsp-test-0.11.0.7
 - rope-utf16-splay-0.3.1.0
 - filepattern-0.1.1
 - js-dgtable-0.5.2
diff --git a/stack88.yaml b/stack88.yaml
index 4c2e443..36568a9 100644
--- a/stack88.yaml
+++ b/stack88.yaml
@@ -2,9 +2,9 @@ resolver: nightly-2020-02-13
 packages:
 - .
 extra-deps:
-- haskell-lsp-0.21.0.0
-- haskell-lsp-types-0.21.0.0
-- lsp-test-0.10.2.0
+- haskell-lsp-0.23.0.0
+- haskell-lsp-types-0.23.0.0
+- lsp-test-0.11.0.7
 
 nix:
   packages: [zlib]
