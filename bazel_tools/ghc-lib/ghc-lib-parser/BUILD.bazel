# Copyright (c) 2022 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.
# SPDX-License-Identifier: Apache-2.0

load("@bazel_skylib//rules:copy_file.bzl", "copy_file")
load("@rules_haskell//haskell:cabal.bzl", "haskell_cabal_library")
load("@stackage//:packages.bzl", "packages")
load("//bazel_tools/ghc-lib:version.bzl", "GHC_LIB_VERSION")
load("//bazel_tools:pkg.bzl", "unpack_tar")
load("//bazel_tools/sh:sh.bzl", "sh_inline_test")

unpack_tar(
    name = "unpack",
    src = "@da-ghc//:ghc-lib-parser-{}.tar.gz".format(GHC_LIB_VERSION),
    outs = [
        "srcs/LICENSE",
        "srcs/compiler/",
        "srcs/ghc-lib/",
        "srcs/includes/",
        "srcs/libraries/",
    ],
    prefix = "srcs",
    strip = 1,
)

copy_file(
    name = "cabal-file",
    src = "@da-ghc//:ghc-lib-parser.cabal",
    out = "srcs/ghc-lib-parser.cabal",
)

sh_inline_test(
    name = "cabal-file-diff",
    cmd = """\
EXPECTED=$$(canonicalize_rlocation $(rootpath @da-ghc//:ghc-lib-parser.cabal))
ACTUAL=$$(canonicalize_rlocation $(rootpath ghc-lib-parser.cabal))
$(POSIX_DIFF) -Naur $$EXPECTED $$ACTUAL || {
  echo "The checked in ghc-lib-parser.cabal file is out of sync" >&2
  exit 1
}
""",
    data = [
        "ghc-lib-parser.cabal",
        "@da-ghc//:ghc-lib-parser.cabal",
    ],
    toolchains = ["@rules_sh//sh/posix:make_variables"],
)

filegroup(
    name = "srcs",
    srcs = [
        ":cabal-file",
        ":unpack",
    ],
)

haskell_cabal_library(
    name = "ghc-lib-parser",
    srcs = [":srcs"],
    flags = packages["ghc-lib-parser"].flags,
    haddock = False,
    tools = packages["ghc-lib-parser"].tools,
    version = packages["ghc-lib-parser"].version,
    visibility = ["//visibility:public"],
    deps = packages["ghc-lib-parser"].deps,
)
