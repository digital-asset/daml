-- Copyright (c) 2020 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.
-- SPDX-License-Identifier: Apache-2.0

module RecordsAndVariants where

data EitherM a b = LeftM a | RightM b deriving (Eq, Show)

data Maybe a = Nope | Just a deriving (Eq, Show)

data SimpleRecord = SimpleRecord { foo: Bool } deriving (Eq, Show)

data RecordAB a b = RecordAB { foo: a; baz: b } deriving (Eq, Show)

data MaybeRec = JustRec SimpleRecord | NotRec deriving (Eq, Show)

data MaybeRecA a b = JustRecA (RecordAB a b) | NotRecA deriving (Eq, Show)

data HRec = HRec { foo: Bool; mrea: MaybeRecA Text Bool } deriving (Eq, Show)

data MaybeRecRecordAB a b c d = MaybeRecRecordABLeft (MaybeRecA a [c]) | MaybeRecRecordABRight (RecordAB c d)  deriving (Eq, Show)

data EitherSimple = EitherLeft | EitherRight deriving (Eq, Show)

template RecordsAndVariants
  with
    reference: Text
    party: Party
    simpleRecord: SimpleRecord
    recordTextInt: RecordAB Text Int
    eitherVariant: EitherM Text Int
    enum: EitherSimple
    deepNested: MaybeRecRecordAB Text Text [Optional [Int]] (RecordAB Text Bool)
  where
    signatory party

    agreement
      "whatevs"

suite =
  scenario do
    bob <- getParty "Bob"
    submit bob do
      create RecordsAndVariants with
        reference = "All-in-one"
        party = bob
        simpleRecord = SimpleRecord with foo = True
        recordTextInt = RecordAB with foo = "Foo", baz = 6
        eitherVariant = RightM 7
        enum = EitherRight
        deepNested = MaybeRecRecordABRight $ RecordAB with
          foo = [Some [1, 2, 3], None, Some [4, 5, 6], None, Some [7, 8, 9]]
          baz = RecordAB with
            foo = "foo"
            baz = False

template Solo
  with
    party: Party
    tick: Int
  where
    signatory party

template Duo
  with
    party: Party
    other: Party
    tick: Int
  where
    signatory party
    observer other

multiParty = scenario do
  bob <- getParty "Bob"
  alice <- getParty "Alice"
  quux <- getParty "Quux"
  -- visible to Bob,Alice: 1, 2, 4, 5, 7
  submit bob do create (Solo bob 1)
  submit alice do create (Solo alice 2)
  submit quux do create (Solo quux 3)
  submit bob do create (Duo bob quux 4)
  submit quux do
    create (Duo quux alice 5)
    create (Duo quux quux 6)
  submit bob do create (Duo bob alice 7) -- ensure not seen twice
