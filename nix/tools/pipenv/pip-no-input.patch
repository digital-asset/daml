Setting PIP_NO_INPUT=1 tells Pip that it should not try to read input
from the user. Reading input always fails since Pipenv spawns the Pip
process without access to stdin. The result is an ugly traceback, but
with PIP_NO_INPUT set, the user gets a more pleasant error instead.

--- a/lib/python3.6/site-packages/pipenv/core.py
+++ b/lib/python3.6/site-packages/pipenv/core.py
@@ -1419,6 +1419,7 @@
         click.echo("$ {0}".format(pip_command), err=True)
     cache_dir = vistir.compat.Path(PIPENV_CACHE_DIR)
     pip_config = {
+        "PIP_NO_INPUT": "1",
         "PIP_CACHE_DIR": vistir.misc.fs_str(cache_dir.as_posix()),
         "PIP_WHEEL_DIR": vistir.misc.fs_str(cache_dir.joinpath("wheels").as_posix()),
         "PIP_DESTINATION_DIR": vistir.misc.fs_str(
