From 7cd32eb90f1a52be9f90d2cb1a4d9c0c1c3069bc Mon Sep 17 00:00:00 2001
From: Gary Verhaegen <gary.verhaegen@digitalasset.com>
Date: Thu, 11 Aug 2022 15:58:14 +0200
Subject: [PATCH] m1

---
 scripts/packages/bazel.sh                                | 9 ++++++++-
 .../build/lib/analysis/config/AutoCpuConverter.java      | 1 +
 .../build/lib/rules/apple/AppleConfiguration.java        | 2 ++
 3 files changed, 11 insertions(+), 1 deletion(-)

diff --git a/scripts/packages/bazel.sh b/scripts/packages/bazel.sh
index 03b7417369..a0eaa008c6 100755
--- a/scripts/packages/bazel.sh
+++ b/scripts/packages/bazel.sh
@@ -16,6 +16,9 @@
 
 set -eu
 
+echo "HEY!!"
+uname -a
+
 # This is a script which can be installed as your "bazel" binary instead of the
 # real Bazel binary. When called, it tries to determine and run the correct
 # Bazel version for a given project and forwards all arguments to it.
@@ -103,7 +106,8 @@ function get_workspace_root() {
 get_workspace_root
 
 readonly wrapper_dir="$(dirname "$(get_realpath "${BASH_SOURCE[0]}")")"
-readonly os_arch_suffix="$(uname -s | tr '[:upper:]' '[:lower:]')-$(uname -m)"
+readonly os_arch_suffix=darwin-arm64 #"$(uname -s | tr '[:upper:]' '[:lower:]')-$(uname -m)"
+echo os_arch_suffix: \"$os_arch_suffix\"
 
 function get_bazel_version() {
   bazel_version=""
@@ -142,6 +146,7 @@ function get_bazel_version() {
     fi
   fi
 
+  echo "bazel_version: \"$bazel_version\""
   readonly reason
   readonly bazel_version
 }
@@ -166,6 +171,8 @@ if [[ ! -x ${BAZEL_REAL} && -x ${bazel_real_path} ]]; then
   fi
 fi
 
+echo "BAZEL_REAL=\"$BAZEL_REAL\""
+
 # If the repository contains a checked-in executable called tools/bazel, we
 # assume that they know what they're doing and have their own way of versioning
 # Bazel. Thus, we don't have to print our helpful messages or error out in case
diff --git a/src/main/java/com/google/devtools/build/lib/analysis/config/AutoCpuConverter.java b/src/main/java/com/google/devtools/build/lib/analysis/config/AutoCpuConverter.java
index 9f5fbca65f..461cd202f0 100644
--- a/src/main/java/com/google/devtools/build/lib/analysis/config/AutoCpuConverter.java
+++ b/src/main/java/com/google/devtools/build/lib/analysis/config/AutoCpuConverter.java
@@ -32,6 +32,7 @@ public class AutoCpuConverter implements Converter<String> {
     if (input.isEmpty()) {
       // TODO(philwo) - replace these deprecated names with more logical ones (e.g. k8 becomes
       // linux-x86_64, darwin includes the CPU architecture, ...).
+        System.err.println("OS.getCurrent: " + OS.getCurrent());
       switch (OS.getCurrent()) {
         case DARWIN:
           switch (CPU.getCurrent()) {
diff --git a/src/main/java/com/google/devtools/build/lib/rules/apple/AppleConfiguration.java b/src/main/java/com/google/devtools/build/lib/rules/apple/AppleConfiguration.java
index 771aefbfa8..fcde9859ea 100644
--- a/src/main/java/com/google/devtools/build/lib/rules/apple/AppleConfiguration.java
+++ b/src/main/java/com/google/devtools/build/lib/rules/apple/AppleConfiguration.java
@@ -184,6 +184,8 @@ public class AppleConfiguration extends Fragment implements AppleConfigurationAp
    */
   @Override
   public String getSingleArchitecture() {
+      System.err.println("getSingleArchitecture" + appleSplitCpu);
+      System.err.println("getSingleArchitecture" + applePlatformType);
     if (!Strings.isNullOrEmpty(appleSplitCpu)) {
       return appleSplitCpu;
     }
-- 
2.37.1

