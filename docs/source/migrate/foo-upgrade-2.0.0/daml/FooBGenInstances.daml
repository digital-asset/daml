-- Copyright (c) 2020 The DAML Authors. All rights reserved.
-- SPDX-License-Identifier: Apache-2.0

--------------------------------------------------------------------------------

{-# LANGUAGE NoDamlSyntax #-}
{-# LANGUAGE EmptyCase #-}
module FooBGenInstances where
import qualified DA.Generics
import qualified FooB
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Show
import qualified GHC.Tuple
import qualified GHC.Types
import qualified DA.Internal.LF
import qualified DA.Internal.Prelude
import qualified DA.Internal.Record
import qualified DA.Internal.Template
import qualified GHC.Err
import qualified GHC.CString
import qualified GHC.Types
instance {-# NO_OVERLAP #-} DA.Generics.Generic FooB.Foo (DA.Generics.D1 ('DA.Generics.MetaData ('DA.Generics.MetaData0 "Foo" "Foo" "d409bde098714f5965b795cef3cb2fc7a4aa5f677f1ad67a28d8036ea9814e61" 'Prelude.False)) (DA.Generics.C1 ('DA.Generics.MetaCons ('DA.Generics.MetaCons0 "Foo" 'DA.Generics.PrefixI 'Prelude.True)) ((DA.Generics.:*:) (DA.Generics.S1 ('DA.Generics.MetaSel ('DA.Generics.MetaSel0 ('Prelude.Some "a") 'DA.Generics.NoSourceUnpackedness 'DA.Generics.NoSourceStrictness)) (DA.Generics.Rec0 Int)) (DA.Generics.S1 ('DA.Generics.MetaSel ('DA.Generics.MetaSel0 ('Prelude.Some "p") 'DA.Generics.NoSourceUnpackedness 'DA.Generics.NoSourceStrictness)) (DA.Generics.Rec0 DA.Internal.LF.Party))))) where
  from x
    = DA.Generics.M1
        (case x of {
           FooB.Foo g1 g2
             -> DA.Generics.M1
                  (DA.Generics.P1
                     (DA.Generics.M1 (DA.Generics.K1 g1))
                     (DA.Generics.M1 (DA.Generics.K1 g2))) })
  to (DA.Generics.M1 x)
    = case x of {
        (DA.Generics.M1 (DA.Generics.P1 (DA.Generics.M1 (DA.Generics.K1 g1))
                                        (DA.Generics.M1 (DA.Generics.K1 g2))))
          -> FooB.Foo g1 g2 }
instance {-# NO_OVERLAP #-} DA.Generics.Generic FooB.Bar (DA.Generics.D1 ('DA.Generics.MetaData ('DA.Generics.MetaData0 "Bar" "Foo" "d409bde098714f5965b795cef3cb2fc7a4aa5f677f1ad67a28d8036ea9814e61" 'Prelude.False)) (DA.Generics.C1 ('DA.Generics.MetaCons ('DA.Generics.MetaCons0 "Bar" 'DA.Generics.PrefixI 'Prelude.True)) ((DA.Generics.:*:) (DA.Generics.S1 ('DA.Generics.MetaSel ('DA.Generics.MetaSel0 ('Prelude.Some "t") 'DA.Generics.NoSourceUnpackedness 'DA.Generics.NoSourceStrictness)) (DA.Generics.Rec0 GHC.Types.Text)) (DA.Generics.S1 ('DA.Generics.MetaSel ('DA.Generics.MetaSel0 ('Prelude.Some "p") 'DA.Generics.NoSourceUnpackedness 'DA.Generics.NoSourceStrictness)) (DA.Generics.Rec0 DA.Internal.LF.Party))))) where
  from x
    = DA.Generics.M1
        (case x of {
           FooB.Bar g1 g2
             -> DA.Generics.M1
                  (DA.Generics.P1
                     (DA.Generics.M1 (DA.Generics.K1 g1))
                     (DA.Generics.M1 (DA.Generics.K1 g2))) })
  to (DA.Generics.M1 x)
    = case x of {
        (DA.Generics.M1 (DA.Generics.P1 (DA.Generics.M1 (DA.Generics.K1 g1))
                                        (DA.Generics.M1 (DA.Generics.K1 g2))))
          -> FooB.Bar g1 g2 }

