-- Copyright (c) 2019 The DAML Authors. All rights reserved.
-- SPDX-License-Identifier: Apache-2.0

--------------------------------------------------------------------------------

{-# LANGUAGE NoDamlSyntax #-}
{-# LANGUAGE EmptyCase #-}
module FooAGenInstances where
import qualified DA.Generics
import qualified FooA
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Show
import qualified GHC.Tuple
import qualified GHC.Types
import qualified DA.Internal.LF
import qualified DA.Internal.Prelude
import qualified DA.Internal.Record
import qualified DA.Internal.Template
import qualified GHC.Err
import qualified GHC.CString
import qualified GHC.Types
instance {-# NO_OVERLAP #-} DA.Generics.Generic FooA.Foo (DA.Generics.D1 ('DA.Generics.MetaData ('DA.Generics.MetaData0 "Foo" "Foo" "78d8c041279ecfdb9d3925b360db44afa455744648b94d8e082b99357968c00f" 'Prelude.False)) (DA.Generics.C1 ('DA.Generics.MetaCons ('DA.Generics.MetaCons0 "Foo" 'DA.Generics.PrefixI 'Prelude.True)) ((DA.Generics.:*:) (DA.Generics.S1 ('DA.Generics.MetaSel ('DA.Generics.MetaSel0 ('Prelude.Some "a") 'DA.Generics.NoSourceUnpackedness 'DA.Generics.NoSourceStrictness)) (DA.Generics.Rec0 Int)) (DA.Generics.S1 ('DA.Generics.MetaSel ('DA.Generics.MetaSel0 ('Prelude.Some "p") 'DA.Generics.NoSourceUnpackedness 'DA.Generics.NoSourceStrictness)) (DA.Generics.Rec0 DA.Internal.LF.Party))))) where
  from x
    = DA.Generics.M1
        (case x of {
           FooA.Foo g1 g2
             -> DA.Generics.M1
                  (DA.Generics.P1
                     (DA.Generics.M1 (DA.Generics.K1 g1))
                     (DA.Generics.M1 (DA.Generics.K1 g2))) })
  to (DA.Generics.M1 x)
    = case x of {
        (DA.Generics.M1 (DA.Generics.P1 (DA.Generics.M1 (DA.Generics.K1 g1))
                                        (DA.Generics.M1 (DA.Generics.K1 g2))))
          -> FooA.Foo g1 g2 }

