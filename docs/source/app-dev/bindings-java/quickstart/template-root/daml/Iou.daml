-- Copyright (c) 2022 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.
-- SPDX-License-Identifier: Apache-2.0

-- BEGIN_IOU_MODULE_NAME
module Iou where
-- END_IOU_MODULE_NAME

type IouCid = ContractId Iou

-- BEGIN_IOU_TEMPLATE_DATATYPE
template Iou
  with
    issuer : Party
    owner : Party
    currency : Text
    amount : Decimal
    observers : [Party]
-- END_IOU_TEMPLATE_DATATYPE
  where
-- BEGIN_IOU_TEMPLATE_CONDITIONS
    ensure amount > 0.0

    signatory issuer, owner
-- END_IOU_TEMPLATE_CONDITIONS
-- BEGIN_IOU_TEMPLATE_OBSERVERS
    observer observers
-- END_IOU_TEMPLATE_OBSERVERS

      -- Split the IOU by dividing the amount.
-- BEGIN_IOU_TEMPLATE_SPLIT
    choice Iou_Split : (IouCid, IouCid)
        with
        splitAmount: Decimal
      controller owner
      do
        let restAmount = amount - splitAmount
        splitCid <- create this with amount = splitAmount
        restCid <- create this with amount = restAmount
        return (splitCid, restCid)
-- END_IOU_TEMPLATE_SPLIT

      -- Merge two IOUs by aggregating their amounts.
-- BEGIN_IOU_TEMPLATE_MERGE
    choice Iou_Merge : IouCid
      with
        otherCid: IouCid
      controller owner
      do
        otherIou <- fetch otherCid
        -- Check the two IOU's are compatible
        assert (
          currency == otherIou.currency &&
          owner == otherIou.owner &&
          issuer == otherIou.issuer
          )
        -- Retire the old Iou
        archive otherCid
        -- Return the merged Iou
        create this with amount = amount + otherIou.amount
-- END_IOU_TEMPLATE_MERGE

-- BEGIN_IOU_TEMPLATE_TRANSFER
    choice Iou_Transfer : ContractId IouTransfer
      with
        newOwner : Party
      controller owner
      do create IouTransfer with iou = this; newOwner
-- END_IOU_TEMPLATE_TRANSFER

-- BEGIN_IOU_TEMPLATE_OBSERVER_CHOICES
    choice Iou_AddObserver : IouCid
      with
        newObserver : Party
      controller owner
      do create this with observers = newObserver :: observers

    choice Iou_RemoveObserver : IouCid
      with
        oldObserver : Party
      controller owner
      do create this with observers = filter (/= oldObserver) observers
-- END_IOU_TEMPLATE_OBSERVER_CHOICES

template IouTransfer
  with
    iou : Iou
    newOwner : Party
  where
    signatory iou.issuer, iou.owner
    observer newOwner

    choice IouTransfer_Cancel : IouCid
      controller iou.owner
      do create iou

    choice IouTransfer_Reject : IouCid
      controller newOwner
      do create iou

    choice IouTransfer_Accept : IouCid
      controller newOwner
      do
        create iou with
          owner = newOwner
          observers = []
