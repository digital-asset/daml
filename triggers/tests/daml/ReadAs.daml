-- Copyright (c) 2022 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.
-- SPDX-License-Identifier: Apache-2.0


module ReadAs where

import DA.Action
import Daml.Trigger

-- There are 3 things we need to test:
--
-- 1. The initial ACS query sets the right readAs claims.
-- 2. We submit commands with the right readAs claims.
-- 3. We subscribe to transactions for the readAs parties.

test : Trigger Int
test = Trigger
  { initialize = do
      public <- getReadAs >>= \case
        [public] -> pure public
        readAs -> error $ "Expected exactly one readAs party but got " <> show readAs
      visible <- query @VisibleToPublic
      case visible of
        [(_, visible)] -> unless (visible == VisibleToPublic public) $
          error ("Expected " <> show (VisibleToPublic public) <> " but got " <> show visible)
        _ -> error $ "Expected exactly one contract but got " <> show visible
      pure 1
  , updateState = \_ -> pure ()
  , rule = \p -> do
      visible <- query @VisibleToPublic
      case visible of
        [(cid, _)] -> do
          -- initial state, submit a command that relies on readAs=public
          emitCommands [exerciseCmd cid (UnsafeArchive p)] [toAnyContractId cid]
          modify (+1)
        [] ->
          -- we submitted a command and we observed the transaction.
          modify (+1)
        _ -> pure ()
  , registeredTemplates = AllInDar
  , heartbeat = None
  }

template VisibleToPublic
  with
    public : Party
  where
    signatory public

    choice UnsafeArchive : ()
      with
        p : Party
      controller p
      do pure ()
