-- Copyright (c) 2022 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.
-- SPDX-License-Identifier: Apache-2.0


module Time where

import DA.Foldable (forA_)
import DA.Functor (void)

import Daml.Trigger.LowLevel

test : Trigger (Bool, [Time])
test = Trigger
  { initialState = \party _readAs _ -> do
      submitCommands [createCmd (T party)]
      pure (False, [])
  , update = \msgs -> forA_ msgs $ \case 
    MTransaction (Transaction _ _ events) -> do
      (done, ts) <- get
      case (done, events) of
        (False, [CreatedEvent (fromCreated @T -> Some (_, _, t))]) -> void $ submitCommands [createCmd t]
        _ -> pure ()
      time <- getTime
      put (True, time :: ts)
    _ -> pure ()
  , registeredTemplates = AllInDar
  , heartbeat = None
  }

template T
  with
    p : Party
  where
    signatory p
