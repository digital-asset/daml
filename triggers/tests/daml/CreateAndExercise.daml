-- Copyright (c) 2020 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.
-- SPDX-License-Identifier: Apache-2.0
-- Apache-2.0

module CreateAndExercise where

import Daml.Trigger

createAndExerciseTrigger : Trigger ()
createAndExerciseTrigger = Trigger
  { initialize = pure ()
  , updateState = \_ -> pure ()
  , rule = createAndExerciseRule
  , registeredTemplates = AllInDar
  , heartbeat = None
  }

-- Create a T template and immediately call choice C on it to create a
-- U.
createAndExerciseRule : Party -> TriggerA () ()
createAndExerciseRule party = query @T >>= \case
  [] -> dedupCreateAndExercise (T { p = party }) (C {})
  otherwise -> pure ()

template T
  with
    p : Party
  where
    signatory p

    nonconsuming choice C : ContractId U
      controller p
      do create (U { p })

template U
  with
    p : Party
  where
    signatory p
