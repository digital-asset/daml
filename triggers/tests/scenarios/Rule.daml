-- Copyright (c) 2020 The DAML Authors. All rights reserved.
-- SPDX-License-Identifier: Apache-2.0

daml 1.2
module Rule where

import DA.Action
import DA.Assert
import qualified DA.Next.Map as Map
import Daml.Trigger

template T
  with
    party : Party
    count : Int
  where
    signatory party

trigger : Trigger Int
trigger = Trigger with
  initialize = const 0
  updateState = \acs _msg count -> length (getContracts @T acs)
  rule = \party _acs _time _commandsInFlight count -> do
    when (count == 1) do
      dedupCreate T with party, count
      dedupCreate T with party, count = succ count
  registeredTemplates = RegisteredTemplates [registeredTemplate @T]
  heartbeat = None

test = scenario do
  alice <- getParty "Alice"
  tId <- submit alice do create T with party = alice, count = 1
  let activeContracts = toACS tId
      commandsInFlight = Map.empty
  commands <- testRule trigger alice activeContracts commandsInFlight 1
  assertCreateCmd (unpackCommands commands) $ \T { party, count } -> do
    assertEq party alice
    assertEq count 1
  pure ()
