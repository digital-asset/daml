# Copyright (c) 2020 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.
# SPDX-License-Identifier: Apache-2.0

load(
    "//bazel_tools:scala.bzl",
    "da_scala_binary",
    "da_scala_library",
    "da_scala_test",
)
load("@build_environment//:configuration.bzl", "sdk_version")

da_scala_library(
    name = "trigger-service-lib",
    srcs = glob(["src/main/scala/**/*.scala"]),
    visibility = ["//visibility:public"],
    runtime_deps = [
        "@maven//:ch_qos_logback_logback_classic",
        "@maven//:ch_qos_logback_logback_core",
        "@maven//:com_typesafe_akka_akka_slf4j_2_12",
    ],
    deps = [
        "//daml-lf/archive:daml_lf_archive_reader",
        "//daml-lf/archive:daml_lf_dev_archive_java_proto",
        "//daml-lf/data",
        "//daml-lf/engine",
        "//daml-lf/interpreter",
        "//daml-lf/language",
        "//language-support/scala/bindings",
        "//ledger-api/rs-grpc-akka",
        "//ledger-api/rs-grpc-bridge",
        "//ledger/ledger-api-client",
        "//ledger/ledger-api-common",
        "//triggers/runner:trigger-runner-lib",
        "@maven//:com_github_scopt_scopt_2_12",
        "@maven//:com_typesafe_akka_akka_actor_2_12",
        "@maven//:com_typesafe_akka_akka_actor_typed_2_12",
        "@maven//:com_typesafe_akka_akka_http_2_12",
        "@maven//:com_typesafe_akka_akka_http_core_2_12",
        "@maven//:com_typesafe_akka_akka_http_spray_json_2_12",
        "@maven//:com_typesafe_akka_akka_stream_2_12",
        "@maven//:com_typesafe_scala_logging_scala_logging_2_12",
        "@maven//:io_spray_spray_json_2_12",
        "@maven//:org_scalaz_scalaz_core_2_12",
        "@maven//:org_slf4j_slf4j_api",
    ],
)

da_scala_binary(
    name = "trigger-service",
    main_class = "com.daml.lf.engine.trigger.ServiceMain",
    visibility = ["//visibility:public"],
    deps = [
        ":trigger-service-lib",
    ],
)

da_scala_test(
    name = "tests",
    srcs = glob(["src/test/scala/**/*.scala"]),
    data = [":test-model.dar"],
    resources = glob(["src/test/resources/**/*"]),
    deps = [
        ":trigger-service-lib",
        "//bazel_tools/runfiles:scala_runfiles",
        "//daml-lf/archive:daml_lf_archive_reader",
        "//daml-lf/archive:daml_lf_dev_archive_java_proto",
        "//daml-lf/data",
        "//daml-lf/language",
        "//language-support/scala/bindings-akka",
        "//ledger-api/rs-grpc-bridge",
        "//ledger/ledger-api-auth",
        "//ledger/ledger-api-common",
        "//ledger/participant-state",
        "//ledger/sandbox",
        "//libs-scala/ports",
        "@maven//:ch_qos_logback_logback_classic",
        "@maven//:com_typesafe_akka_akka_actor_typed_2_12",
        "@maven//:com_typesafe_akka_akka_http_core_2_12",
        "@maven//:io_spray_spray_json_2_12",
        "@maven//:org_scalatest_scalatest_2_12",
        "@maven//:org_scalaz_scalaz_core_2_12",
    ],
)

genrule(
    name = "test-model",
    srcs =
        glob(["test-model/*.daml"]) + [
            "//triggers/daml:daml-trigger.dar",
        ],
    outs = ["test-model.dar"],
    cmd = """
      set -eou pipefail
      TMP_DIR=$$(mktemp -d)
      mkdir -p $$TMP_DIR/daml
      cp -L $(location :test-model/TestTrigger.daml) $$TMP_DIR/daml
      cp -L $(location //triggers/daml:daml-trigger.dar) $$TMP_DIR/
      cat << EOF > $$TMP_DIR/daml.yaml
sdk-version: {sdk}
name: test-model
source: daml
version: 0.0.1
dependencies:
  - daml-stdlib
  - daml-prim
  - daml-trigger.dar
EOF
      $(location //compiler/damlc) build --project-root=$$TMP_DIR -o $$PWD/$(location test-model.dar)
      rm -rf $$TMP_DIR
    """.format(sdk = sdk_version),
    tools = ["//compiler/damlc"],
    visibility = ["//visibility:public"],
)
