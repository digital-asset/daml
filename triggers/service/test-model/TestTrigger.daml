-- Copyright (c) 2020 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.
-- SPDX-License-Identifier: Apache-2.0


module TestTrigger where

import DA.Action
import DA.Foldable
import Daml.Trigger

template A
  with
    p : Party
    v : Int
  where
    signatory p

template B
  with
    p : Party
    v : Int
  where
    signatory p

trigger : Trigger ()
trigger = Trigger with
  initialize = pure ()
  updateState = \_ -> pure ()
  rule = triggerRule
  registeredTemplates = AllInDar
  heartbeat = None

triggerRule : Party -> TriggerA () ()
triggerRule p = do
  as <- filter (\(_, a) -> a.p == p) <$> query @A
  bs <- map (\(_, B x y) -> (x,y)) . filter (\(_, b) -> b.p == p) <$> query @B
  forA_ as $ \(aCid, A x y) ->
    when ((x,y) `notElem`  bs) $
    void $ emitCommands [createCmd (B x y)] [toAnyContractId aCid]
  pure ()
