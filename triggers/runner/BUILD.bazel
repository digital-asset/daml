# Copyright (c) 2019 The DAML Authors. All rights reserved.
# SPDX-License-Identifier: Apache-2.0

load(
    "//bazel_tools:scala.bzl",
    "da_scala_binary",
    "da_scala_library",
)

da_scala_library(
    name = "trigger-runner-lib",
    srcs = glob(["src/main/scala/**/*.scala"]),
    resources = glob(["src/main/resources/**/*"]),
    visibility = ["//visibility:public"],
    deps = [
        ":trigger-package-id-lib",
        "//daml-lf/archive:daml_lf_archive_reader",
        "//daml-lf/archive:daml_lf_dev_archive_java_proto",
        "//daml-lf/data",
        "//daml-lf/engine",
        "//daml-lf/interpreter",
        "//daml-lf/language",
        "//daml-lf/transaction",
        "//language-support/scala/bindings",
        "//language-support/scala/bindings-akka",
        "//ledger-api/rs-grpc-bridge",
        "//ledger/ledger-api-common",
        "@maven//:com_github_scopt_scopt_2_12",
        "@maven//:com_typesafe_akka_akka_stream_2_12",
        "@maven//:org_scalaz_scalaz_core_2_12",
        "@maven//:org_typelevel_paiges_core_2_12",
    ],
)

da_scala_library(
    name = "trigger-package-id-lib",
    srcs = [":trigger-package-id"],
    deps = ["//daml-lf/data"],
)

# This genrule generates a Scala file containing the package id of the trigger library
# at build time. We use that to detect mismatches and warn the user about it.
genrule(
    name = "trigger-package-id",
    srcs = [
        "//triggers/daml:daml-trigger.dar",
        "//compiler/damlc",
    ],
    outs = ["com/digitalasset/daml/lf/engine/trigger/TriggerPackageIds.scala"],
    cmd = """
      PACKAGE_ID=$$($(location //compiler/damlc) inspect-dar $(location //triggers/daml:daml-trigger.dar) | awk '/daml-trigger-0.0.1 / {print $$2}')
      cat << EOF > $(location com/digitalasset/daml/lf/engine/trigger/TriggerPackageIds.scala)
package com.digitalasset.daml.lf.engine

import com.digitalasset.daml.lf.data.Ref.PackageId

package object trigger {
  val EXPECTED_TRIGGER_PACKAGE_ID = PackageId.assertFromString($$PACKAGE_ID)
}
EOF
    """,
)

da_scala_binary(
    name = "trigger-runner",
    main_class = "com.digitalasset.daml.lf.engine.trigger.RunnerMain",
    tags = ["maven_coordinates=com.digitalasset.daml.lf.engine.trigger:runner:__VERSION__"],
    visibility = ["//visibility:public"],
    deps = [":trigger-runner-lib"],
)
