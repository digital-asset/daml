# Copyright (c) 2019 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.
# SPDX-License-Identifier: Apache-2.0

load(
    "//bazel_tools:scala.bzl",
    "lf_scalacopts",
    "da_scala_binary",
    "da_scala_library",
    "da_scala_test",
)

da_scala_library(
    name = "engine",
    srcs = glob(["src/main/**/*.scala"]),
    visibility = ["//visibility:public"],
    deps = [
        "//3rdparty/jvm/com/google/protobuf:protobuf_java",
        "//3rdparty/jvm/org/scalaz:scalaz_core",
        "//3rdparty/jvm/org/typelevel:paiges_core",
        "//daml-lf/archive:daml_lf_archive_scala",
        "//daml-lf/archive:daml_lf_java_proto",
        "//daml-lf/data",
        "//daml-lf/interpreter",
        "//daml-lf/lfpackage",
        "//daml-lf/transaction",
    ],
    scalacopts = lf_scalacopts,
)

# TODO(JM): It would make sense to break up the tests
# into individual targets (so that individual tests can
# be cached!). There's the "da_scala_test_suite"
# macro that will do that for you, but one should separate
# the utilities from the tests.
da_scala_test(
    name = "tests",
    timeout = "moderate",
    srcs = glob(["src/test/**/*.scala"]),
    resources = [
        "//daml-foundations/daml-ghc/package-database/deprecated:daml-prim-1.1.dalf",
        "//daml-lf/tests:BasicTests.dalf",
        "//daml-lf/tests:LargeTransaction.dalf",
        "//daml-lf/tests:Optional.dalf",
    ],
    deps = [
        ":engine",
        "//3rdparty/jvm/com/storm_enroute:scalameter_core",
        "//3rdparty/jvm/org/scalacheck",
        "//3rdparty/jvm/org/scalatest",
        "//3rdparty/jvm/org/scalaz:scalaz_core",
        "//daml-lf/archive:daml_lf_archive_scala",
        "//daml-lf/archive:daml_lf_java_proto",
        "//daml-lf/data",
        "//daml-lf/interpreter",
        "//daml-lf/lfpackage",
        "//daml-lf/scenario-interpreter",
        "//daml-lf/transaction",
    ],
    scalacopts = lf_scalacopts,
)

