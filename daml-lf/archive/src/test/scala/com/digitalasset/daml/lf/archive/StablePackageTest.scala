// Copyright (c) 2022 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.
// SPDX-License-Identifier: Apache-2.0

package com.daml.lf
package archive

import java.io.File
import com.daml.bazeltools.BazelRunfiles
import com.daml.lf.language.StablePackage
import org.scalatest._
import org.scalatest.matchers.should.Matchers
import org.scalatest.wordspec.AnyWordSpec

class StablePackageTest
    extends AnyWordSpec
    with Matchers
    with Inside
    with BazelRunfiles
    with Inspectors
    with TryValues {

  private def resource(path: String): File = {
    val f = new File(path).getAbsoluteFile
    require(f.exists, s"File does not exist: $f")
    f
  }

  "DA.StablePackages" should {

    lazy val darFile = resource(rlocation("daml-lf/archive/DarReaderTest.dar"))
    lazy val libPkgs = {
      val dar = UniversalArchiveDecoder.assertReadFile(darFile)
      dar.all.view.filter { case (pkgId, _) => pkgId != dar.main._1 }.toMap
    }

    //  Fix as new packages are added to the std lib
    //  As of SDK 2.5, this should be 25: 23 stable packages + `daml-prim` + `daml-stdlib`
    assert(libPkgs.size == StablePackage.values.size + 2)

    "contains all the stable package generated by the compiler" in {
      val pkgIdsInDar = libPkgs.keySet
      StablePackage.values.foreach(pkg => pkgIdsInDar should contain(pkg.packageId))
    }

    "lists the stable package with the proper version" in {
      StablePackage.values.foreach(pkg =>
        pkg.languageVersion shouldBe libPkgs(pkg.packageId).languageVersion
      )
    }

  }

}
