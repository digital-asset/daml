-- Copyright (c) 2023 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.
-- SPDX-License-Identifier: Apache-2.0

module Examples where

identity x = x

absdiff : Int -> Int -> Int
absdiff x y =
  if x > y then x - y else y - x

manhattan (a,b) (c,d) =
  absdiff a c + absdiff b d

thrice : (a -> a) -> a -> a
thrice func arg =
  func (func (func arg))

useThrice : Int -> Int
useThrice a =
  let decrease = \x -> x - a in
  thrice decrease 100

factorial : Int -> Int
factorial n =
  if n <= 1 then 1 else n * factorial (n-1)

factorialAcc : Int -> Int -> Int
factorialAcc n acc =
  if n <= 1 then acc else factorialAcc (n-1) (n*acc)

fib : Int -> Int
fib n = if n < 2 then n else fib (n-1) + fib (n-2)

myMap : (a -> b) -> [a] -> [b]
myMap f [] = []
myMap f (x::xs) = f x :: myMap f xs

pythag : Int -> [(Int,Int,Int)]
pythag n =
  [ (x,y,z)
  | x <- [1..n]
  , y <- [x..n]
  , z <- [y..n]
  , x*x + y*y == z*z && x<=y && y<=z
  ]
