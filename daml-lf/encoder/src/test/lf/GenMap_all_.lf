// Copyright (c) 2024 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.
// SPDX-License-Identifier: Apache-2.0

module GenMapMod {

  record @serializable Box = {
    x: GenMap (RecordMod:Pair Int64 (Numeric 10)) (VariantMod:Either Int64 (Numeric 10)),
    party: Party
  } ;

  template (this : Box) =  {
    precondition True;
    signatories (PartyMod:one (GenMapMod:Box {party} this));
    observers (Nil @Party);
  };

  val insert :
    (RecordMod:Pair Int64 (Numeric 10)) ->
       (VariantMod:Either Int64 (Numeric 10)) ->
       GenMap (RecordMod:Pair Int64 (Numeric 10)) (VariantMod:Either Int64 (Numeric 10)) ->
       GenMap (RecordMod:Pair Int64 (Numeric 10)) (VariantMod:Either Int64 (Numeric 10))
    = GENMAP_INSERT @(RecordMod:Pair Int64 (Numeric 10)) @(VariantMod:Either Int64 (Numeric 10));

  val map0: GenMap (RecordMod:Pair Int64 (Numeric 10)) (VariantMod:Either Int64 (Numeric 10)) =
    GENMAP_EMPTY @(RecordMod:Pair Int64 (Numeric 10)) @(VariantMod:Either Int64 (Numeric 10));

  val map1: GenMap (RecordMod:Pair Int64 (Numeric 10)) (VariantMod:Either Int64 (Numeric 10)) =
    GenMapMod:insert RecordMod:pair1 VariantMod:either1 GenMapMod:map0 ;

  val map2: GenMap (RecordMod:Pair Int64 (Numeric 10)) (VariantMod:Either Int64 (Numeric 10)) =
    GenMapMod:insert RecordMod:pair2 VariantMod:either2 GenMapMod:map1 ;

  val map3: GenMap (RecordMod:Pair Int64 (Numeric 10)) (VariantMod:Either Int64 (Numeric 10)) =
    GenMapMod:insert RecordMod:pair3 VariantMod:either3 GenMapMod:map2 ;

  val equal: forall (x:*). x -> x -> Bool = EQUAL;

}
