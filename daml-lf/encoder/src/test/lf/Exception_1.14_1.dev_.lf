// Copyright (c) 2021 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.
// SPDX-License-Identifier: Apache-2.0

module ExceptionMod {

  record @serializable Exception = { message: Text } ;
  exception Exception = {
    message \(e: ExceptionMod:Exception) ->
      ExceptionMod:Exception {message} e
  };

  val anException: ExceptionMod:Exception =
    ExceptionMod:Exception {message = "oops"};

  val throwAndCatch : Update Int64 =
    try @Int64 (upure @Int64 (throw @Int64 @ExceptionMod:Exception ExceptionMod:anException))
    catch e -> Some @(Update Int64) (upure @Int64 77);

  val anAnyException: AnyException =
    to_any_exception @ExceptionMod:Exception ExceptionMod:anException;

  val anUnwrappedAnyException: Option ExceptionMod:Exception =
    from_any_exception @ExceptionMod:Exception ExceptionMod:anAnyException;

  val aMessage: Text = ANY_EXCEPTION_MESSAGE ExceptionMod:anAnyException;

}
