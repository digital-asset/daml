// Copyright (c) 2019 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.
// SPDX-License-Identifier: Apache-2.0

module Enum {

  enum @serializable Color = Red | Green | Blue;

  record @serializable Box = { x: Enum:Color, party: Party } ;

  template (this : Box) =  {
    precondition True,
    signatories (Party:one (Enum:Box {party} this)),
    observers (Nil @Party),
    agreement "Agreement",
    choices {
    }
  };


  val createColoredContract: Scenario (ContractId Enum:Box)  =
     let
       redContractCreation: Update (ContractId Enum:Box) =
         create @Enum:Box (Enum:Box { x = Enum:Color:Red, party = 'party' })
     in
       commit @(ContractId Enum:Box) 'party' redContractCreation;

  enum Nothing = ;

  variant @serializable OptionalColor = NoColor: Unit | SomeColor: Enum:Color;

  variant @serializable ColoredTree = Leaf: Unit | Node : Enum:ColoredTree.Node;

  record @serializable ColoredTree.Node = {
    color: Enum:Color,
    left: Enum:ColoredTree,
    right: Enum:ColoredTree
  };

}