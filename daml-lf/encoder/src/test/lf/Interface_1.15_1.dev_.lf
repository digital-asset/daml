// Copyright (c) 2022 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.
// SPDX-License-Identifier: Apache-2.0

module InterfaceMod0 {
  record @serializable Parcel = { party: Party };

  template (this: Parcel) = {
    precondition True;
    signatories Cons @Party [InterfaceMod0:Parcel {party} this] (Nil @Party);
    observers Cons @Party [InterfaceMod0:Parcel {party} this] (Nil @Party);
    agreement "";
  };
}

module InterfaceMod {

  interface (this: Root) = {
    viewtype RecordMod:MyUnit;
    coimplements InterfaceMod0:Parcel {
      view = RecordMod:MyUnit {};
    };
  };

  interface (this: Boxy) = {
    viewtype RecordMod:MyUnit;
    method getParty: Party;
    choice @nonConsuming ReturnInt (self) (i: Int64): Int64
      , controllers Cons @Party [call_method @InterfaceMod:Boxy getParty this] (Nil @Party)
      , observers Nil @Party
      to upure @Int64 i;
    coimplements InterfaceMod0:Parcel {
      view = RecordMod:MyUnit {};
      method getParty = InterfaceMod0:Parcel {party} this;
    };
  };

  record @serializable Box = { party: Party, name: Text };

  template (this: Box) = {
    precondition True;
    signatories Cons @Party [InterfaceMod:Box {party} this] (Nil @Party);
    observers Cons @Party [InterfaceMod:Box {party} this] (Nil @Party);
    agreement "Lorem ipsum, dolor sit amet";

    implements InterfaceMod:Root {
      view = RecordMod:MyUnit {};
    };
    implements InterfaceMod:Boxy {
      view = RecordMod:MyUnit {};
      method getParty = InterfaceMod:Box {party} this;
    };
  };

  val boxToBoxy: InterfaceMod:Box -> InterfaceMod:Boxy =
    \(box: InterfaceMod:Box) ->
      to_interface @InterfaceMod:Boxy @InterfaceMod:Box box;

  val boxyToBox: InterfaceMod:Boxy -> Option InterfaceMod:Box =
    \(boxy: InterfaceMod:Boxy) ->
      from_interface @InterfaceMod:Boxy @InterfaceMod:Box boxy;

  val boxySignatory: InterfaceMod:Boxy -> List Party =
    \(boxy: InterfaceMod:Boxy) ->
      signatory_interface @InterfaceMod:Boxy boxy;

  val boxyObserver: InterfaceMod:Boxy -> List Party =
    \(boxy: InterfaceMod:Boxy) ->
      observer_interface @InterfaceMod:Boxy boxy;

  val exercise: ContractId InterfaceMod:Boxy -> Update Int64 =
      \(cid: ContractId InterfaceMod:Boxy) ->
          exercise_interface @InterfaceMod:Boxy ReturnInt cid 0;

}
