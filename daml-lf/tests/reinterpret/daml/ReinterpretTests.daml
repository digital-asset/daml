-- Copyright (c) 2022 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.
-- SPDX-License-Identifier: Apache-2.0

module ReinterpretTests where

import DA.Exception (throw)

import DA.List.BuiltinOrder(dedup)

import AtVersion13 (Contract13(..))
import AtVersion14 (Contract14(..))

exception MyError
  where
    message "MyError"

template MySimple
  with p: Party
  where
    agreement show p
    signatory p

    choice MyHello : Text
      controller p
      do pure "hello"

    choice MyThrow : Text
      controller p
      do throw MyError

    choice ProvokeBadOrd : Text
      controller p
      do let x = Thing (\x -> x+1)
         let zs = dedup [x,x]
         pure "wont reach here"

    choice Contract14ThenThrow : Text
      controller p
      do x <- create (Contract14 with p) -- will be rolled back
         throw MyError
         pure "wont reach here"

    choice Contract13ThenThrow : Text
      controller p
      do x <- create (Contract13 with p) -- will *not* be rolled back; version check will prevent it
         throw MyError
         pure "wont reach here"

data Thing = Thing (Int -> Int)
instance Eq Thing where
  (==) = error "foobar"
instance Ord Thing where
  compare = error "foobar"
