-- Copyright (c) 2020 The DAML Authors. All rights reserved.
-- SPDX-License-Identifier: Apache-2.0
daml 1.2
module Main where

import DA.TextMap
import Lib.Mod

import T

template AllTypes with
    unit: ()
    bool: Bool
    int: Int
    text: Text
    date: Date
    time: Time
    party: Party
    contractId: ContractId Person
    optional: Optional Int
    optional2: Optional Int
    optionalOptionalInt: Optional (Optional Int)
    optionalOptionalInt2: Optional (Optional Int)
    optionalOptionalInt3: Optional (Optional Int)
    list: [Bool]
    textMap: TextMap Int
    monoRecord: Person
    polyRecord: Pair Int Text
    imported: Imported
    archiveX: Archive
    either: Either Int Text
    tuple: (Int, Text)
    enum: Color
    enumList: [Color]
    variant: Expr Int
    optionalVariant: Expr Int
    sumProd : Quux
    optionalSumProd : Optional Quux
    parametericSumProd : Expr2 Int
    optionalOptionalParametericSumProd : Optional (Optional (Expr2 Int))
    n0 : Numeric 0
    n5 : Numeric 5
    n10 : Decimal
  where
    signatory party

template Person with
    name: Text
    party: Party
    age: Int
    friends: [Party]
  where
    signatory party
    observer friends

    key (party, age): (Party, Int)
    maintainer key._1

    choice Birthday: ContractId Person
      controller party
      do
        create this with age = age+1

    nonconsuming choice Rename: ContractId Person with
        newName: Text
      controller party
      do
        archive self
        create this with name = newName

data Pair a b = Pair {
  one: a;
  two: b
} deriving (Eq, Show)

data Bar a = Bar {
  u: a
}
data Foo a b = Foo {
  x: Bar a;
  y: Foo b a;
  z: b
}

data Expr a =
    Lit a
  | Var Text
  | Add (Expr a, Expr a)
  deriving (Show, Eq)

data Expr2 a =
    Lit2 a
  | Var2 Text
  | Add2 {lhs : Expr2 a, rhs: Expr2 a}
  deriving (Show, Eq)

data Color = Red | Blue | Yellow deriving (Eq, Show)

data Quux =
    Corge { x: Int, y: Text }
  | Grault { z: Bool }
  deriving (Show, Eq)

-- This template is interesting in that the 'T' it mentions is
-- external to this module and only mentioned as a choice return
-- type. Thus, for the resulting Main.ts to compile, we are testing
-- that we have correctly generated import directives for this case.
template U with
    party: Party
  where
    signatory party
    controller party can
      C: ContractId T with
        do
          create T with party
