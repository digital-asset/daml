# Copyright (c) 2022 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.
# SPDX-License-Identifier: Apache-2.0

load(
    "//bazel_tools:scala.bzl",
    "da_scala_library",
    "da_scala_test",
    "kind_projector_plugin",
)
load(
    "//rules_daml:daml.bzl",
    "daml_compile",
)
load("//language-support/scala/codegen:codegen.bzl", "dar_to_scala")
load(
    "//daml-lf/language:daml-lf.bzl",
    "lf_version_configuration",
)

daml_compile(
    name = "MyMain",
    srcs = ["src/main/daml/MyMain.daml"],
    target = lf_version_configuration.get("latest"),
)

daml_compile(
    name = "MySecondMain",
    srcs = ["src/main/daml/MySecondMain.daml"],
    target = lf_version_configuration.get("latest"),
)

dar_to_scala(
    name = "MyMain-codegen",
    srcs = [
        ":MyMain.dar",
        ":MySecondMain.dar",
        "//daml-lf/encoder:testing-dar-latest",
    ],
    package_prefix = "com.daml.sample",
    srcjar_out = "MyMain.srcjar",
)

da_scala_library(
    name = "daml-lf-codegen-sample-app",
    srcs = [":MyMain.srcjar"] + glob(["src/main/**/*.scala"]),
    plugins = [
        kind_projector_plugin,
    ],
    scala_deps = [
        "@maven//:org_scalaz_scalaz_core",
    ],
    scalacopts = [
        "-Wconf:cat=unused-imports&site=com\\.daml\\.sample\\..*:s",
        "-Wconf:msg=parameter value ev.. in method ContractIdNT (Value)|(LfEncodable) is never used:s",
    ],
    visibility = [
        "//visibility:public",
    ],
    exports = [],
    runtime_deps = [
        "@maven//:ch_qos_logback_logback_classic",
    ],
    deps = [
        "//language-support/scala/bindings",
        "//language-support/scala/bindings-akka",
    ],
)

# Sources that do not define test-cases but utilities
# that are used by one or more test-cases.
#
# Consider moving these files into a separate sub-directory
# to enable source globbing for them.
testing_utils = [
    "src/test/scala/com/digitalasset/codegen/util/TestUtil.scala",
]

da_scala_library(
    name = "daml-lf-codegen-sample-app-testing",
    srcs = testing_utils,
    resources = glob(["src/test/resources/**/*"]),
    scala_deps = [
        "@maven//:org_scalaz_scalaz_core",
    ],
    deps = [
        "//bazel_tools/runfiles:scala_runfiles",
    ],
)

da_scala_test(
    name = "tests",
    size = "small",
    srcs = glob(
        [
            "src/test/**/*.scala",
        ],
        exclude = testing_utils + [
            "src/test/scala/com/digitalasset/codegen/ScalaCodeGenIT.scala",
        ],
    ),
    scala_deps = [
        "@maven//:org_scalacheck_scalacheck",
        "@maven//:org_scalatestplus_scalacheck_1_15",
        "@maven//:org_scalaz_scalaz_core",
    ],
    deps = [
        ":daml-lf-codegen-sample-app",
        "//language-support/scala/bindings",
    ],
)

da_scala_test(
    name = "ScalaCodeGenIT",
    size = "large",
    timeout = "moderate",
    srcs = [
        "src/test/scala/com/digitalasset/codegen/ScalaCodeGenIT.scala",
    ],
    data = [
        "src/test/resources/logback-sandbox.xml",
        ":MyMain.dar",
        ":MySecondMain.dar",
        "//ledger/sandbox-classic:sandbox-classic-binary_deploy.jar",
    ],
    jvm_flags = [
        "-Dcom.daml.sandbox.jar=ledger/sandbox-classic/sandbox-classic-binary_deploy.jar",
    ],
    scala_deps = [
        "@maven//:org_scalacheck_scalacheck",
        "@maven//:org_scalaz_scalaz_core",
    ],
    deps = [
        ":daml-lf-codegen-sample-app",
        ":daml-lf-codegen-sample-app-testing",
        "//daml-lf/data",
        "//language-support/scala/bindings",
        "//language-support/scala/bindings-akka",
        "//language-support/scala/codegen-testing",
        "//ledger-api/rs-grpc-bridge",
        "//ledger-api/testing-utils",
        "//ledger/caching",
        "//ledger/ledger-api-auth",
        "//ledger/ledger-api-client",
        "//ledger/ledger-api-common",
        "//ledger/ledger-configuration",
        "//ledger/ledger-resources",
        "//ledger/metrics",
        "//ledger/participant-integration-api",
        "//ledger/sandbox-classic",
        "//ledger/sandbox-classic:sandbox-classic-scala-tests-lib",
        "//ledger/sandbox-common",
        "//ledger/sandbox-common:sandbox-common-scala-tests-lib",
        "//libs-scala/ports",
        "//libs-scala/resources",
    ],
)
