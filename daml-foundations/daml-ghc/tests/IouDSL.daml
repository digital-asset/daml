-- Copyright (c) 2019 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.
-- SPDX-License-Identifier: Apache-2.0

-- An IOU to be proposed using the generic proposal workflow.
-- @SINCE-LF 1.5
daml 1.2
module IouDSL where

import Prelude hiding (Template (..), Choice (..), create, fetch, exercise)
import GenericTemplates
import ProposalDSL


data Iou = Iou with
    issuer : Party
    owner : Party
    amount : Decimal
  deriving (Eq, Show)

instance IouInstance => Template Iou where
  signatory = signatoryIou
  observer = observerIou
  ensure = ensureIou
  agreement = agreementIou
  create = createIou
  fetch = fetchIou

data Burn = Burn{}
  deriving (Eq, Show)

instance IouInstance => Choice Iou Burn () where
  exercise = exerciseIouBurn

class IouInstance where
  signatoryIou : Iou -> [Party]
  signatoryIou this@Iou{..} = [issuer, owner]
  observerIou : Iou -> [Party]
  observerIou this@Iou{..} = []
  ensureIou : Iou -> Bool
  ensureIou this@Iou{..} = amount > 0.0
  agreementIou : Iou -> Text
  agreementIou this@Iou{..} =
      show issuer <> " owns " <> show owner <> " CHF " <> show amount
  createIou : Iou -> Update (ContractId Iou)
  createIou = error "code will be injected by the compiler"
  fetchIou : ContractId Iou -> Update Iou
  fetchIou = error "code will be injected by the compiler"
  controllerIouBurn : Iou -> Burn -> [Party]
  controllerIouBurn this@Iou{..} arg@Burn = [owner]
  actionIouBurn : ContractId Iou -> Iou -> Burn -> Update ()
  actionIouBurn self this@Iou{..} arg@Burn = do
    pure ()
  exerciseIouBurn : ContractId Iou -> Burn -> Update ()
  exerciseIouBurn = error "code will be injected by the compiler"

instance IouInstance where


-- The instantiation of the generic proposal workflow for `Iou`.
newtype ProposalIou = MkProposalIou with unProposalIou : Proposal Iou

instance ProposalInstance Iou where


-- A scenario.
test = scenario do
  alice <- getParty "alice"
  bank <- getParty "bank"
  let iou = Iou with issuer = bank; owner = alice; amount = 10.0
  propId <- submit bank do
    create Proposal with asset = iou; receivers = [alice]
  iouId <- submit alice do
    exercise propId Accept
  iou' <- submit alice do
    fetch iouId
  assert $ iou' == iou
  submit alice do
    exercise iouId Burn
