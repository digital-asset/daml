-- Check that the compiler bits of contract keys work.
-- @IGNORE-LF 1.0
-- @IGNORE-LF 1.1
-- @IGNORE-LF 1.2
daml 1.2
module ContractKeys where

template AccountInvitation with
    account : Account
  where
    signatory account.bank

    controller account.accountHolder can
      Accept : ContractId Account
        do create account

template Account with
    bank : Party
    accountHolder : Party
    accountNumber : (Text, Int)
  where
    signatory [bank, accountHolder]

instance TemplateKey Account (Party, Text, Int) where
    key this@Account{..} = (bank, accountNumber._1, this.accountNumber._2)
    -- NOTE(MH): Thus duplication is intended to test both `this.bank` and `bank`.
    maintainer this@Account{..} = [this.bank, bank]

test = scenario do
    bank <- getParty "Bank"
    alice <- getParty "Alice"
    let account = Account with
            bank
            accountHolder = alice
            accountNumber = ("CH", 123)
    let accountKey = (bank, "CH", 123)
    invitationCid <- submit bank do
        create AccountInvitation with account
    accountCid <- submit alice do
        exercise invitationCid Accept

    accountCid' <- submit bank do
        lookupByKey accountKey
    assert $ accountCid' == Some accountCid

    (accountCid', account') <- submit bank do
        fetchByKey accountKey
    assert $ accountCid' == accountCid
    assert $ account' == account
