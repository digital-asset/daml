-- Copyright (c) 2019 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.
-- SPDX-License-Identifier: Apache-2.0

-- Copied from https://github.com/ghc/ghc/blob/23f6f31dd66d7c370cb8beec3f1d96a0cb577393/libraries/ghc-prim/GHC/Tuple.hs
-- All DA specific modifications are marked with [DA]

{-# LANGUAGE NoNewColonConvention #-} -- [DA]
{-# LANGUAGE Trustworthy #-}
{-# LANGUAGE NoImplicitPrelude, DeriveGeneric #-}
{-# OPTIONS -Wno-unused-binds #-} -- the Tuple types are not exported
daml 1.2
-- | HIDE

--------------------------------------------------------------------------------
--
-- Module      :  GHC.Tuple
-- Copyright   :  (c) The University of Glasgow 2001
-- License     :  BSD-style (see the file libraries/ghc-prim/LICENSE)
--
-- Maintainer  :  libraries@haskell.org
-- Stability   :  experimental
-- Portability :  non-portable (GHC extensions)
--
-- The tuple data types
--
--------------------------------------------------------------------------------

module GHC.Tuple() where

import GHC.CString ()  -- Make sure we do it first, so that the
                       -- implicit Typeable stuff can see GHC.Types.TyCon
                       -- and unpackCString# etc

default () -- Double and Integer aren't available yet

-- | The unit datatype `()` has one non-undefined member, the nullary
-- constructor `()`.
data () = ()

-- The desugarer uses 1-tuples,
-- but "()" is already used up for 0-tuples
-- See Note [One-tuples] in TysWiredIn
data Unit a = Unit a

data (a,b) = (a,b)
data (a,b,c) = (a,b,c)
data (a,b,c,d) = (a,b,c,d)
data (a,b,c,d,e) = (a,b,c,d,e)
data (a,b,c,d,e,f) = (a,b,c,d,e,f)
data (a,b,c,d,e,f,g) = (a,b,c,d,e,f,g)
data (a,b,c,d,e,f,g,h) = (a,b,c,d,e,f,g,h)
data (a,b,c,d,e,f,g,h,i) = (a,b,c,d,e,f,g,h,i)
data (a,b,c,d,e,f,g,h,i,j) = (a,b,c,d,e,f,g,h,i,j)
data (a,b,c,d,e,f,g,h,i,j,k) = (a,b,c,d,e,f,g,h,i,j,k)
data (a,b,c,d,e,f,g,h,i,j,k,l) = (a,b,c,d,e,f,g,h,i,j,k,l)
data (a,b,c,d,e,f,g,h,i,j,k,l,m) = (a,b,c,d,e,f,g,h,i,j,k,l,m)
data (a,b,c,d,e,f,g,h,i,j,k,l,m,n) = (a,b,c,d,e,f,g,h,i,j,k,l,m,n)
data (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o) = (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o)
data (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p) = (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p)
data (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q) = (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q)
data (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r) = (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r)
data (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s) = (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s)
data (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t) = (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t)


-- NOTE(MH): These types are not supposed to be by users. The converter to
-- DAML-LF rewrites the types above to them.
data Tuple2 a b =
    Tuple2{_1 :: a; _2 :: b}
data Tuple3 a b c =
    Tuple3{_1 :: a; _2 :: b; _3 :: c}
data Tuple4 a b c d =
    Tuple4{_1 :: a; _2 :: b; _3 :: c; _4 :: d}
data Tuple5 a b c d e =
    Tuple5{_1 :: a; _2 :: b; _3 :: c; _4 :: d, _5 :: e}
data Tuple6 a b c d e f =
    Tuple6{_1 :: a; _2 :: b; _3 :: c; _4 :: d; _5 :: e; _6 :: f}
data Tuple7 a b c d e f g =
    Tuple7{_1 :: a; _2 :: b; _3 :: c; _4 :: d; _5 :: e; _6 :: f; _7 :: g}
data Tuple8 a b c d e f g h =
    Tuple8{_1 :: a; _2 :: b; _3 :: c; _4 :: d; _5 :: e; _6 :: f; _7 :: g; _8 :: h}
data Tuple9 a b c d e f g h i =
    Tuple9{_1 :: a; _2 :: b; _3 :: c; _4 :: d; _5 :: e; _6 :: f; _7 :: g; _8 :: h; _9 :: i}
data Tuple10 a b c d e f g h i j =
    Tuple10{_1 :: a; _2 :: b; _3 :: c; _4 :: d; _5 :: e; _6 :: f; _7 :: g; _8 :: h; _9 :: i; _10 :: j}
data Tuple11 a b c d e f g h i j k =
    Tuple11{_1 :: a; _2 :: b; _3 :: c; _4 :: d; _5 :: e; _6 :: f; _7 :: g; _8 :: h; _9 :: i; _10 :: j; _11 :: k}
data Tuple12 a b c d e f g h i j k l =
    Tuple12{_1 :: a; _2 :: b; _3 :: c; _4 :: d; _5 :: e; _6 :: f; _7 :: g; _8 :: h; _9 :: i; _10 :: j; _11 :: k; _12 :: l}
data Tuple13 a b c d e f g h i j k l m =
    Tuple13{_1 :: a; _2 :: b; _3 :: c; _4 :: d; _5 :: e; _6 :: f; _7 :: g; _8 :: h; _9 :: i; _10 :: j; _11 :: k; _12 :: l; _13 :: m}
data Tuple14 a b c d e f g h i j k l m n =
    Tuple14{_1 :: a; _2 :: b; _3 :: c; _4 :: d; _5 :: e; _6 :: f; _7 :: g; _8 :: h; _9 :: i; _10 :: j; _11 :: k; _12 :: l; _13 :: m; _14 :: n}
data Tuple15 a b c d e f g h i j k l m n o =
    Tuple15{_1 :: a; _2 :: b; _3 :: c; _4 :: d; _5 :: e; _6 :: f; _7 :: g; _8 :: h; _9 :: i; _10 :: j; _11 :: k; _12 :: l; _13 :: m; _14 :: n; _15 :: o}
data Tuple16 a b c d e f g h i j k l m n o p =
    Tuple16{_1 :: a; _2 :: b; _3 :: c; _4 :: d; _5 :: e; _6 :: f; _7 :: g; _8 :: h; _9 :: i; _10 :: j; _11 :: k; _12 :: l; _13 :: m; _14 :: n; _15 :: o; _16 :: p}
data Tuple17 a b c d e f g h i j k l m n o p q =
    Tuple17{_1 :: a; _2 :: b; _3 :: c; _4 :: d; _5 :: e; _6 :: f; _7 :: g; _8 :: h; _9 :: i; _10 :: j; _11 :: k; _12 :: l; _13 :: m; _14 :: n; _15 :: o; _16 :: p; _17 :: q}
data Tuple18 a b c d e f g h i j k l m n o p q r =
    Tuple18{_1 :: a; _2 :: b; _3 :: c; _4 :: d; _5 :: e; _6 :: f; _7 :: g; _8 :: h; _9 :: i; _10 :: j; _11 :: k; _12 :: l; _13 :: m; _14 :: n; _15 :: o; _16 :: p; _17 :: q; _18 :: r}
data Tuple19 a b c d e f g h i j k l m n o p q r s =
    Tuple19{_1 :: a; _2 :: b; _3 :: c; _4 :: d; _5 :: e; _6 :: f; _7 :: g; _8 :: h; _9 :: i; _10 :: j; _11 :: k; _12 :: l; _13 :: m; _14 :: n; _15 :: o; _16 :: p; _17 :: q; _18 :: r; _19 :: s}
data Tuple20 a b c d e f g h i j k l m n o p q r s t =
    Tuple20{_1 :: a; _2 :: b; _3 :: c; _4 :: d; _5 :: e; _6 :: f; _7 :: g; _8 :: h; _9 :: i; _10 :: j; _11 :: k; _12 :: l; _13 :: m; _14 :: n; _15 :: o; _16 :: p; _17 :: q; _18 :: r; _19 :: s; _20 :: t}
