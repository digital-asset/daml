-- Copyright (c) 2019 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.
-- SPDX-License-Identifier: Apache-2.0

daml 1.2
module DA.Monoid where

-- | Boolean monoid under conjunction (&&)
newtype All = All { getAll : Bool } deriving (Eq, Ord, Show)

instance Semigroup All where
  All a1 <> All a2 = All $ a1 && a2

-- | Boolean Monoid under disjunction (||)
newtype Any = Any { getAny : Bool } deriving (Eq, Ord, Show)

instance Semigroup Any where
  Any a1 <> Any a2 = Any $ a1 || a2

-- | The monoid of endomorphisms under composition.
newtype Endo a = Endo { appEndo : a -> a }

instance Semigroup (Endo a) where
  Endo e1 <> Endo e2 = Endo $ e1 . e2

instance Monoid (Endo a) where
  mempty = Endo identity

-- | Boolean Monoid under conjunction (&&)
instance Monoid All where
  mempty = All True

-- | Boolean Monoid under disjunction (||)
instance Monoid Any where
  mempty = Any False
