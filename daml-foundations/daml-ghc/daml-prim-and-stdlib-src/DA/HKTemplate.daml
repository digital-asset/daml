-- Copyright (c) 2019 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.
-- SPDX-License-Identifier: Apache-2.0

daml 1.2
-- | HIDE Prototype of faking higher-kinded templates badly
module DA.HKTemplate where

import DA.Newtype

---------------------------------------------------------------------
-- LIBRARY STUFF

class HKTemplate hkc where
    hkEnsure : hkc -> Bool
    hkEnsure _ = True

    hkSignatory : hkc -> [Party]

    hkObserver : hkc -> [Party]
    hkObserver _ = []

    hkAgreement : hkc -> Text
    hkAgreement _ = ""

class (Newtype1 c hkc, Template c) => HKChoice c hkc e r | c e -> r where
  hkController : hkc -> e -> [Party]
  hkChoice : hkc -> ContractId c -> e -> Update r

lkEnsure : (Newtype1 c hkc, HKTemplate hkc) => c -> Bool
lkEnsure = hkEnsure . unpack1

lkSignatory : (Newtype1 c hkc, HKTemplate hkc) => c -> [Party]
lkSignatory = hkSignatory . unpack1

lkObserver : (Newtype1 c hkc, HKTemplate hkc) => c -> [Party]
lkObserver = hkObserver . unpack1

lkAgreement : (Newtype1 c hkc, HKTemplate hkc) => c -> Text
lkAgreement = hkAgreement . unpack1

lkController : forall e hke c hkc r . (Newtype1 e hke, HKChoice c hkc hke r) => c -> e -> [Party]
lkController a b = hkController (unpack1 a) (unpack1 b)

lkChoice : (Newtype1 e hke, HKChoice c hkc hke r) => c -> ContractId c -> e -> Update r
lkChoice a b c = hkChoice (unpack1 a) b (unpack1 c)

hkCreate : (Newtype1 c hkc, Template c) => hkc -> Update (ContractId c)
hkCreate = create . pack1

hkExercise : (Newtype1 c hkc, Newtype1 e hke, Choice c e r) => ContractId c -> hke -> Update r
hkExercise a b = exercise a (pack1 b)
