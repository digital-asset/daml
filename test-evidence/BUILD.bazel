# Copyright (c) 2022 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.
# SPDX-License-Identifier: Apache-2.0

load("//bazel_tools:scala.bzl", "da_scala_binary", "da_scala_library")

da_scala_library(
    name = "ledger-generator-lib",
    srcs = glob(["src/main/scala/**/*.scala"]),
    scala_deps = [
        "@maven//:org_scalactic_scalactic",
        "@maven//:org_scalatest_scalatest_core",
        "@maven//:org_typelevel_cats_core",
        "@maven//:org_typelevel_cats_kernel",
        "@maven//:com_github_pathikrit_better_files",
        "@maven//:com_chuusai_shapeless",
        "@maven//:io_circe_circe_core",
        "@maven//:io_circe_circe_generic",
    ],
    deps = [
        "//ledger/ledger-api-tests/infrastructure",
        "//ledger/ledger-api-tests/suites",
        "//libs-scala/test-evidence/generator",
        "//libs-scala/test-evidence/scalatest:test-evidence-scalatest",
        "//libs-scala/test-evidence/tag:test-evidence-tag",
        "@maven//:org_scalatest_scalatest_compatible",
    ],
)

da_scala_binary(
    name = "generator",
    main_class = "com.daml.test.evidence.generator.Main",
    runtime_deps = [
        "//ledger-service/jwt:tests-lib",
        "//ledger/sandbox-on-x:sandbox-on-x-it-tests-lib",
        "//triggers/service/auth:oauth2-middleware-tests-lib",
        "@maven//:ch_qos_logback_logback_classic",
    ],
    deps = [
        ":ledger-generator-lib",
        "//ledger/ledger-api-tests/infrastructure",
        "//ledger/ledger-api-tests/suites",
        "//libs-scala/test-evidence/generator",
        "//libs-scala/test-evidence/scalatest:test-evidence-scalatest",
        "//libs-scala/test-evidence/tag:test-evidence-tag",
    ],
)

genrule(
    name = "generate-security-test-evidence-files",
    srcs = [],
    outs = [
        "daml-security-test-evidence.csv",
        "daml-security-test-evidence.json",
    ],
    cmd = "$(location //test-evidence:generator) $(location daml-security-test-evidence.csv) $(location daml-security-test-evidence.json)",
    tools = ["//test-evidence:generator"],
    visibility = ["//visibility:public"],
)

genrule(
    name = "test-evidence-tarball",
    srcs = [
        ":generate-security-test-evidence-files",
    ],
    outs = ["daml-test-evidence.tar.gz"],
    cmd = """
        set -eou pipefail
        DIR=$$(mktemp -d)
        trap "rm -rf $$DIR" EXIT
        mkdir $$DIR/daml-test-evidence
        cp $(locations :generate-security-test-evidence-files) $$DIR/daml-test-evidence/
        MKTGZ=$$PWD/$(execpath //bazel_tools/sh:mktgz)
        OUT=$$PWD/$(location daml-test-evidence.tar.gz)
        cd $$DIR
        $$MKTGZ $$OUT daml-test-evidence
        """,
    tools = ["//bazel_tools/sh:mktgz"],
)
