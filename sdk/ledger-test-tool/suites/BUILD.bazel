# Copyright (c) 2024 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.
# SPDX-License-Identifier: Apache-2.0

load("//bazel_tools:scala.bzl", "da_scala_library", "da_scala_library_suite", "da_scala_test_suite")
load("//daml-lf/language:daml-lf.bzl", "LF_DEV_VERSIONS", "lf_version_configuration")
load(":deps.bzl", "deps")
load("@os_info//:os_info.bzl", "is_intel")

versions = {
    "1.8": {
        "srcs": glob([
            "src/main/scala/com/daml/ledger/api/testtool/suites/v1_8/**/*",
        ]),
        "entrypoints": [
            "src/main/scala/com/daml/ledger/api/testtool/suites/v1_8.scala",
        ],
    },
    "1.14": {
        "srcs": glob([
            "src/main/scala/com/daml/ledger/api/testtool/suites/v1_8/**/*",
            "src/main/scala/com/daml/ledger/api/testtool/suites/v1_14/**/*",
        ]),
        "entrypoints": [
            "src/main/scala/com/daml/ledger/api/testtool/suites/v1_8.scala",
            "src/main/scala/com/daml/ledger/api/testtool/suites/v1_14.scala",
        ],
    },
    "1.15": {
        "srcs": glob([
            "src/main/scala/com/daml/ledger/api/testtool/suites/v1_8/**/*",
            "src/main/scala/com/daml/ledger/api/testtool/suites/v1_14/**/*",
            "src/main/scala/com/daml/ledger/api/testtool/suites/v1_15/**/*",
        ]),
        "entrypoints": [
            "src/main/scala/com/daml/ledger/api/testtool/suites/v1_8.scala",
            "src/main/scala/com/daml/ledger/api/testtool/suites/v1_14.scala",
            "src/main/scala/com/daml/ledger/api/testtool/suites/v1_15.scala",
        ],
    },
    "1.17": {
        "srcs": glob([
            "src/main/scala/com/daml/ledger/api/testtool/suites/v1_8/**/*",
            "src/main/scala/com/daml/ledger/api/testtool/suites/v1_14/**/*",
            "src/main/scala/com/daml/ledger/api/testtool/suites/v1_15/**/*",
            "src/main/scala/com/daml/ledger/api/testtool/suites/v1_17/**/*",
        ]),
        "entrypoints": [
            "src/main/scala/com/daml/ledger/api/testtool/suites/v1_8.scala",
            "src/main/scala/com/daml/ledger/api/testtool/suites/v1_14.scala",
            "src/main/scala/com/daml/ledger/api/testtool/suites/v1_15.scala",
            "src/main/scala/com/daml/ledger/api/testtool/suites/v1_17.scala",
        ],
    },
    "1.dev": {
        "srcs": glob([
            "src/main/scala/com/daml/ledger/api/testtool/suites/v1_8/**/*",
            "src/main/scala/com/daml/ledger/api/testtool/suites/v1_14/**/*",
            "src/main/scala/com/daml/ledger/api/testtool/suites/v1_15/**/*",
            "src/main/scala/com/daml/ledger/api/testtool/suites/v1_17/**/*",
            "src/main/scala/com/daml/ledger/api/testtool/suites/v1_dev/**/*",
        ]),
        "entrypoints": [
            "src/main/scala/com/daml/ledger/api/testtool/suites/v1_8.scala",
            "src/main/scala/com/daml/ledger/api/testtool/suites/v1_14.scala",
            "src/main/scala/com/daml/ledger/api/testtool/suites/v1_15.scala",
            "src/main/scala/com/daml/ledger/api/testtool/suites/v1_17.scala",
            "src/main/scala/com/daml/ledger/api/testtool/suites/v1_dev.scala",
        ],
    },
}

[
    da_scala_library(
        name = "suites-%s" % lf_version,
        srcs = config["entrypoints"] + config["srcs"],
        scala_deps = [
            "@maven//:com_lihaoyi_sourcecode",
        ],
        tags = ["maven_coordinates=com.daml:ledger-api-tests-suites-%s:__VERSION__" % lf_version],
        visibility = ["//:__subpackages__"],
        deps = deps(lf_version),
    )
    for (lf_version, config) in versions.items()
] if is_intel else None

da_scala_test_suite(
    name = "tests",
    srcs = glob(["src/test/suite/scala/**/*.scala"]),
    scala_deps = [
        "@maven//:org_scalacheck_scalacheck",
        "@maven//:org_scalactic_scalactic",
        "@maven//:org_scalatest_scalatest_core",
        "@maven//:org_scalatest_scalatest_matchers_core",
        "@maven//:org_scalatest_scalatest_shouldmatchers",
        "@maven//:org_scalatest_scalatest_wordspec",
        "@maven//:org_scalatestplus_scalacheck_1_15",
        "@maven//:org_scalaz_scalaz_core",
    ],
    deps = [
        "//daml-lf/data",
        "//ledger-test-tool/infrastructure",
        "//libs-scala/test-evidence/tag:test-evidence-tag",
        "//libs-scala/timer-utils",
        "@maven//:org_scalatest_scalatest_compatible",
    ] + [
        ":suites-{}".format(version)
        for version in LF_DEV_VERSIONS
    ],
) if is_intel else None

[
    alias(
        name = "suites-%s" % name,
        actual = ":suites-%s" % lf_target,
        visibility = ["//visibility:public"],
    )
    for (name, lf_target) in lf_version_configuration.items()
] if is_intel else None

alias(
    name = "suites",
    actual = ":suites-default",
    visibility = ["//visibility:public"],
) if is_intel else None
