-- Copyright (c) 2022, Digital Asset (Switzerland) GmbH and/or its affiliates.
-- All rights reserved.

module InterfaceChoiceGuardFailed where

import Daml.Script

-- @SUPPORTS-LF-FEATURE DAML_INTERFACE_EXTENDED
-- @WARN since-lf=1.17 2.0; warn-bad-interface-instances
-- @WARN since-lf=1.17 2.0; warn-bad-interface-instances
data EmptyInterfaceView = EmptyInterfaceView {}

interface I where
  viewtype EmptyInterfaceView
  getController : Party
  choice IChoice : ()
    controller getController this
    do pure ()

template T
  with
    party : Party
  where
    signatory party
    interface instance I for T where
      view = EmptyInterfaceView
      getController = party

template Test
  with
    party : Party
    cidI : ContractId I
  where
    signatory party
    choice Call : ()
      controller party
      do
        exerciseGuarded (const False) cidI IChoice

-- @ERROR range=41:1-41:5; Attempt to exercise a choice with a failing guard
main = script do
  alice <- allocateParty "alice"
  cidT <- alice `submit` createCmd T with party = alice
  let cidI = toInterfaceContractId @I cidT
  alice `submit` createAndExerciseCmd (Test with party = alice, cidI = cidI) Call
