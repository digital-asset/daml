-- Copyright (c) 2022 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.
-- SPDX-License-Identifier: Apache-2.0

-- @SUPPORTS-LF-FEATURE DAML_INTERFACE
-- @ WARN since-lf=1.16 2.0; warn-bad-interface-instances
-- @ WARN since-lf=1.16 2.0; warn-bad-interface-instances
-- | Check that `create`, `signatory`, `observer`, `interfaceTypeRep` work as expected on interface payloads.
module InterfaceFunctions where

import Daml.Script
import DA.Assert ((===))

data EmptyInterfaceView = EmptyInterfaceView {}

interface Token where
  viewtype EmptyInterfaceView
  getAmount : Int

template Asset
  with
    issuer : Party
    owner : Party
    amount : Int
  where
    signatory issuer
    observer issuer, owner
    interface instance Token for Asset where
      view = EmptyInterfaceView
      getAmount = amount

template Test
  with
    alice : Party
    bob : Party
  where
    signatory alice
    choice Call : ()
      controller alice
      do
        let asset = Asset alice bob 15
        let token = toInterface @Token asset
        fromInterface token === Some asset
        getAmount token === 15

        cid <- create token
        token' <- fetch cid
        fromInterface token' === Some asset
        getAmount token' === 15
        signatory token === [alice]
        observer token === [bob, alice]
        assert (interfaceTypeRep token == templateTypeRep @Asset)
        assert (interfaceTypeRep token /= templateTypeRep @Token)

main = script do
    alice <- allocateParty "Alice"
    bob <- allocateParty "Bob"
    alice `submit` do createAndExerciseCmd (Test alice bob) Call
