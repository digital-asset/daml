-- Copyright (c) 2022, Digital Asset (Switzerland) GmbH and/or its affiliates.
-- All rights reserved.

module InterfaceChoiceGuardFailedNotExtended where

import Daml.Script

-- @SUPPORTS-LF-FEATURE DAML_INTERFACE
-- @DOES-NOT-SUPPORT-LF-FEATURE DAML_INTERFACE_EXTENDED
-- @ERROR Guarded exercises are only available with --target=1.dev
data EmptyInterfaceView = EmptyInterfaceView {}

interface I where
  viewtype EmptyInterfaceView
  getController : Party
  choice IChoice : ()
    controller getController this
    do pure ()

template T
  with
    party : Party
  where
    signatory party
    interface instance I for T where
      view = EmptyInterfaceView
      getController = party

template ExerciseGuarded
  with
    p : Party
    cidI : ContractId I
  where
    signatory p
    choice Call : ()
      controller p
      do
        exerciseGuarded (const False) cidI IChoice
        pure ()


main = script do
  alice <- allocateParty "alice"
  cidT <- alice `submit` createCmd T with party = alice
  let cidI = toInterfaceContractId @I cidT
  alice `submit` createAndExerciseCmd (ExerciseGuarded alice cidI) Call
