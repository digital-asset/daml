
module ConsumingTests where

import Daml.Script
import ScriptAssertHelpers

template T
  with
    p : Party
  where
    signatory p

    nonconsuming choice NoConsume : Int
      controller p
      do return 41

    choice PreConsume : Int
      controller p
      do return 42

    preconsuming choice PreConsume' : Int
      controller p
      do return 42

    choice PreConsumeBad : Int
      controller p
      do _ <- fetch self; return 42 -- No! Can't fetch self in a preconsuming choice.

    postconsuming choice PostConsume : Int
      controller p
      do (+2) <$> exercise self NoConsume -- Yes, fetching self in a postconsuming choice is ok.

main = script do
  p <- allocateParty "p"

  noConsumeCid <- submit p $ createCmd T with p
  41 <- submit p $ exerciseCmd noConsumeCid NoConsume
  p `canSee` noConsumeCid

  preConsumeCid <- submit p $ createCmd T with p
  42 <- submit p $ exerciseCmd preConsumeCid PreConsume
  p `cantSee` preConsumeCid

  preConsumeCid' <- submit p $ createCmd T with p
  42 <- submit p $ exerciseCmd preConsumeCid' PreConsume'
  p `cantSee` preConsumeCid'

  preConsumeBadCid <- submit p $ createCmd T with p
  submitMustFail p $ exerciseCmd preConsumeBadCid PreConsumeBad

  postConsumeCid <- submit p $ createCmd T with p
  43 <- submit p $ exerciseCmd postConsumeCid PostConsume
  p `cantSee` postConsumeCid

  return ()
