-- Copyright (c) 2025 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.
-- SPDX-License-Identifier: Apache-2.0

-- @WARN -Werror=upgrade-interfaces
-- @WARN -Werror=upgrade-interfaces

module DeeplyNestedValue where

import Daml.Script

data Nat = Z | S Nat
  deriving (Eq, Show)

construct: Int -> Nat -> Nat
construct x acc | x <= 0 = acc
construct x acc  = construct (x-1) (S acc)

toNat : Int -> Nat
toNat x = construct x Z

data V = V with
  n: Nat

interface I where
  viewtype V

template T
  with
    p: Party
    n: Nat
    i: Int
  where
    signatory p
    implements I where
      view = V with n = toNat i

    choice BuildNat: Nat
      controller p
      do
        pure (toNat i)

template Helper
  with
    p : Party
  where
    signatory p

    choice CreateContractWithNat: ContractId T
      with i: Int
      controller p
      do create T with p = p; n = toNat i; i = 0

-- @ERROR range=54:1-54:11; Value exceeds maximum nesting value
testCreate = script do
  alice <- allocateParty "Alice"
  alice `submit` createAndExerciseCmd (Helper alice) (CreateContractWithNat 100)

createContract = script do
  alice <- allocateParty "Alice"
  cid <- alice `submit` createCmd (T with p = alice; n = Z; i = 100)
  pure (alice, cid)

-- @ERROR range=64:1-64:19; Value exceeds maximum nesting value
testExerciseResult = script do
  (alice, cid) <- createContract
  alice `submit` exerciseCmd cid BuildNat

-- @ERROR range=69:1-69:9; Value exceeds maximum nesting value
testView = script do
  (alice, _) <- createContract
  queryInterface @I alice