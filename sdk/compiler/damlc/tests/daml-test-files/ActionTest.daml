-- Copyright (c) 2020, Digital Asset (Switzerland) GmbH and/or its affiliates.
-- All rights reserved.

module ActionTest where

import Daml.Script
import DA.Assert
import DA.Action
import DA.Optional

import Iou12

checkSome : (a -> Bool) -> Optional a -> Bool
checkSome _ None = False
checkSome p (Some a) = p a

testFilterA: Script ()
testFilterA = script do
  bank <- allocateParty "Acme Bank"
  alice <- allocateParty "Alice"
  bob <- allocateParty "Bob"
  charlie <- allocateParty "Charlie"
  let
    aliceIou = Iou bank alice "USD" 1.23 []
    bobIou = Iou bank bob "GBP" 2.34 []
    charlieIou = Iou bank charlie "EUR" 3.45 []
    ious = [aliceIou, bobIou, charlieIou]

  iouIds <- bank `submit` forA ious createCmd

  aliceIouIds <- filterA (fmap (checkSome $ \iou -> iou.owner == alice) . queryContractId bank) iouIds
  aliceIous <- fmap catOptionals $ forA aliceIouIds $ queryContractId bank
  [aliceIou] === aliceIous

  largeIouIds <- filterA (fmap (checkSome $ \iou -> iou.amount > (2.0 : Decimal)) . queryContractId bank) iouIds
  largeIous <- fmap catOptionals $ forA largeIouIds $ queryContractId bank
  [bobIou, charlieIou] === largeIous
