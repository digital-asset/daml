-- Copyright (c) 2020, Digital Asset (Switzerland) GmbH and/or its affiliates.
-- All rights reserved.

module AuthFailure where

import Daml.Script
import DA.Optional(fromSome)

-- Tests for various(all) different forms of authorization failure detected during execution.
-- Three kinds of authorization failure are tested here.
-- Three others (NoSignatories, NoControllers) are tested in separate files, because the expected
-- error message doesn't contain any indication of which testcase causes it.
-- Two others are tested in AuthFailureWithKey, because keys are only supported in dev.

template TheContract1
  with
    s : Party
  where
    signatory s

-- @ERROR range=23:1-23:30; failed due to a missing authorization from 'Ivy'
t1_CreateMissingAuthorization : Script ()
t1_CreateMissingAuthorization = script do
  mach <- allocateParty "Mach"
  ivy <- allocateParty "Ivy"
  mach `submit` createCmd (TheContract1 with s = ivy)
  abort "t1 finished"

template TheContract3
  with
    s : Party
  where
    signatory s

template TheContractBuilder3
  with
    s : Party
    c : Party
  where
    signatory s
    observer c
    choice TheChoice : ContractId TheContract3
      with s2 : Party
      controller c
      do create TheContract3 with s = s2

template Test3
  with
    bob : Party
    cid : ContractId TheContract3
  where
    signatory bob
    choice Call3 : TheContract3
      controller bob
      do fetch @TheContract3 cid

-- @ERROR range=59:1-59:29; failed since none of the stakeholders 'Alice' is in the authorizing set 'Bob'
t3_FetchMissingAuthorization : Script ()
t3_FetchMissingAuthorization = script do
  alice <- allocateParty "Alice"
  bob <- allocateParty "Bob"
  builder <- alice `submit`
    createCmd (TheContractBuilder3 with s = alice; c = bob)
  -- note: we use `builder` so `cid` is visible to bob, although he is not a stakeholder
  cid <- bob `submit`
    exerciseCmd builder TheChoice with s2 = alice
  disclosedCid <- fromSome <$> queryDisclosure alice cid
  _ <- (actAs bob <> disclose disclosedCid) `submit` (createAndExerciseCmd (Test3 bob cid) Call3)
  abort "t3 finished"

template TheContract4
  with
    s : Party
  where
    signatory s
    choice TheChoice4 : () with
        cs : [Party]
      controller cs
      do return ()

-- @ERROR range=83:1-83:32; failed due to a missing authorization from 'Bob'
t4_ExerciseMissingAuthorization : Script ()
t4_ExerciseMissingAuthorization = script do
  alice <- allocateParty "Alice"
  bob <- allocateParty "Bob"
  cid <- alice `submit` createCmd (TheContract4 with s = alice)
  alice `submit` exerciseCmd cid TheChoice4 with cs = [bob]
  abort "t4 finished"
