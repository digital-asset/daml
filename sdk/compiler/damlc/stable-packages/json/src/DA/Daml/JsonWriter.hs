-- Copyright (c) 2025 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.
-- SPDX-License-Identifier: Apache-2.0

module Main(main) where

import qualified Data.Aeson.Encode.Pretty as Aeson
import qualified Data.ByteString.Lazy     as LBS
import qualified Data.ByteString          as BS
import qualified Data.Text                as T
import qualified Data.Text.Encoding       as T
import qualified Data.Yaml                as Yaml

import           DA.Daml.LF.Ast
import           DA.Daml.StablePackages

entries :: [(Version, T.Text)]
entries = map toEntry allStablePackagesTuples
  where
    toEntry (id, pkg) = (packageLfVersion pkg, unPackageId id)

outputPath :: FilePath
outputPath = "compiler/damlc/stable-packages/json/stable-packages.json"

outputPath' :: FilePath
outputPath' = "compiler/damlc/stable-packages/json/stable-packages.yaml"

main :: IO ()
main = do
  putStrLn $ "Generating fresh json data for: " ++ outputPath
  LBS.writeFile outputPath (Aeson.encodePretty entries)
  BS.writeFile outputPath' $ headerBS `BS.append` Yaml.encode entries
  putStrLn "Successfully wrote dummy stable-packages.json."

headerLines :: [String]
headerLines =
  [ "# Copyright (c) 2025 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved."
  , "# SPDX-License-Identifier: Apache-2.0"
  , ""
  , "# This file, including this comment, is generated by (bazel run)"
  , "# //compiler/damlc/stable-packages/json:writer, and consumed by"
  , "# //compiler/damlc/stable-packages/json:reader. Whilst the writer depends on the"
  , "# reader, there is NO bazel dependency of the reader on the writer. This it is"
  , "# used to break the dependency cycle between the core of the compiler that"
  , "# generates the stable packages and the logic within this core that needs to"
  , "# know what the stable package ids are (notably, DA.Daml.LF.Proto3.EncodeV2"
  , "# needs to know if a package ref is stable to allow a direct ref, or ref via pkg"
  , "# import table, see https://github.com/digital-asset/daml/issues/21583,"
  , "# https://github.com/digital-asset/daml/commit/5cc89093a92ce5f3e9af06c706bb3b31a41ef5a2#diff-aabc09670ef767dc2612aaf3c6b80be778b5db9404cc38abae7912b010b339be)"
  , ""
  , "# To make breaking changes to this file (i.e. those that would cause the current"
  , "# implementation to not be able to parse this anymore), either:"
  , ""
  , "# 1. Ideally, work in two stages: first, update the writer. Run the writer to"
  , "# update this file. Now update the reader."
  , ""
  , "# 2. If the changes are more fundamental, make changes in both the reader and"
  , "# the writer, and manually update this file. Since the writer depends on the"
  , "# reader, the reader must be able to read the file before it is able to write"
  , "# the new file. Run the writer to ensure the new writer satisfies the new"
  , "# format."
  , ""
  ]

headerBS :: BS.ByteString
headerBS = T.encodeUtf8 $ T.pack $ unlines headerLines
