-- Copyright (c) 2024 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.
-- SPDX-License-Identifier: Apache-2.0

-- | MOVE DA.Action.State
module DA.Action.State.Type
  ( State(..)
  ) where

-- | A value of type `State s a` represents a computation that has access to a state variable
-- of type `s` and produces a value of type `a`.
--
-- >>> runState (modify (+1)) 0
-- ((), 1)
--
-- >>> evalState (modify (+1)) 0
-- ()
--
-- >>> execState (modify (+1)) 0
-- 1
--
-- >>> runState (do x <- get; modify (+1); pure x) 0
-- (0, 1)
--
-- >>> runState (put 1) 0
-- ((), 1)
--
-- >>> runState (modify (+1)) 0
-- ((), 1)
--
-- Note that values of type `State s a` are not serializable.
newtype State s a = State { runState : s -> (a, s) }
