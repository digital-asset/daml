# Copyright (c) 2025 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.
# SPDX-License-Identifier: Apache-2.0

load("//bazel_tools:haskell.bzl", "da_haskell_library", "da_haskell_test", "generate_and_track_cabal")

da_haskell_library(
    name = "daml-lf-ast",
    srcs = glob(["src/**/*.hs"]) + [":generated_haskell_versions_src"] + [":generated_haskell_features_src"],
    hackage_deps = [
        "aeson",
        "base",
        "bytestring",
        "containers",
        "deepseq",
        "Decimal",
        "extra",
        "filepath",
        "ghc-lib-parser",
        "hashable",
        "lens",
        "mtl",
        "recursion-schemes",
        "safe",
        "scientific",
        "template-haskell",
        "text",
        "time",
        "unordered-containers",
    ],
    src_strip_prefix = "src",
    visibility = ["//visibility:public"],
    deps = [
        "//libs-haskell/da-hs-base",
    ],
)

generate_and_track_cabal("daml-lf-ast")

da_haskell_test(
    name = "tests",
    srcs = glob(["test/**/*.hs"]),
    hackage_deps = [
        "base",
        "containers",
        "extra",
        "tasty",
        "tasty-hunit",
    ],
    main_function = "DA.Daml.LF.Ast.Tests.main",
    src_strip_prefix = "test",
    visibility = ["//visibility:public"],
    deps = [
        ":daml-lf-ast",
        "//compiler/daml-lf-tools",
        "//libs-haskell/da-hs-base",
        "//libs-haskell/test-utils",
    ],
)

genrule(
    name = "generated_haskell_versions_src",
    srcs = [
        "//daml-lf/language:version_data_json",
        "src/DA/Daml/LF/Ast/Version/VersionType.hs",
    ],
    outs = ["src/DA/Daml/LF/Ast/Version/GeneratedVersions.hs"],
    cmd = "$(location //daml-lf/language:generate_haskell_versions) $(location //daml-lf/language:version_data_json) $@",
    tools = ["//daml-lf/language:generate_haskell_versions"],
)

# Genrule to create the Haskell features source file.
genrule(
    name = "generated_haskell_features_src",
    # The input is the JSON file with the feature definitions.
    srcs = ["//daml-lf/language:feature_data_json"],
    # The output path must match the Haskell module name from the script.
    outs = ["src/DA/Daml/LF/Ast/Version/GeneratedFeatures.hs"],
    # The command runs the tool with the JSON input and the output file path.
    cmd = "$(location //daml-lf/language:generate_haskell_features) $(location //daml-lf/language:feature_data_json) $@",
    # The tool is the new Python script for generating features.
    tools = ["//daml-lf/language:generate_haskell_features"],
)
