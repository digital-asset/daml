# Copyright (c) 2019 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.
# SPDX-License-Identifier: Apache-2.0

genrule(
    name = "head-components-tarball",
    srcs = [
        "//daml-foundations/daml-tools/da-hs-damlc-app:damlc-dist",
        "//daml-foundations/daml-tools/daml-extension:dist",
        "//ledger/sandbox:sandbox-head-tarball",
        "//navigator/backend:navigator-binary_deploy.jar",
        "//extractor:extractor-binary_deploy.jar",
        "sdk.yaml",
    ],
    outs = ["head-components.tar.gz"],
    cmd = '''
    OUT="head-components"
    mkdir -p $${OUT}
    chmod +x $$OUT

    include_component_dir() {
      DIR="$${OUT}/$$1/0.0.0"
      mkdir -p $${DIR}
      cp -r $$2/* $${DIR}/
    }

    include_component_file() {
      DIR="$${OUT})/$$1/0.0.0"
      mkdir -p $${DIR}
      cp -r $$2 $${DIR}/$$3
    }

    include_component_targz() {
      STRIP_COUNT=$${3:-1}
      DIR="$${OUT}/$$1/0.0.0"
      mkdir -p $${DIR}
      tar -zvxf $$2 -C $${DIR} --strip-components $${STRIP_COUNT}
      chmod -R 755 $${DIR}
    }

    include_component_jar() {
      DIR="$${OUT}/$$1/0.0.0"
      JAR_NAME="$$1-0.0.0.jar"
      mkdir -p $${DIR}
      cp $$2 "$${DIR}/$${JAR_NAME}"
    }

    include_component_targz "damlc" $(location //daml-foundations/daml-tools/da-hs-damlc-app:damlc-dist)

    include_component_targz "daml-extension" $(location //daml-foundations/daml-tools/daml-extension:dist) 1

    include_component_targz "sandbox" $(location //ledger/sandbox:sandbox-head-tarball)

    include_component_jar "navigator" $(location //navigator/backend:navigator-binary_deploy.jar)

    include_component_jar "extractor" $(location //extractor:extractor-binary_deploy.jar)

    # add sdk.yaml
    mkdir -p "$${OUT}/sdk/0.0.0"
    cp $(location :sdk.yaml) "$${OUT}/sdk/0.0.0/sdk.yaml"

    # tar everything up
    tar czf $@ $${OUT}
  ''',
    visibility = ["//visibility:public"],
)

# create a tarball containing a home directory setup for testing the sdk
genrule(
    name = "test_home_tarball",
    srcs = [
        ":head-components-tarball",
    ],
    outs = ["test_home.tar.gz"],
    cmd = '''
    # Set up an alternative home directory
    TEST_HOME="test_home"
    PACKAGES_DIR="$$TEST_HOME/.da/packages"
    mkdir -p $$TEST_HOME
    mkdir -p "$$TEST_HOME/.da"

    # Create settings file
    cat > $$TEST_HOME/.da/da.yaml <<EOF
    sdk:
      default-version: {version}
    version: 2
EOF

    # Unpack the head components
    mkdir -p "$$PACKAGES_DIR/sdk/{version}"

    tar xzf $(location :head-components-tarball) -C $$PACKAGES_DIR --strip-components 1

    # `da new` is looking for a template directory. We add an empty one.
    mkdir -p "$$PACKAGES_DIR/sdk/{version}"/templates

    tar czf $@ $$TEST_HOME
    '''.format(version = "0.0.0"),
    tools = [
        "//da-assistant:da",
    ],
)

# Test the sdk. The browserstack credentials need to be specified on the command line via bazel
# //sdk/releases:test_release.sh --test-arg=<user> --test-arg=<pass>
sh_test(
    name = "tests",
    timeout = "long",
    srcs = ["//sdk/releases:test.sh"],
    args = [
        "$(location :test_home_tarball)",
        "0.0.0",
        "$(location //da-assistant:da)",
        "$(JAVABASE)/bin/jar",
        "$(location //navigator/integration-test:navigatortest-jar.jar)",
    ],
    data = [
        ":test_home_tarball",
        "//da-assistant:da",
        "//navigator/integration-test:navigatortest-jar.jar",
        "@bazel_tools//tools/jdk:current_java_runtime",
    ],
    toolchains = ["@bazel_tools//tools/jdk:current_java_runtime"],
)
