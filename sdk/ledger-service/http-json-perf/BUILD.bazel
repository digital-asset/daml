# Copyright (c) 2024 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.
# SPDX-License-Identifier: Apache-2.0

load(
    "//bazel_tools:scala.bzl",
    "da_scala_binary",
    "da_scala_library",
    "kind_projector_plugin",
    "lf_scalacopts",
)
load(
    "//rules_daml:daml.bzl",
    "daml_compile",
)
load("@scala_version//:index.bzl", "scala_major_version")
load(
    "//daml-lf/language:daml-lf.bzl",
    "lf_version_configuration",
)
load("//ledger-service/utils:scalaopts.bzl", "hj_scalacopts")

perf_runtime_deps = {
    "ce": [],
    "ee": [
        "@maven//:com_oracle_database_jdbc_ojdbc8",
    ],
}

[
    da_scala_library(
        name = "http-json-perf-{}".format(edition),
        srcs = glob(["src/main/scala/**/*.scala"]),
        resources = glob(["src/main/resources/**/*"]),
        scala_deps = [
            "@maven//:com_github_scopt_scopt",
            "@maven//:com_typesafe_scala_logging_scala_logging",
            "@maven//:io_spray_spray_json",
            "@maven//:org_scalactic_scalactic",
            "@maven//:org_scalatest_scalatest_core",
            "@maven//:org_scalaz_scalaz_core",
        ],
        scalacopts = hj_scalacopts,
        tags = ["maven_coordinates=com.daml:http-json-perf-{}:__VERSION__".format(edition)] + (["canton-ee"] if edition == "ee" else []),
        visibility = ["//visibility:public"],
        deps = [
            "//language-support/scala/bindings-pekko",
            "//ledger-service/http-json-cli:{}".format(edition),
            "//ledger-service/http-json-perf/gatling-utils",
            "//ledger-service/http-json-testing:{}".format(edition),
            "//ledger-service/http-json:http-json-{}".format(edition),
            "//libs-scala/db-utils",
            "//libs-scala/oracle-testing",
            "//libs-scala/ports",
            "//libs-scala/postgresql-testing",
            "//libs-scala/rs-grpc-bridge",
            "//libs-scala/scala-utils",
            "//runtime-components/jdbc-drivers:jdbc-drivers-{}".format(edition),
            "//test-common/canton/it-lib",
            "@deprecated_maven//:io_gatling_gatling_app",
            "@deprecated_maven//:io_gatling_gatling_commons",
            "@deprecated_maven//:io_gatling_gatling_commons_shared_unstable",
            "@deprecated_maven//:io_gatling_gatling_core",
            "@deprecated_maven//:io_gatling_gatling_http",
            "@deprecated_maven//:io_gatling_gatling_http_client",
            "@deprecated_maven//:io_gatling_gatling_netty_util",
            "@maven//:com_fasterxml_jackson_core_jackson_core",
            "@maven//:com_fasterxml_jackson_core_jackson_databind",
            "@maven//:io_netty_netty_common",
            "@maven//:io_netty_netty_transport",
            "@maven//:org_scalatest_scalatest_compatible",
            "@maven//:org_slf4j_slf4j_api",
        ],
    )
    for edition in [
        "ce",
        "ee",
    ]
]

daml_compile(
    name = "LargeAcs",
    srcs = ["daml/LargeAcs.daml"],
    target = lf_version_configuration.get("latest"),
)

[
    da_scala_binary(
        name = "http-json-perf-binary-{}".format(edition),
        data = [
            ":release/json-api-perf-logback.xml",
        ],
        jvm_flags = [
            "-Dlogback.configurationFile=$(location :release/json-api-perf-logback.xml)",
        ],
        main_class = "com.daml.http.perf.Main",
        scalacopts = hj_scalacopts,
        tags = ["canton-ee"] if edition == "ee" else [],
        visibility = ["//visibility:public"],
        runtime_deps = [
            "@deprecated_maven//:io_gatling_highcharts_gatling_charts_highcharts",
            "@maven//:ch_qos_logback_logback_classic",
        ] + perf_runtime_deps.get(edition),
        deps = [
            ":http-json-perf-{}".format(edition),
        ],
    )
    for edition in [
        "ce",
        "ee",
    ]
]

exports_files(["release/json-api-perf-logback.xml"])
