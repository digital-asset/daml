# Copyright (c) 2024 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.
# SPDX-License-Identifier: Apache-2.0

load(
    "//bazel_tools:scala.bzl",
    "da_scala_library",
    "kind_projector_plugin",
    "lf_scalacopts",
)
load("//ledger-service/utils:scalaopts.bzl", "hj_scalacopts")

[
    da_scala_library(
        name = "{}".format(edition),
        srcs = glob(
            ["src/main/scala/**/*.scala"],
            exclude = ["src/main/scala/**/CE.scala"] if edition == "ee" else ["src/main/scala/**/EE.scala"],
        ),
        data = ["//test-common/canton:canton-ee_deploy.jar"] if edition == "ee" else [],
        plugins = [
            kind_projector_plugin,
        ],
        scala_deps = [
            "@maven//:org_apache_pekko_pekko_actor",
            "@maven//:org_apache_pekko_pekko_http_core",
            "@maven//:org_apache_pekko_pekko_stream",
            "@maven//:io_spray_spray_json",
            "@maven//:org_scalacheck_scalacheck",
            "@maven//:org_scalactic_scalactic",
            "@maven//:org_scalatest_scalatest_core",
            "@maven//:org_scalatest_scalatest_matchers_core",
            "@maven//:org_typelevel_cats_effect",
        ],
        scalacopts = hj_scalacopts,
        tags = ["maven_coordinates=com.daml:http-json-testing:__VERSION__"] + (["canton-ee"] if edition == "ee" else []),
        visibility = ["//visibility:public"],
        runtime_deps = [
            "@maven//:ch_qos_logback_logback_classic",
        ],
        deps = [
            "//bazel_tools/runfiles:scala_runfiles",
            "//daml-lf/api-type-signature",
            "//daml-lf/archive:daml_lf_archive_reader",
            "//daml-lf/archive:daml_lf_dev_archive_proto_java",
            "//daml-lf/transaction",
            "//language-support/scala/bindings-pekko",
            "//ledger-service/fetch-contracts",
            "//libs-scala/rs-grpc-bridge",
            "//libs-scala/testing-utils",
            "//test-common/canton/it-lib",
            "@maven//:org_scalatest_scalatest_compatible",
            "//ledger-service/http-json:http-json-{}".format(edition),
            "//ledger-service/http-json-cli:{}".format(edition),
            "//ledger-service/cli-opts",
            "//ledger-service/metrics",
            "//ledger-service/pureconfig-utils",
            "//ledger-service/utils",
            "//ledger/ledger-api-auth",
            "//ledger/ledger-api-common",
            "//libs-scala/contextualized-logging",
            "//libs-scala/jwt",
            "//libs-scala/ledger-resources",
            "//libs-scala/ports",
            "//libs-scala/resources",
            "//libs-scala/scala-utils",
        ],
    )
    for edition in [
        "ce",
        "ee",
    ]
]
