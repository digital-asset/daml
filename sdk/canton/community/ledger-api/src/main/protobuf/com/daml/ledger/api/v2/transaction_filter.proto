// Copyright (c) 2024 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.
// SPDX-License-Identifier: Apache-2.0

syntax = "proto3";

package com.daml.ledger.api.v2;

import "com/daml/ledger/api/v1/transaction_filter.proto";

option java_outer_classname = "TransactionFilterOuterClass";
option java_package = "com.daml.ledger.api.v2";
option csharp_namespace = "Com.Daml.Ledger.Api.V2";

// A filter both for filtering create and archive events as well as for
// filtering transaction trees.
message TransactionFilter {

  // Each key must be a valid PartyIdString (as described in ``value.proto``).
  // The interpretation of the filter depends on the stream being filtered:
  //
  // 1. For **transaction tree streams** all party keys used as wildcard filters, and all subtrees
  //    whose root has one of the listed parties as an informee are returned.
  //    If there are InclusiveFilters, those will control returned ``CreatedEvent`` fields were applicable, but not
  //    used for template/interface filtering.
  // 2. For **transaction and active-contract-set streams** create and archive events are returned for all contracts whose
  //    stakeholders include at least one of the listed parties and match the
  //    per-party filter.
  //
  // Required
  map<string, com.daml.ledger.api.v1.Filters> filters_by_party = 1;
}
