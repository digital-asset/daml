---
# Copyright 2022 Digital Asset (Switzerland) GmbH and/or its affiliates
#
# SPDX-License-Identifier: Apache-2.0
#
networks:
  default:
    name: daml_observability

volumes:
  postgres:
    name: daml_observability_postgres

services:

  postgres:
    # Latest PostgreSQL version supported by Canton
    # https://www.postgresql.org/support/versioning/
    image: postgres:17
    container_name: daml_observability_postgres
    environment:
      # For default admin user 'postgres'
      POSTGRES_PASSWORD: postgres
    volumes:
      # PostgreSQL persistent data
      - postgres:/var/lib/postgresql/data
      # PostgreSQL bootstrap queries
      - ../../../../../../../../../../../../../../../community/app/src/test/resources/examples/13-observability/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    # Wait for PostgreSQL to be up and ready after bootstrap
    healthcheck:
      test: "pg_isready -U postgres"
      interval: 10s
      timeout: 3s
      retries: 3
      start_period: 30s

  sequencer1:
    image: ${CANTON_IMAGE}:${CANTON_VERSION}
    container_name: sequencer1
    ports:
      # BFT ordering P2P & standalone
      - 31031:31031
      # Prometheus exporter
      - 19091:19091
    environment:
      JDK_JAVA_OPTIONS: "-XX:+ExitOnOutOfMemoryError -Xmx8G"
      OTEL_EXPORTER_OTLP_METRICS_DEFAULT_HISTOGRAM_AGGREGATION: exponential_bucket_histogram
    command:
      - "daemon"
      - "--log-level-root=${LOG_LEVEL:-INFO}"
      - "--log-level-canton=${LOG_LEVEL:-DEBUG}"
      - "--log-level-stdout=${LOG_LEVEL:-DEBUG}"
      #      - "--log-encoder=json"
      - "--log-file-name=/var/log/promtail/canton.log"
      - "--config=/canton/config/sequencer1.conf"
      - "--bootstrap=/canton/config/sequencer.canton"
    volumes:
      # Canton configuration
      - ./canton:/canton/config
      # Logs
      - logs:/var/log/promtail
    healthcheck:
      # Requires grpcurl and jq in image
      test: "grpcurl --plaintext localhost:10012 com.digitalasset.canton.health.admin.v0.StatusService.Status | jq -e '.success | select(.active)'"
      interval: 10s
      timeout: 1s
      retries: 3
      start_period: 30s
    depends_on:
      postgres:
        condition: service_healthy

  sequencer2:
    image: ${CANTON_IMAGE}:${CANTON_VERSION}
    container_name: sequencer2
    ports:
      # BFT ordering P2P & standalone
      - 31032:31032
      # Prometheus exporter
      - 19092:19092
    environment:
      JDK_JAVA_OPTIONS: "-XX:+ExitOnOutOfMemoryError -Xmx8G"
      OTEL_EXPORTER_OTLP_METRICS_DEFAULT_HISTOGRAM_AGGREGATION: exponential_bucket_histogram
    command:
      - "daemon"
      - "--log-level-root=${LOG_LEVEL:-INFO}"
      - "--log-level-canton=${LOG_LEVEL:-DEBUG}"
      - "--log-level-stdout=${LOG_LEVEL:-DEBUG}"
      #      - "--log-encoder=json"
      - "--log-file-name=/var/log/promtail/canton.log"
      - "--config=/canton/config/sequencer2.conf"
      - "--bootstrap=/canton/config/sequencer.canton"
    volumes:
      # Canton configuration
      - ./canton:/canton/config
      # Logs
      - logs:/var/log/promtail
    healthcheck:
      # Requires grpcurl and jq in image
      test: "grpcurl --plaintext localhost:10012 com.digitalasset.canton.health.admin.v0.StatusService.Status | jq -e '.success | select(.active)'"
      interval: 10s
      timeout: 1s
      retries: 3
      start_period: 30s
    depends_on:
      postgres:
        condition: service_healthy

  sequencer3:
    image: ${CANTON_IMAGE}:${CANTON_VERSION}
    container_name: sequencer3
    ports:
      # BFT ordering P2P & standalone
      - 31033:31033
      # Prometheus exporter
      - 19093:19093
    environment:
      JDK_JAVA_OPTIONS: "-XX:+ExitOnOutOfMemoryError -Xmx8G"
      OTEL_EXPORTER_OTLP_METRICS_DEFAULT_HISTOGRAM_AGGREGATION: exponential_bucket_histogram
    command:
      - "daemon"
      - "--log-level-root=${LOG_LEVEL:-INFO}"
      - "--log-level-canton=${LOG_LEVEL:-DEBUG}"
      - "--log-level-stdout=${LOG_LEVEL:-DEBUG}"
      #      - "--log-encoder=json"
      - "--log-file-name=/var/log/promtail/canton.log"
      - "--config=/canton/config/sequencer3.conf"
      - "--bootstrap=/canton/config/sequencer.canton"
    volumes:
      # Canton configuration
      - ./canton:/canton/config
      # Logs
      - logs:/var/log/promtail
    healthcheck:
      # Requires grpcurl and jq in image
      test: "grpcurl --plaintext localhost:10012 com.digitalasset.canton.health.admin.v0.StatusService.Status | jq -e '.success | select(.active)'"
      interval: 10s
      timeout: 1s
      retries: 3
      start_period: 30s
    depends_on:
      postgres:
        condition: service_healthy

  sequencer4:
    image: ${CANTON_IMAGE}:${CANTON_VERSION}
    container_name: sequencer4
    ports:
      # BFT ordering P2P & standalone
      - 31034:31034
      # Prometheus exporter
      - 19094:19094
    environment:
      JDK_JAVA_OPTIONS: "-XX:+ExitOnOutOfMemoryError -Xmx8G"
      OTEL_EXPORTER_OTLP_METRICS_DEFAULT_HISTOGRAM_AGGREGATION: exponential_bucket_histogram
    command:
      - "daemon"
      - "--log-level-root=${LOG_LEVEL:-INFO}"
      - "--log-level-canton=${LOG_LEVEL:-DEBUG}"
      - "--log-level-stdout=${LOG_LEVEL:-DEBUG}"
      #      - "--log-encoder=json"
      - "--log-file-name=/var/log/promtail/canton.log"
      - "--config=/canton/config/sequencer4.conf"
      - "--bootstrap=/canton/config/sequencer.canton"
    volumes:
      # Canton configuration
      - ./canton:/canton/config
      # Logs
      - logs:/var/log/promtail
    healthcheck:
      # Requires grpcurl and jq in image
      test: "grpcurl --plaintext localhost:10012 com.digitalasset.canton.health.admin.v0.StatusService.Status | jq -e '.success | select(.active)'"
      interval: 10s
      timeout: 1s
      retries: 3
      start_period: 30s
    depends_on:
      postgres:
        condition: service_healthy
