// Copyright (c) 2025 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.
// SPDX-License-Identifier: Apache-2.0

syntax = "proto3";

package com.digitalasset.canton.mediator.admin.v30;

import "com/digitalasset/canton/admin/pruning/v30/pruning.proto";
import "google/protobuf/timestamp.proto";

// administration service for mediator instances
service MediatorAdministrationService {
  // Remove unnecessary data from the Mediator
  rpc Prune(MediatorPruning.PruneRequest) returns (MediatorPruning.PruneResponse);

  // Enable automatic pruning using the specified schedule parameters
  // The following errors may occur on the SetSchedule or Update commands:
  // - ``INVALID_ARGUMENT``: if a parameter is missing or an invalid cron expression
  //   or duration.
  // - ``FAILED_PRECONDITION``: if automatic background pruning has not been enabled
  //   or if invoked on a participant running the Community Edition.
  rpc SetSchedule(com.digitalasset.canton.admin.pruning.v30.SetScheduleRequest) returns (com.digitalasset.canton.admin.pruning.v30.SetScheduleResponse);

  // Modify individual pruning schedule parameters.
  // - ``INVALID_ARGUMENT``: if the payload is malformed or no schedule is configured
  rpc SetCron(com.digitalasset.canton.admin.pruning.v30.SetCronRequest) returns (com.digitalasset.canton.admin.pruning.v30.SetCronResponse);
  rpc SetMaxDuration(com.digitalasset.canton.admin.pruning.v30.SetMaxDurationRequest) returns (com.digitalasset.canton.admin.pruning.v30.SetMaxDurationResponse);
  rpc SetRetention(com.digitalasset.canton.admin.pruning.v30.SetRetentionRequest) returns (com.digitalasset.canton.admin.pruning.v30.SetRetentionResponse);

  // Disable automatic pruning and remove the persisted schedule configuration.
  rpc ClearSchedule(com.digitalasset.canton.admin.pruning.v30.ClearScheduleRequest) returns (com.digitalasset.canton.admin.pruning.v30.ClearScheduleResponse);

  // Retrieve the automatic pruning configuration.
  rpc GetSchedule(com.digitalasset.canton.admin.pruning.v30.GetScheduleRequest) returns (com.digitalasset.canton.admin.pruning.v30.GetScheduleResponse);

  // Retrieve pruning timestamp at or near the "beginning" of events.
  rpc LocatePruningTimestamp(com.digitalasset.canton.admin.pruning.v30.LocatePruningTimestampRequest) returns (com.digitalasset.canton.admin.pruning.v30.LocatePruningTimestampResponse);
}

message MediatorPruning {
  message PruneRequest {
    // timestamp to prune for
    google.protobuf.Timestamp timestamp = 1;
  }

  message PruneResponse {}
}
