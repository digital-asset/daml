// Copyright (c) 2024 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.
// SPDX-License-Identifier: Apache-2.0

syntax = "proto3";

package com.digitalasset.canton.admin.pruning.v30;

import "google/protobuf/duration.proto";
import "google/protobuf/timestamp.proto";

message SetSchedule {
  message Request {
    PruningSchedule schedule = 1;
  }
  message Response {}
}

message GetSchedule {
  message Request {}
  message Response {
    PruningSchedule schedule = 1;
  }
}

message SetParticipantSchedule {
  message Request {
    ParticipantPruningSchedule schedule = 1;
  }
  message Response {}
}

message GetParticipantSchedule {
  message Request {}
  message Response {
    ParticipantPruningSchedule schedule = 1;
  }
}

message PruningSchedule {
  string cron = 1;
  google.protobuf.Duration max_duration = 2;
  google.protobuf.Duration retention = 3;
}

message ParticipantPruningSchedule {
  PruningSchedule schedule = 1;
  bool prune_internally_only = 2;
}

message ClearSchedule {
  message Request {}
  message Response {}
}

message SetCron {
  message Request {
    string cron = 1;
  }
  message Response {}
}

message SetMaxDuration {
  message Request {
    google.protobuf.Duration max_duration = 1;
  }
  message Response {}
}

message SetRetention {
  message Request {
    google.protobuf.Duration retention = 1;
  }
  message Response {}
}

message LocatePruningTimestamp {
  message Request {
    // the index to look up the offset for, needs to be 1 or larger
    // i.e. 1 for returning the first timestamp, 2 for the second timestamp etc
    int32 index = 1;
  }
  message Response {
    // optional, not set if less than `index` events exist
    google.protobuf.Timestamp timestamp = 1;
  }
}

// overwrites previous no-wait-configuration on the given domains for the given counter participants
message SetNoWaitCommitmentsFrom {
  message Request {
    // ignore the given participants; an empty list has no effect
    repeated string counter_participant_uids = 1;
    // pruning calls with an offset larger or equal to (the given pruning_offset/ to the offset equivalent to the given
    // sequencing time) will disregard the given counter participants
    oneof timestamp_or_offset {
      google.protobuf.Timestamp sequencing_timestamp = 3;
      string pruning_offset = 4;
    }
    // ignore the given participants on these domains
    // an empty list has no effect
    repeated string domain_ids = 5;
  }

  message Response {
    // counter participants for which we updated the no-wait-config and on which domains
    map <string, Domains> participant_domains_mapping = 1;
  }
}

// deletes previous no-wait-configuration on the given domains for the given counter participants
message ResetNoWaitCommitmentsFrom {
  message Request {
    // an empty list has no effect
    repeated string counter_participant_uids = 1;
    // an empty list has no effect
    repeated string domain_ids = 2;
  }

  message Response {
    // counter participants for which we updated the no-wait-config and on which domains
    map <string, Domains> participant_domains_mapping = 1;
  }
}


message Domains {
  repeated string domain_ids = 1;
}

// Returns the state of no-wait-config at the time the request executes, with optional filtering on domains and
// counter participants
// The response includes the status of the specified counter participants on the specified domains, regardless of
// whether these counter participants have shared contracts with the participant at the time the call executes.
// If no counter participants / domains are specified, the response includes all counter participants that are
// known to the local participant at the time when the call executes, regardless of whether they have shared contracts
// with the participant at the time the call executes.
// Even if some participants may not be connected to some domains at the time the query executes, the response still
// includes them if they are known to the participant or specified in the arguments.
message GetNoWaitCommitmentsFrom {
  message Request {
    repeated string domain_ids = 1;
    repeated string participant_uids = 2;
  }

  message Response {
    // participants that are ignored
    repeated NoWaitCommitmentsSetup ignored_participants = 1;
    // participants that are not ignored
    repeated WaitCommitmentsSetup not_ignored_participants = 2;
  }
}

message NoWaitCommitmentsSetup {
  string counter_participant_uid = 1;
  // since when the counter participant is ignored
  oneof timestamp_or_offset_active {
    google.protobuf.Timestamp sequencing_timestamp = 2;
    string pruning_offset = 3;
  }
  Domains domain_ids = 4;
  SharedContractsState counter_participant_state = 5;
}

message WaitCommitmentsSetup {
  string counter_participant_uid = 1;
  Domains domain_ids = 2;
  SharedContractsState counter_participant_state = 3;
}

enum SharedContractsState {
  STATE_UNSPECIFIED = 0;
  // the participant has shared contracts with the counter participant
  SHARED_CONTRACTS = 1;
  // the participant knows the counter participant but has no shared contracts
  NO_SHARED_CONTRACTS = 2;
}
