// Copyright (c) 2025 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.
// SPDX-License-Identifier: Apache-2.0

syntax = "proto3";

package com.digitalasset.canton.admin.participant.v30;

// Defines override mappings for assigning representative package IDs to contracts upon ACS import.
//
// The representative package ID is assigned to a contract upon ACS import based on the following precedence rules.
//  1. The associated override for the contract ID in RepresentativePackageIdOverride.contract_override, if specified and present in the package store
//  2. The associated override for the contract's original package ID in RepresentativePackageIdOverride.package_id_override, if specified and present in the package store
//  3. The contract's representative package ID from the ACS snapshot, if present in the package store
//  4. The contract's creation package ID, if present in the package store
//  5. The associated override for the contract's package name in RepresentativePackageIdOverride.package_name_override, if specified and present in the package store
//  6. The highest-versioned package in the participant's package store for the contract's package name
//
// If none of the above rules yield a representative package ID, the ACS import request will fail.
//
// See ``CreatedEvent.representative_package_id`` in ``event.proto`` for more details on the concept of
// representative package IDs.
message RepresentativePackageIdOverride {
  // Mapping from contract ID to the target representative package ID.
  // Only contracts with IDs matching the keys in this map are affected.
  map<string, string> contract_override = 1;

  // Mapping from a contract's original package IDs (either the creation or the representative package ID) to the target representative package ID.
  // Affects only contracts with creation or representative package IDs matching the keys in this map,
  // except if they're not already affected by `contract_override`.
  map<string, string> package_id_override = 2;

  // Mapping from any contract's package name to the target representative package ID
  // Affects only contracts with package names matching the keys in this map,
  // except if they're already affected by `contract_override` or `package_id_override`.
  map<string, string> package_name_override = 3;
}

enum ContractImportMode {
  // Default enum value that indicates the ContractImportMode field was not explicitly set.
  // Requests with this value will fail validation and be rejected.
  CONTRACT_IMPORT_MODE_UNSPECIFIED = 0;
  // A contract is imported without validation or contract-id recomputation.
  // This option is suitable for large imports when the participant operator is confident that all contracts
  // are valid for their associated representative package-id.
  CONTRACT_IMPORT_MODE_ACCEPT = 1;
  // Upon import, each contract is validated, including authentication of its contract ID.
  // The operation will fail if any contract does not pass validation.
  //
  // This is the recommended option for most import scenarios.
  CONTRACT_IMPORT_MODE_VALIDATION = 2;
  // The contract is validated and its contract ID suffix is recomputed.
  CONTRACT_IMPORT_MODE_RECOMPUTATION = 3;
}
