// Copyright (c) 2025 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.
// SPDX-License-Identifier: Apache-2.0

package com.digitalasset.canton.participant.config

import com.digitalasset.canton.config.CantonConfigValidator
import com.digitalasset.canton.platform.apiserver.configuration.EngineLoggingConfig

/** Configure the behaviour of the Daml Engine
  *
  * @param enableEngineStackTraces
  *   If true, DAMLe stack traces will be enabled
  * @param enableStrictDarValidation
  *   When true, return an error code should extra packages
  *   be detected during Dar validation. Otherwise, only log the extra packages
  *   that have been detected.
  * @param iterationsBetweenInterruptions
  *   Number of engine iterations between forced interruptions (outside needs of information).
  * @param submissionPhaseLogging
  *   Configuration for logging in phase one (command submission) of canton transaction processing
  * @param validationPhaseLogging
  *   Configuration for logging in phase three (transaction validation) of canton transaction
  *   processing
  * @param enableAdditionalConsistencyChecks
  *   When true, extra consistency checks are performed for transactions, ensuring that
  *   serialization/deserialization and enrichment/impoverishment processes remain idempotent on
  *   transaction outputs generated by the engine. Requires canton.parameters.non-standard-config =
  *   true
  */
final case class CantonEngineConfig(
    enableEngineStackTraces: Boolean = false,
    // TODO: ???: we should use a default of true
    enableStrictDarValidation: Boolean = false,
    iterationsBetweenInterruptions: Long =
      10000, // 10000 is the default value in the engine configuration
    submissionPhaseLogging: EngineLoggingConfig = EngineLoggingConfig(enabled = true),
    validationPhaseLogging: EngineLoggingConfig = EngineLoggingConfig(enabled = false),
    enableAdditionalConsistencyChecks: Boolean = false,
)
object CantonEngineConfig {
  implicit val cantonEngineConfigCantonConfigValidator: CantonConfigValidator[CantonEngineConfig] =
    CantonConfigValidator.validateAll // there are no enterprise features in here
}
