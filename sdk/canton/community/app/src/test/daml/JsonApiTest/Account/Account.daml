-- Copyright (c) 2025 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.
-- SPDX-License-Identifier: Apache-2.0

{-# LANGUAGE CPP #-}

module Account where

import DA.Foldable
import DA.Text

data AccountStatus = Enabled Time | Disabled Time
  deriving (Eq, Show)

template Account with
    owner : Party
    number : Text
    status : AccountStatus
  where
    signatory owner

#ifdef DAML_CONTRACT_KEYS
    key (owner, number) : (Party, Text)
    maintainer key._1
#endif

    interface instance IAccount for Account where
      view = IAccountViewType with
        owner = owner
        amount = number
        isAbcPrefix = isPrefixOf "abc" number
        is123Suffix = isSuffixOf "123" number

      changeAmountImpl newAmount = do
            cid <- create this with number = newAmount
            pure (toInterfaceContractId @IAccount cid)


template SharedAccount with
    owners : [Party]
    number : Text
    status : AccountStatus
  where
    signatory owners

#ifdef DAML_CONTRACT_KEYS
    key (owners, number) : ([Party], Text)
    maintainer key._1
#endif

data Foo = Bar Int | Baz BazRecord | Qux
    deriving (Eq, Show)

data BazRecord = BazRecord { baz : Text }
    deriving (Eq, Show)

#ifdef DAML_CONTRACT_KEYS
template KeyedByVariantAndRecord with
    name: Text
    party: Party
    age: Int
    fooVariant: Foo
    bazRecord: BazRecord
  where
    signatory party
    key (party, fooVariant, bazRecord): (Party, Foo, BazRecord)
    maintainer key._1

type Amount = Numeric 6

template KeyedByDecimal with
    party: Party
    amount: Amount
  where
    signatory party
    key (party, amount): (Party, Amount)
    maintainer key._1
#endif

template PubSub with
    publisher: Party
    subscribers: [Party]
  where
    signatory publisher
    observer subscribers

template Helper
  with
    owner : Party
  where
    signatory owner
    choice CreateN : [ContractId Account]
      with
        n : Int
      controller owner
      do t <- getTime
         mapA (\i -> create (Account owner (show i) (Enabled t))) [1 .. n]

    choice ArchiveAll : ()
      with
        cids : [ContractId Account]
      controller owner
      do mapA_ archive cids

data IAccountViewType = IAccountViewType with
  owner: Party
  amount: Text
  isAbcPrefix: Bool
  is123Suffix: Bool

interface IAccount where
  viewtype IAccountViewType

  changeAmountImpl : Text -> Update (ContractId IAccount)

  choice ChangeAmount : ContractId IAccount
    with
      newAmount : Text
    controller (view this).owner
    do
      changeAmountImpl this newAmount
