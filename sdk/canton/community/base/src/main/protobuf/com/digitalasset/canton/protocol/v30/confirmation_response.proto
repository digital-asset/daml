// Copyright (c) 2025 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.
// SPDX-License-Identifier: Apache-2.0

syntax = "proto3";

package com.digitalasset.canton.protocol.v30;

import "google/rpc/status.proto";
import "scalapb/scalapb.proto";

// Definition of the ConfirmationResponse message which is shared between the transaction and reassignment protocol

message LocalVerdict {
  option (scalapb.message).companion_extends = "com.digitalasset.canton.version.StableProtoVersion";

  VerdictCode code = 1;
  google.rpc.Status reason = 2; // ok iff code is approve

  enum VerdictCode {
    VERDICT_CODE_UNSPECIFIED = 0;
    VERDICT_CODE_LOCAL_APPROVE = 1;
    VERDICT_CODE_LOCAL_REJECT = 2;
    VERDICT_CODE_LOCAL_MALFORMED = 3;
  }
}

message ConfirmationResponse {
  LocalVerdict local_verdict = 1;
  repeated string confirming_parties = 2; // Empty iff the verdict is malformed.
  ViewPosition view_position = 3;
}

message ConfirmationResponses {
  option (scalapb.message).companion_extends = "com.digitalasset.canton.version.StableProtoVersion";
  int64 request_id = 1; // in microseconds of UTC time since Unix epoch
  bytes root_hash = 2; // required since DAML 3.0
  string synchronizer_id = 3;
  string sender = 4;
  repeated ConfirmationResponse responses = 5;
}

message ViewPosition {
  repeated MerkleSeqIndex position = 1;
}

message MerkleSeqIndex {
  repeated bool is_right = 1;
}
