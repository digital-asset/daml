// Copyright (c) 2025 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.
// SPDX-License-Identifier: Apache-2.0

syntax = "proto3";

package com.digitalasset.canton.protocol.v30;

import "scalapb/scalapb.proto";

// Messages related to Merkle trees (including GenTransactionTree)

message GenTransactionTree {
  BlindableNode submitter_metadata = 1;
  BlindableNode common_metadata = 2;
  BlindableNode participant_metadata = 3;
  MerkleSeq root_views = 4;
}

message BlindableNode {
  oneof blinded_or_not {
    bytes unblinded = 1;
    bytes blinded_hash = 2;
  }
}

message MerkleSeq {
  option (scalapb.message).companion_extends = "com.digitalasset.canton.version.StableProtoVersion";

  BlindableNode root_or_empty = 1; // optional; absent if the sequence is empty
}

message MerkleSeqElement {
  option (scalapb.message).companion_extends = "com.digitalasset.canton.version.StableProtoVersion";

  // Fields mandatory for Branch
  BlindableNode first = 1;
  BlindableNode second = 2;

  // Fields mandatory for Singleton
  BlindableNode data = 3;
}
