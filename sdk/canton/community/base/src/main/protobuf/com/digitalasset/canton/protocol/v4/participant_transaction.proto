// Copyright (c) 2024 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.
// SPDX-License-Identifier: Apache-2.0

syntax = "proto3";

package com.digitalasset.canton.protocol.v4;

import "com/digitalasset/canton/crypto/v0/crypto.proto";
import "com/digitalasset/canton/protocol/v0/participant_transaction.proto";
import "com/digitalasset/canton/protocol/v1/participant_transaction.proto";
import "com/digitalasset/canton/protocol/v2/participant_transaction.proto";
import "com/digitalasset/canton/protocol/v3/participant_transaction.proto";
import "scalapb/scalapb.proto";

// Compared to v3: action_description changed type from v2.ActionDescription to v3.ActionDescription
message ViewParticipantData {
  option (scalapb.message).companion_extends = "com.digitalasset.canton.version.StableProtoVersion";
  com.digitalasset.canton.crypto.v0.Salt salt = 1;
  repeated v2.InputContract core_inputs = 2;
  repeated v2.CreatedContract created_core = 3;
  repeated string created_in_subview_archived_in_core = 4; // ids of contracts created in a subview and archived in the core
  repeated v1.ResolvedKey resolved_keys = 5;
  v3.ActionDescription action_description = 6;
  v0.ViewParticipantData.RollbackContext rollback_context = 7; // optional; defaults to the empty RollbackContext if omitted.
}

message ActionDescription {
  option (scalapb.message).companion_extends = "com.digitalasset.canton.version.StableProtoVersion";

  // Compared to v3: Update FetchActionDescription
  oneof description {
    v0.ActionDescription.CreateActionDescription create = 1;
    v3.ActionDescription.ExerciseActionDescription exercise = 2;
    FetchActionDescription fetch = 3;
    v1.ActionDescription.LookupByKeyActionDescription lookup_by_key = 4;
  }

  // Compared from v1: Add interfaceId
  message FetchActionDescription {
    string input_contract_id = 1;
    repeated string actors = 2;
    bool by_key = 3;
    string version = 4;
    optional string template_id = 5;
    optional string interface_id = 6;
  }
}
