// Copyright (c) 2025 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.
// SPDX-License-Identifier: Apache-2.0

syntax = "proto3";

package com.digitalasset.canton.topology.admin.v30;

import "com/digitalasset/canton/topology/admin/v30/common.proto";

/**
 * The node identity initialization service
 */
service IdentityInitializationService {
  /**
   * Initialize the node with the unique identifier (can and must be done once)
   *
   * When a node starts for the first time, we need to bind it
   * to a globally unique stable identifier before we can continue with the
   * initialization procedure.
   *
   * This method is only used once during initialization.
   */
  rpc InitId(InitIdRequest) returns (InitIdResponse);

  /**
   * Returns the owner to key transactions together with all necessary certificates, used for onboarding
   */
  rpc GetOnboardingTransactions(GetOnboardingTransactionsRequest) returns (GetOnboardingTransactionsResponse);

  /**
   * Returns the id of the node (or empty if not initialized)
   */
  rpc GetId(GetIdRequest) returns (GetIdResponse);

  /**
   * Returns the current time of the node (used for testing with static time)
   */
  rpc CurrentTime(CurrentTimeRequest) returns (CurrentTimeResponse);
}

message InitIdRequest {
  // the unique identifier of this node
  string unique_identifier = 1;
}

message InitIdResponse {}

message GetIdResponse {
  bool initialized = 1;
  string unique_identifier = 2;
}

message GetOnboardingTransactionsRequest {}

message GetOnboardingTransactionsResponse {
  com.digitalasset.canton.topology.admin.v30.TopologyTransactions transactions = 1;
}

message GetIdRequest {}

message CurrentTimeRequest {}

message CurrentTimeResponse {
  int64 current_time = 1;
}
