// Copyright (c) 2024 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.
// SPDX-License-Identifier: Apache-2.0

syntax = "proto3";

package com.digitalasset.canton.protocol.v1;

import "com/digitalasset/canton/crypto/v0/crypto.proto";
import "com/digitalasset/canton/protocol/v0/topology.proto";
import "com/digitalasset/canton/protocol/v1/sequencing.proto";
import "google/protobuf/timestamp.proto";
import "scalapb/scalapb.proto";

message TopologyStateUpdate {
  v0.TopologyChangeOp operation = 1;
  // unique id of this element
  string id = 2;
  // the element of this topology transaction
  oneof mapping {
    v0.NamespaceDelegation namespace_delegation = 3;
    v0.IdentifierDelegation identifier_delegation = 4;
    v0.OwnerToKeyMapping owner_to_key_mapping = 5;
    v0.PartyToParticipant party_to_participant = 6;
    v0.SignedLegalIdentityClaim signed_legal_identity_claim = 7;
    v0.ParticipantState participant_state = 8;
    v0.VettedPackages vetted_packages = 9;
    v0.MediatorDomainState mediator_domain_state = 10;
  }
}

message DomainParametersChange {
  // domain affected by the new domain parameters
  string domain = 1;
  DynamicDomainParameters domain_parameters = 2;
}

message DomainGovernanceTransaction {
  // the element of this topology transaction
  oneof mapping {
    DomainParametersChange domain_parameters_change = 1;
  }
}

message TopologyTransaction {
  option (scalapb.message).companion_extends = "com.digitalasset.canton.version.StableProtoVersion";

  oneof transaction {
    TopologyStateUpdate state_update = 1;
    DomainGovernanceTransaction domain_governance = 2;
  }
}

/*
   Differences with v0.RegisterTopologyTransactionResponse
   - Removed deprecated Result.State.REQUESTED
   - Removed Result.unique_path
*/
message RegisterTopologyTransactionResponse {
  option (scalapb.message).companion_extends = "com.digitalasset.canton.version.StableProtoVersion";

  message Result {
    enum State {
      MISSING_STATE = 0;
      // the request failed with an error message
      FAILED = 2;
      // the request has been automatically rejected.
      REJECTED = 3;
      // the request has been accepted by the domain topology manager
      ACCEPTED = 4;
      // the request is a duplicate (i.e. yields an topology state element that already exists)
      DUPLICATE = 5;
      // the request is obsolete (i.e. a Remove to a topology mapping that does not exist on the server)
      OBSOLETE = 6;
    }
    State state = 1;
    string error_message = 2;
  }
  string requested_by = 1;
  string participant = 2;
  string request_id = 3;
  repeated Result results = 4;
  string domain_id = 5;
}

// used by synchronization.v2
message DomainTopologyTransactionMessage {
  option (scalapb.message).companion_extends = "com.digitalasset.canton.version.StableProtoVersion";

  // signature of the domain topology manager
  com.digitalasset.canton.crypto.v0.Signature signature = 1;
  string domain_id = 2;
  /** latest acceptable timestamp for sequencing */
  google.protobuf.Timestamp not_sequenced_after = 3;
  /** versioned signed topology transactions serialized as byte-strings such that we can compute the signature here */
  repeated bytes transactions = 4;
}
