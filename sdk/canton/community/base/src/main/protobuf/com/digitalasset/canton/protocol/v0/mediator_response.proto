// Copyright (c) 2024 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.
// SPDX-License-Identifier: Apache-2.0

syntax = "proto3";

package com.digitalasset.canton.protocol.v0;

import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";
import "scalapb/scalapb.proto";

// Definition of the MediatorResponse message which is shared between the transaction and transfer protocol

message MediatorResponse {
  option (scalapb.message).companion_extends = "com.digitalasset.canton.version.StableProtoVersion";

  google.protobuf.Timestamp request_id = 1;
  string sender = 2;
  bytes view_hash = 3; // May be empty for Malformed verdicts if the participant cannot determine the view hash.
  LocalVerdict local_verdict = 4;
  bytes root_hash = 5; // May be empty for Malformed verdicts if the participant cannot determine the root hash.
  repeated string confirming_parties = 6; // Empty iff the verdict is malformed.
  string domain_id = 7;
}

message LocalVerdict {
  option (scalapb.message).companion_extends = "com.digitalasset.canton.version.StableProtoVersion";

  oneof some_local_verdict {
    google.protobuf.Empty local_approve = 1;
    LocalReject local_reject = 2;
  }
}

message LocalReject {
  enum Code {
    MissingCode = 0;
    LockedContracts = 1;
    LockedKeys = 2;
    InactiveContracts = 3;
    DuplicateKey = 4;
    CreatesExistingContract = 5;
    LedgerTime = 6;
    SubmissionTime = 7;
    LocalTimeout = 8;
    MalformedPayloads = 9;
    MalformedModel = 10;
    MalformedConfirmationPolicy = 11;
    BadRootHashMessage = 12;
    TransferOutActivenessCheck = 13;
    TransferInAlreadyCompleted = 14;
    TransferInAlreadyActive = 15;
    TransferInAlreadyArchived = 16;
    TransferInLocked = 17;
    InconsistentKey = 18;
  }
  Code code = 1;
  /** human readable explanation */
  string reason = 2;
  /** affected resource */
  repeated string resource = 3;
}
