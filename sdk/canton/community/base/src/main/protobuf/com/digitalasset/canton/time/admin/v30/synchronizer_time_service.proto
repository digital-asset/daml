// Copyright (c) 2025 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.
// SPDX-License-Identifier: Apache-2.0

syntax = "proto3";

package com.digitalasset.canton.time.admin.v30;

import "google/protobuf/duration.proto";
import "google/protobuf/timestamp.proto";

service SynchronizerTimeService {
  // fetch the synchronizer time which has been received within a supplied freshness bound defined by the local clock
  rpc FetchTime(FetchTimeRequest) returns (FetchTimeResponse);
  // await for the supplied time to be reached on the target synchronizer
  rpc AwaitTime(AwaitTimeRequest) returns (AwaitTimeResponse);
}

message FetchTimeRequest {
  // optional - must be specified for participants but can be defaulted for synchronizer entities as they only have one possible synchronizer
  optional string synchronizer_id = 1;
  google.protobuf.Duration freshness_bound = 2;
}

message FetchTimeResponse {
  google.protobuf.Timestamp timestamp = 1;
}

message AwaitTimeRequest {
  // optional - must be specified for participants but can be defaulted for synchronizer entities as they only have one possible synchronizer
  optional string synchronizer_id = 1;
  // the synchronizer time to wait for
  google.protobuf.Timestamp timestamp = 2;
}

message AwaitTimeResponse {}
