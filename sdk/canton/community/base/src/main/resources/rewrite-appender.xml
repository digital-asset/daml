<!--
  ~ Copyright 2020 Digital Asset (Switzerland) GmbH and/or its affiliates
  ~
  ~ SPDX-License-Identifier: Apache-2.0
  -->
<included>
    <appender name="REWRITE_LOG_LEVEL_SYNC" class="com.digitalasset.canton.logging.RewritingAppender">

        <!-- set to true if we should include the testing message rewriting rules -->
        <testing>${REWRITE_TESTING:-false}</testing>

        <appender-ref ref="STDOUT"/>
        <appender-ref ref="FILE"/>

        <!-- Netty issue with not ignoring streams that have been cancelled
             - https://github.com/grpc/grpc-java/issues/4651
             - https://github.com/netty/netty/pull/9402 -->
        <!-- Set maximum log level of Netty to INFO to suppress spurious warnings and errors -->
        <rewrite class="com.digitalasset.canton.logging.Rewrite">
            <logger>io.grpc.netty.NettyServerStream</logger>
            <maxLevel>INFO</maxLevel>
            <exceptionMessage>Stream closed before write could take place</exceptionMessage>
        </rewrite>
        <!-- Suppress NettyServerHandler handler error which can happen on cancelled client connections https://github.com/grpc/grpc-java/issues/4651 -->
        <rewrite class="com.digitalasset.canton.logging.Rewrite">
            <logger>io.grpc.netty.NettyServerHandler</logger>
            <maxLevel>INFO</maxLevel>
            <contains>Stream Error</contains>
            <exceptionMessage>Received DATA frame for an unknown stream</exceptionMessage>
        </rewrite>
        <rewrite class="com.digitalasset.canton.logging.Rewrite">
            <logger>io.grpc.netty.NettyServerHandler</logger>
            <maxLevel>INFO</maxLevel>
            <contains>Stream Error</contains>
            <exceptionMessage>Stream closed before write could take place</exceptionMessage>
        </rewrite>
        <!-- Suppress warnings by Hikari to give Canton the opportunity to resolve the problem by retrying -->
        <rewrite class="com.digitalasset.canton.logging.Rewrite">
            <logger>com.zaxxer.hikari.pool.ProxyConnection</logger>
            <maxLevel>INFO</maxLevel>
            <contains>marked as broken</contains>
        </rewrite>
        <!-- Rewrite materializer log-level, as it is a bit dramatic if upstream closes the connection -->
        <rewrite class="com.digitalasset.canton.logging.Rewrite">
            <logger>org.apache.pekko.stream.Materializer</logger>
            <maxLevel>INFO</maxLevel>
            <contains>[completion at client] Upstream failed</contains>
            <exceptionMessage>UNAVAILABLE</exceptionMessage>
        </rewrite>
        <!-- get Ledger-api-server mutable state cache to stop logging benign event as WARN -->
        <rewrite class="com.digitalasset.canton.logging.Rewrite">
            <logger>com.digitalasset.canton.platform.store.cache.StateCache</logger>
            <maxLevel>INFO</maxLevel>
            <contains>Failure in pending cache update for key</contains>
        </rewrite>

        <!-- Warnings emitted by caffeine when trying to load an entry for the async cache -->
        <rewrite class="com.digitalasset.canton.logging.Rewrite">
            <logger>
                com.github.benmanes.caffeine.cache.LocalAsyncCache
            </logger>
            <contains>Exception thrown during asynchronous load</contains>
            <maxLevel>INFO</maxLevel>
        </rewrite>

        <!-- Parallel indexer on H2-based tests (e.g. DemoExampleIntegrationTest) runs into H2-upsert race:
             - Against H2, you either get: Unique index or primary key violation: "PUBLIC.PRIMARY_KEY_5 ON PUBLIC.PACKAGES(PACKAGE_ID) ... MERGE INTO packages USING DUAL on package_id
             - Or: org.h2.jdbc.JdbcBatchUpdateException: Timeout trying to lock table ... MERGE INTO packages USING DUAL on package_id

             The rules should be removed once https://digitalasset.atlassian.net/browse/DPP-562 is done.
        -->
        <rewrite class="com.digitalasset.canton.logging.Rewrite">
            <logger>com.digitalasset.canton.platform.indexer.RecoveringIndexer</logger>
            <contains>Error while running indexer, restart scheduled</contains>
            <exceptionMessage>MERGE INTO packages USING DUAL on package_id</exceptionMessage>
            <maxLevel>INFO</maxLevel>
        </rewrite>
        <rewrite class="com.digitalasset.canton.logging.Rewrite">
            <logger>com.digitalasset.canton.platform.store.appendonlydao.DbDispatcher</logger>
            <contains>INDEX_DB_SQL_NON_TRANSIENT_ERROR</contains>
            <exceptionMessage>MERGE INTO packages USING DUAL on package_id</exceptionMessage>
            <maxLevel>INFO</maxLevel>
        </rewrite>

        <!-- Compatibility warning emitted by flyway -->
        <rewrite class="com.digitalasset.canton.logging.Rewrite">
            <logger>org.flywaydb.core.internal.database.base.Database</logger>
            <contains>Flyway upgrade recommended: H2 2.1.210 is newer than this version of Flyway and support has not been tested.</contains>
            <maxLevel>INFO</maxLevel>
        </rewrite>

        <!-- At shutdown of DbDispatcher we do not wait for the health-check process to finish, which can emit warnings, as the Hikari pool is shut down in the wrong moment. -->
        <rewrite class="com.digitalasset.canton.logging.Rewrite">
            <logger>com.zaxxer.hikari.pool.PoolBase</logger>
            <contains>Failed to validate connection</contains>
            <maxLevel>INFO</maxLevel>
        </rewrite>

        <!--
            TESTING REWRITE RULES
        -->
        <rewrite class="com.digitalasset.canton.logging.Rewrite">
            <logger>io.grpc.netty.NettyServerStream</logger>
            <maxLevel>INFO</maxLevel>
            <contains>Exception processing message</contains>
            <exceptionMessage>gRPC message exceeds maximum size</exceptionMessage>
            <testing>true</testing>
        </rewrite>

        <!-- # TODO(#13519): Suppress error in JSON API integration tests and remove these two exceptions -->
        <rewrite class="com.digitalasset.canton.logging.Rewrite">
            <logger>com.digitalasset.canton.http.StaticContentRouter</logger>
            <maxLevel>INFO</maxLevel>
            <contains>StaticContentRouter configured: StaticContentConfig</contains>
            <testing>true</testing>
        </rewrite>
        <rewrite class="com.digitalasset.canton.logging.Rewrite">
            <logger>com.digitalasset.canton.http.StaticContentRouter</logger>
            <maxLevel>INFO</maxLevel>
            <contains>DO NOT USE StaticContentRouter IN PRODUCTION, CONSIDER SETTING UP REVERSE PROXY!!!</contains>
            <testing>true</testing>
        </rewrite>

        <!-- # TODO(#13519): Suppress error in JSON API integration tests and remove this exception -->
        <rewrite class="com.digitalasset.canton.logging.Rewrite">
            <logger>com.digitalasset.canton.ledger.api.auth.interceptor.AuthorizationInterceptor</logger>
            <maxLevel>INFO</maxLevel>
            <contains>Could not resolve is_deactivated status for user </contains>
            <testing>true</testing>
        </rewrite>

        <!-- KMS integration test might disable certificate verification -->
        <rewrite class="com.digitalasset.canton.logging.Rewrite">
            <logger>software.amazon.awssdk.http.nio.netty.internal.SslContextProvider</logger>
            <maxLevel>INFO</maxLevel>
            <contains>SSL Certificate verification is disabled</contains>
            <testing>true</testing>
        </rewrite>

        <!-- Emitted when trying to connect to the database and Oracle is not ready yet -->
        <rewrite class="com.digitalasset.canton.logging.Rewrite">
            <logger>com.zaxxer.hikari.pool.HikariPool</logger>
            <maxLevel>INFO</maxLevel>
            <contains>Exception during pool initialization</contains>
            <testing>true</testing>
        </rewrite>

        <!-- Expected warnings that are emitted by grpc itself; used for GrpcConnectionErrorsIntegrationTest -->
        <rewrite class="com.digitalasset.canton.logging.Rewrite">
            <logger>
                io.grpc.internal.ManagedChannelImpl
            </logger>
            <contains>Failed to resolve name.</contains>
            <maxLevel>INFO</maxLevel>
            <testing>true</testing>
        </rewrite>

        <rewrite class="com.digitalasset.canton.logging.Rewrite">
            <logger>io.grpc.internal.SerializingExecutor</logger>
            <exceptionMessage>test exception</exceptionMessage>
            <maxLevel>INFO</maxLevel>
            <testing>true</testing>
        </rewrite>
        <rewrite class="com.digitalasset.canton.logging.Rewrite">
            <logger>com.daml.jwt.HMAC256Verifier$</logger>
            <contains>HMAC256 JWT Validator is NOT recommended for production environments</contains>
            <maxLevel>INFO</maxLevel>
            <testing>true</testing>
        </rewrite>
        <rewrite class="com.digitalasset.canton.logging.Rewrite">
            <logger>com.digitalasset.canton.platform.store.FlywayMigrations</logger>
            <contains>Asked to migrate-on-empty-schema</contains>
            <maxLevel>INFO</maxLevel>
            <testing>true</testing>
        </rewrite>
        <!-- Expected errors in negative pruning tests in attempts querying pruned state against append-only schema -->
        <rewrite class="com.digitalasset.canton.logging.Rewrite">
            <logger>com.digitalasset.canton.platform.store.appendonlydao.DbDispatcher</logger>
            <contains>Exception while executing SQL query. Rolled back.</contains>
            <exceptionMessage>pruned offset</exceptionMessage>
            <maxLevel>INFO</maxLevel>
            <testing>true</testing>
        </rewrite>

        <!-- Parallel indexer on Oracle-based conformance tests runs into Oracle-upsert race.
             The problem should only occur when storing packages.
             However, we can't restrict the rule to the packages table, because the error message does not mention the affected table.

             Since the rules are rather broad, it is applied during testing only.

             The rules should be removed once https://digitalasset.atlassian.net/browse/DPP-562 is done.
        -->
        <rewrite class="com.digitalasset.canton.logging.Rewrite">
            <logger>com.digitalasset.canton.platform.indexer.RecoveringIndexer</logger>
            <contains>Error while running indexer, restart scheduled</contains>
            <maxLevel>INFO</maxLevel>
            <testing>true</testing>
        </rewrite>
        <rewrite class="com.digitalasset.canton.logging.Rewrite"> <!-- version for Oracle -->
            <logger>com.digitalasset.canton.platform.store.appendonlydao.DbDispatcher</logger>
            <contains>Processing the request failed due to a non-transient database error: ORA-00001: unique constraint</contains>
            <exceptionMessage>ORA-00001: unique constraint</exceptionMessage>
            <maxLevel>INFO</maxLevel>
            <testing>true</testing>
        </rewrite>
        <rewrite class="com.digitalasset.canton.logging.Rewrite"> <!-- version for H2 -->
            <logger>com.digitalasset.canton.platform.store.appendonlydao.DbDispatcher</logger>
            <contains>Processing the request failed due to a non-transient database error: Unique index or primary key violation</contains>
            <exceptionMessage>Unique index or primary key violation</exceptionMessage>
            <maxLevel>INFO</maxLevel>
            <testing>true</testing>
        </rewrite>

        <rewrite class="com.digitalasset.canton.logging.Rewrite">
            <logger>com.digitalasset.canton.integration.tests.LoggingXIntegrationTestDefault</logger>
            <maxLevel>INFO</maxLevel>
            <testing>true</testing>
        </rewrite>

        <!-- Negative testing of invalid ledger-api jwt token in
             MultipleAuthServicesIntegrationTest: UNAUTHENTICATED(6,0): The command is missing a JWT token
             SecuredApisIntegrationTest: PERMISSION_DENIED(7,0): Claims do not authorize to act as party
        -->
        <rewrite class="com.digitalasset.canton.logging.Rewrite">
            <logger>com.digitalasset.canton.ledger.api.auth.Authorizer</logger>
            <maxLevel>INFO</maxLevel>
            <testing>true</testing>
        </rewrite>

        <!-- Some tests in CompletionStreamAuthIT log
             PERMISSION_DENIED(7,0): Claims were valid until 2023-04-27T11:47:43Z, current time is 2023-04-27T11:47:44.532146Z
        -->
        <rewrite class="com.digitalasset.canton.logging.Rewrite">
            <logger>com.digitalasset.canton.ledger.api.auth.OngoingAuthorizationObserver</logger>
            <maxLevel>INFO</maxLevel>
            <testing>true</testing>
        </rewrite>

        <!-- Disable warnings about use of divulged contracts.
             We can remove this rule once we have migrated to disclosence.
        -->
        <rewrite class="com.digitalasset.canton.logging.Rewrite">
            <logger>daml.warnings</logger>
            <contains>Use of divulged contracts is deprecated and incompatible with pruning.</contains>
            <maxLevel>INFO</maxLevel>
            <testing>true</testing>
        </rewrite>

        <!-- TODO(i10394) upstream sequencing actor does throw on shutdown -->
        <rewrite class="com.digitalasset.canton.logging.Rewrite">
            <logger>com.daml.grpc.adapter.RunnableSequencingActor</logger>
            <maxLevel>INFO</maxLevel>
            <contains>Unexpected exception while executing</contains>
            <testing>true</testing>
        </rewrite>

        <!-- Disable warnings about leaked connections for test containers
             See: https://github.com/testcontainers/testcontainers-java/issues/2209
        -->
        <rewrite class="com.digitalasset.canton.logging.Rewrite">
            <logger>org.testcontainers.shaded.okhttp3.OkHttpClient</logger>
            <maxLevel>INFO</maxLevel>
            <contains>A connection to http://docker.socket/ was leaked. Did you forget to close a response body?</contains>
            <testing>true</testing>
        </rewrite>

        <!-- Disable warning related to image pulling for testcontainers (data continuity tests) -->
        <rewrite class="com.digitalasset.canton.logging.Rewrite">
            <logger>🐳 [postgres:11]</logger>
            <maxLevel>INFO</maxLevel>
            <contains>Retrying pull for image: postgres</contains>
            <testing>true</testing>
        </rewrite>
        <rewrite class="com.digitalasset.canton.logging.Rewrite">
            <logger>🐳 [postgres:11]</logger>
            <maxLevel>INFO</maxLevel>
            <contains>Docker image pull has not made progress in</contains>
            <testing>true</testing>
        </rewrite>

        <!-- config validations don't support log suppression in tests as they use the root logger -->
        <rewrite class="com.digitalasset.canton.logging.Rewrite">
            <logger>com.digitalasset.canton.config.CommunityConfigValidations$</logger>
            <maxLevel>INFO</maxLevel>
            <contains>DEPRECATED_PROTOCOL_VERSION</contains>
            <testing>true</testing>
        </rewrite>

        <!-- The enterprise sequencer client supports connecting to multiple sequencer nodes using
             round robin load balancing with health checks as a basis for failover. If some of the sequencer
             nodes are running an older version without the health check service on, things will still work fine
             as explained here: https://github.com/grpc/proposal/blob/master/A17-client-side-health-checking.md?plain=1#L141-L147
             However an error message will be printed which we can safely suppress.
         -->
        <rewrite class="com.digitalasset.canton.logging.Rewrite">
            <logger>io.grpc.protobuf.services.HealthCheckingLoadBalancerFactory</logger>
            <contains>UNIMPLEMENTED</contains>
            <maxLevel>INFO</maxLevel>
        </rewrite>

        <!-- grpc "Half-closed without a request" grpc shutdown flake - might be when client hangs up before server response? https://github.com/grpc/grpc-java/issues/4890
             reported by daml-repo ErrorInterceptor/ErrorListener added with daml 2.0.0-snapshot.20211220
             Can probably be removed once https://github.com/digital-asset/daml/issues/13413 is fixed. -->
        <rewrite class="com.digitalasset.canton.logging.Rewrite">
            <logger>com.digitalasset.canton.platform.apiserver.error.ErrorInterceptor</logger>
            <contains>LEDGER_API_INTERNAL_ERROR</contains>
            <exceptionMessage>Half-closed without a request</exceptionMessage>
            <maxLevel>INFO</maxLevel>
            <testing>true</testing>
        </rewrite>

        <!-- shutdown issues in ledger-api server TODO(#11534) -->
        <rewrite class="com.digitalasset.canton.logging.Rewrite">
            <logger>com.digitalasset.canton.platform.apiserver.error.ErrorInterceptor</logger>
            <contains>LEDGER_API_INTERNAL_ERROR</contains>
            <exceptionMessage>INTERNAL: Task com.codahale.metrics</exceptionMessage>
            <maxLevel>INFO</maxLevel>
            <testing>true</testing>
        </rewrite>

        <!-- This may sometimes lead to subsequent errors (e.g. api server fails to startup), but quite often it can simply be ignored. Matches both lines here:
               Trying to gather entropy from the underlying operating system to initialized the contract ID seeding, but the entropy pool seems empty.
               In CI environments environment consider using the "testing-weak" mode, that may produce insecure contract IDs but does not block on startup. -->
        <rewrite class="com.digitalasset.canton.logging.Rewrite">
            <logger>com.digitalasset.canton.platform.apiserver.SeedService$</logger>
            <contains>contract ID</contains>
            <maxLevel>INFO</maxLevel>
            <testing>true</testing>
        </rewrite>

        <!-- Suppress execution context monitor warnings during tests -->
        <rewrite class="com.digitalasset.canton.logging.Rewrite">
            <logger>com.digitalasset.canton.concurrent.ExecutionContextMonitor</logger>
            <contains></contains>
            <maxLevel>INFO</maxLevel>
            <testing>true</testing>
        </rewrite>
        <!-- Suppress delay logger during tests -->
        <rewrite class="com.digitalasset.canton.logging.Rewrite">
            <logger>com.digitalasset.canton.participant.sync.SyncDomain</logger>
            <contains>Late processing (or clock skew) of batch with counter</contains>
            <maxLevel>INFO</maxLevel>
            <testing>true</testing>
        </rewrite>
        <rewrite class="com.digitalasset.canton.logging.Rewrite">
            <logger>com.digitalasset.canton.domain.mediator.Mediator</logger>
            <contains>Late processing (or clock skew) of batch with counter</contains>
            <maxLevel>INFO</maxLevel>
            <testing>true</testing>
        </rewrite>

        <!-- TODO(#13107): Clock/InstrumentedExecutorServiceMetrics do not yet support FlagCloseable -->
        <rewrite class="com.digitalasset.canton.logging.Rewrite">
            <logger>com.digitalasset.canton.time.TimeProofRequestSubmitterImpl</logger>
            <exceptionMessage>java.util.concurrent.RejectedExecutionException: null</exceptionMessage>
            <maxLevel>INFO</maxLevel>
            <testing>true</testing>
        </rewrite>
        <!-- Suppress ACS commitment processor catch-up degradation warnings in ledger API tests that might throw -->
        <rewrite class="com.digitalasset.canton.logging.Rewrite">
            <logger>com.digitalasset.canton.participant.pruning.AcsCommitmentProcessor:LedgerApiParticipantPruningConformanceTestPostgres</logger>
            <contains>ACS_COMMITMENT_DEGRADATION</contains>
            <maxLevel>INFO</maxLevel>
            <testing>true</testing>
        </rewrite>
        <!-- Suppress ACS commitment processor catch-up degradation warnings in ledger API tests that might throw -->
        <rewrite class="com.digitalasset.canton.logging.Rewrite">
            <logger>com.digitalasset.canton.participant.pruning.AcsCommitmentProcessor:LedgerApiShard0ConformanceTestPostgres</logger>
            <contains>ACS_COMMITMENT_DEGRADATION</contains>
            <maxLevel>INFO</maxLevel>
            <testing>true</testing>
        </rewrite>
        <!-- Suppress ACS commitment processor catch-up degradation warnings in ledger API tests that might throw -->
        <rewrite class="com.digitalasset.canton.logging.Rewrite">
            <logger>com.digitalasset.canton.participant.pruning.AcsCommitmentProcessor:LedgerApiShard1ConformanceTestPostgres</logger>
            <contains>ACS_COMMITMENT_DEGRADATION</contains>
            <maxLevel>INFO</maxLevel>
            <testing>true</testing>
        </rewrite>
        <!-- Suppress ACS commitment processor catch-up degradation warnings in ledger API tests that might throw -->
        <rewrite class="com.digitalasset.canton.logging.Rewrite">
            <logger>com.digitalasset.canton.participant.pruning.AcsCommitmentProcessor:LedgerApiShard2ConformanceTestPostgres</logger>
            <contains>ACS_COMMITMENT_DEGRADATION</contains>
            <maxLevel>INFO</maxLevel>
            <testing>true</testing>
        </rewrite>
        <!-- Suppress ACS commitment processor catch-up degradation warnings in ledger API tests that might throw -->
        <rewrite class="com.digitalasset.canton.logging.Rewrite">
            <logger>com.digitalasset.canton.participant.pruning.AcsCommitmentProcessor:LedgerApiConformanceV1_15Postgres</logger>
            <contains>ACS_COMMITMENT_DEGRADATION</contains>
            <maxLevel>INFO</maxLevel>
            <testing>true</testing>
        </rewrite>
        <!-- Suppress ACS commitment processor catch-up degradation warnings in ledger API tests that might throw -->
        <rewrite class="com.digitalasset.canton.logging.Rewrite">
            <logger>com.digitalasset.canton.participant.pruning.AcsCommitmentProcessor:LedgerApiInMemoryFanOutConformanceTest</logger>
            <contains>ACS_COMMITMENT_DEGRADATION</contains>
            <maxLevel>INFO</maxLevel>
            <testing>true</testing>
        </rewrite>
        <!-- Suppress ACS commitment processor catch-up degradation warnings in ledger API tests that might throw -->
        <rewrite class="com.digitalasset.canton.logging.Rewrite">
            <logger>com.digitalasset.canton.participant.pruning.AcsCommitmentProcessor:LedgerApiTinyBuffersConformanceTestPostgres</logger>
            <contains>ACS_COMMITMENT_DEGRADATION</contains>
            <maxLevel>INFO</maxLevel>
            <testing>true</testing>
        </rewrite>
        <!-- Suppress ACS commitment processor catch-up degradation warnings in ledger API tests that might throw -->
        <rewrite class="com.digitalasset.canton.logging.Rewrite">
            <logger>com.digitalasset.canton.participant.pruning.AcsCommitmentProcessor:LedgerApiCachesDisabledConformanceTestPostgres</logger>
            <contains>ACS_COMMITMENT_DEGRADATION</contains>
            <maxLevel>INFO</maxLevel>
            <testing>true</testing>
        </rewrite>
        <!-- Suppress ACS commitment processor catch-up degradation warnings in ledger API tests that might throw -->
        <rewrite class="com.digitalasset.canton.logging.Rewrite">
            <logger>com.digitalasset.canton.participant.pruning.AcsCommitmentProcessor:LedgerApiStaticTimeConformanceTestPostgres</logger>
            <contains>ACS_COMMITMENT_DEGRADATION</contains>
            <maxLevel>INFO</maxLevel>
            <testing>true</testing>
        </rewrite>
        <!-- Suppress ACS commitment processor catch-up degradation warnings in ledger API tests that might throw -->
        <rewrite class="com.digitalasset.canton.logging.Rewrite">
            <logger>com.digitalasset.canton.participant.pruning.AcsCommitmentProcessor:LedgerApiParticipantPruningConformanceTest</logger>
            <contains>ACS_COMMITMENT_DEGRADATION</contains>
            <maxLevel>INFO</maxLevel>
            <testing>true</testing>
        </rewrite>
        <!-- Suppress ACS commitment processor catch-up degradation warnings in ledger API tests that might throw -->
        <rewrite class="com.digitalasset.canton.logging.Rewrite">
            <logger>com.digitalasset.canton.participant.pruning.AcsCommitmentProcessor:LedgerApiConformanceEventByKeyCachedTestPostgres</logger>
            <contains>ACS_COMMITMENT_DEGRADATION</contains>
            <maxLevel>INFO</maxLevel>
            <testing>true</testing>
        </rewrite>
        <!-- Suppress ACS commitment processor catch-up degradation warnings in ledger API tests that might throw -->
        <rewrite class="com.digitalasset.canton.logging.Rewrite">
            <logger>com.digitalasset.canton.participant.pruning.AcsCommitmentProcessor:LedgerApiConformanceSuppressedLogsPostgres</logger>
            <contains>ACS_COMMITMENT_DEGRADATION</contains>
            <maxLevel>INFO</maxLevel>
            <testing>true</testing>
        </rewrite>
        <!-- Suppress ACS commitment processor catch-up degradation warnings in ledger API tests that might throw -->
        <rewrite class="com.digitalasset.canton.logging.Rewrite">
            <logger>com.digitalasset.canton.participant.pruning.AcsCommitmentProcessor:LedgerApiContractKeyConformanceTestPostgres</logger>
            <contains>ACS_COMMITMENT_DEGRADATION</contains>
            <maxLevel>INFO</maxLevel>
            <testing>true</testing>
        </rewrite>
        <!-- Suppress ACS commitment processor catch-up degradation warnings in ledger API tests that might throw -->
        <rewrite class="com.digitalasset.canton.logging.Rewrite">
            <logger>com.digitalasset.canton.participant.pruning.AcsCommitmentProcessor:LedgerApiContractKeyConformanceTestPostgres</logger>
            <contains>ACS_COMMITMENT_DEGRADATION</contains>
            <maxLevel>INFO</maxLevel>
            <testing>true</testing>
        </rewrite>
        <!-- Suppress ACS commitment processor catch-up degradation warnings in ledger API tests that might throw -->
        <rewrite class="com.digitalasset.canton.logging.Rewrite">
            <logger>com.digitalasset.canton.participant.pruning.AcsCommitmentProcessor:DemoExampleReferenceIntegrationTest</logger>
            <contains>ACS_COMMITMENT_DEGRADATION</contains>
            <maxLevel>INFO</maxLevel>
            <testing>true</testing>
        </rewrite>
        <!-- Suppress ACS commitment processor catch-up degradation warnings in ledger API tests that might throw -->
        <rewrite class="com.digitalasset.canton.logging.Rewrite">
            <logger>com.digitalasset.canton.participant.pruning.AcsCommitmentProcessor:LedgerApiExperimentalConformanceTest_Postgres</logger>
            <contains>ACS_COMMITMENT_DEGRADATION</contains>
            <maxLevel>INFO</maxLevel>
            <testing>true</testing>
        </rewrite>
   </appender>
</included>
