-- Hoogle documentation for Daml, generated by damlc
-- See Hoogle, http://www.haskell.org/hoogle/

-- Copyright (c) 2025 Digital Asset (Switzerland) GmbH and/or its affiliates.
-- All rights reserved. Any unauthorized use, duplication or distribution is strictly prohibited.

-- | Daml Script library.
-- This is the Daml 3 version of the Daml-Script library. It is not compatible with scripts compiled using `daml-script` before Daml 3.3.
-- Scripts compiled with `daml3-script` before this time are still compatible.
@url https://docs.daml.com/daml-script/api/
@package daml-script
@version 3.0.0

-- | The Daml Script testing library
@url https://docs.daml.com/daml-script/api/Daml-Script.html#module-daml-script-55737
module Daml.Script

-- | Thrown if text for a user identifier does not conform to the format restriction.
@url https://docs.daml.com/daml-script/api/Daml-Script.html#type-daml-script-internal-questions-usermanagement-invaliduserid-35585
data InvalidUserId

@url https://docs.daml.com/daml-script/api/Daml-Script.html#constr-daml-script-internal-questions-usermanagement-invaliduserid-47622
InvalidUserId :: Text -> InvalidUserId

m :: InvalidUserId -> Text

-- | User-info record for a user in the user management service.
@url https://docs.daml.com/daml-script/api/Daml-Script.html#type-daml-script-internal-questions-usermanagement-user-21930
data User

@url https://docs.daml.com/daml-script/api/Daml-Script.html#constr-daml-script-internal-questions-usermanagement-user-51383
User :: UserId -> Optional Party -> User

userId :: User -> UserId

primaryParty :: User -> Optional Party

-- | Thrown if a user to be created already exists.
@url https://docs.daml.com/daml-script/api/Daml-Script.html#type-daml-script-internal-questions-usermanagement-useralreadyexists-98333
data UserAlreadyExists

@url https://docs.daml.com/daml-script/api/Daml-Script.html#constr-daml-script-internal-questions-usermanagement-useralreadyexists-40670
UserAlreadyExists :: UserId -> UserAlreadyExists

userId :: UserAlreadyExists -> UserId

-- | Identifier for a user in the user management service.
@url https://docs.daml.com/daml-script/api/Daml-Script.html#type-daml-script-internal-questions-usermanagement-userid-11123
data UserId

@url https://docs.daml.com/daml-script/api/Daml-Script.html#constr-daml-script-internal-questions-usermanagement-userid-52094
UserId :: Text -> UserId

-- | Thrown if a user cannot be located for a given user identifier.
@url https://docs.daml.com/daml-script/api/Daml-Script.html#type-daml-script-internal-questions-usermanagement-usernotfound-44479
data UserNotFound

@url https://docs.daml.com/daml-script/api/Daml-Script.html#constr-daml-script-internal-questions-usermanagement-usernotfound-26338
UserNotFound :: UserId -> UserNotFound

userId :: UserNotFound -> UserId

-- | The rights of a user.
@url https://docs.daml.com/daml-script/api/Daml-Script.html#type-daml-script-internal-questions-usermanagement-userright-13475
data UserRight

@url https://docs.daml.com/daml-script/api/Daml-Script.html#constr-daml-script-internal-questions-usermanagement-participantadmin-36398
ParticipantAdmin :: UserRight

@url https://docs.daml.com/daml-script/api/Daml-Script.html#constr-daml-script-internal-questions-usermanagement-canactas-78256
CanActAs :: Party -> UserRight

@url https://docs.daml.com/daml-script/api/Daml-Script.html#constr-daml-script-internal-questions-usermanagement-canreadas-21035
CanReadAs :: Party -> UserRight

@url https://docs.daml.com/daml-script/api/Daml-Script.html#constr-daml-script-internal-questions-usermanagement-canreadasanyparty-13813
CanReadAsAnyParty :: UserRight

-- | Applicative that allows for multiple concurrent transaction submissions
--   See `concurrently` for usage of this type.
@url https://docs.daml.com/daml-script/api/Daml-Script.html#type-daml-script-internal-questions-submit-concurrentsubmits-82688
data ConcurrentSubmits a

@url https://docs.daml.com/daml-script/api/Daml-Script.html#constr-daml-script-internal-questions-submit-concurrentsubmits-49827
ConcurrentSubmits :: [Submission] -> ([Either SubmitError ([CommandResult], TransactionTree)] -> a) -> ConcurrentSubmits

submits :: ConcurrentSubmits -> [Submission]

continue :: ConcurrentSubmits -> [Either SubmitError ([CommandResult], TransactionTree)] -> a

-- | Package-id newtype for package preference
@url https://docs.daml.com/daml-script/api/Daml-Script.html#type-daml-script-internal-questions-submit-packageid-95921
data PackageId

@url https://docs.daml.com/daml-script/api/Daml-Script.html#constr-daml-script-internal-questions-submit-packageid-38878
PackageId :: Text -> PackageId

-- | Options to detemine the stakeholders of a transaction, as well as disclosures.
--   Intended to be specified using the `actAs`, `readAs` and `disclose` builders, combined using the Semigroup concat `(<>)` operator.
--   ```
--   actAs alice <> readAs [alice, bob] <> disclose myContract
--   ```
--   Note that actAs and readAs follows the same party derivation rules as `signatory`, see their docs for examples.
--   All submissions must specify at least one `actAs` party, else a runtime error will be thrown.
--   A minimum submission may look like
--   ```
--   submit (actAs alice) $ createCmd MyContract with party = alice
--   ```
@url https://docs.daml.com/daml-script/api/Daml-Script.html#type-daml-script-internal-questions-submit-submitoptions-56692
data SubmitOptions

@url https://docs.daml.com/daml-script/api/Daml-Script.html#constr-daml-script-internal-questions-submit-submitoptions-37975
SubmitOptions :: [Party] -> [Party] -> [Disclosure] -> Optional [PackageId] -> [AnyContractKey] -> SubmitOptions

soActAs :: SubmitOptions -> [Party]

soReadAs :: SubmitOptions -> [Party]

soDisclosures :: SubmitOptions -> [Disclosure]

soPackagePreference :: SubmitOptions -> Optional [PackageId]

soPrefetchKeys :: SubmitOptions -> [AnyContractKey]

@url https://docs.daml.com/daml-script/api/Daml-Script.html#type-daml-script-internal-questions-submit-error-cryptoerrortype-71749
data CryptoErrorType

@url https://docs.daml.com/daml-script/api/Daml-Script.html#constr-daml-script-internal-questions-submit-error-malformedbyteencoding-79193
MalformedByteEncoding :: Text -> CryptoErrorType

value :: CryptoErrorType -> Text

@url https://docs.daml.com/daml-script/api/Daml-Script.html#constr-daml-script-internal-questions-submit-error-malformedkey-58536
MalformedKey :: Text -> CryptoErrorType

keyValue :: CryptoErrorType -> Text

@url https://docs.daml.com/daml-script/api/Daml-Script.html#constr-daml-script-internal-questions-submit-error-malformedsignature-13573
MalformedSignature :: Text -> CryptoErrorType

signatureValue :: CryptoErrorType -> Text

@url https://docs.daml.com/daml-script/api/Daml-Script.html#constr-daml-script-internal-questions-submit-error-malformedcontractid-56895
MalformedContractId :: Text -> CryptoErrorType

contractIdValue :: CryptoErrorType -> Text

-- | Errors that can be thrown by a command submission - code needs to be kept in sync with SubmitError.scala
@url https://docs.daml.com/daml-script/api/Daml-Script.html#type-daml-script-internal-questions-submit-error-submiterror-38284
data SubmitError

-- | Contract with given contract ID could not be found, and has never existed on this participant
--   When run on Canton, there may be more than one contract ID, and additionalDebuggingInfo is always None
--   On the other hand, when run on IDELedger, there is only ever one contract ID, and additionalDebuggingInfo is always Some
@url https://docs.daml.com/daml-script/api/Daml-Script.html#constr-daml-script-internal-questions-submit-error-contractnotfound-62819
ContractNotFound :: NonEmpty Text -> Optional ContractNotFoundAdditionalInfo -> SubmitError

-- | Provided as text, as we do not know the template ID of a contract if the lookup fails
unknownContractIds :: SubmitError -> NonEmpty Text

-- | should always be None in Canton's case, see https://github.com/digital-asset/daml/issues/17154
additionalDebuggingInfo :: SubmitError -> Optional ContractNotFoundAdditionalInfo

-- | Contract with given contract key could not be found
@url https://docs.daml.com/daml-script/api/Daml-Script.html#constr-daml-script-internal-questions-submit-error-contractkeynotfound-79659
ContractKeyNotFound :: AnyContractKey -> SubmitError

contractKey :: SubmitError -> AnyContractKey

-- | No vetted package with given package name could be found
@url https://docs.daml.com/daml-script/api/Daml-Script.html#constr-daml-script-internal-questions-submit-error-unresolvedpackagename-661
UnresolvedPackageName :: Text -> SubmitError

packageName :: SubmitError -> Text

-- | Generic authorization failure, included missing party authority, invalid signatories, etc.
@url https://docs.daml.com/daml-script/api/Daml-Script.html#constr-daml-script-internal-questions-submit-error-authorizationerror-69757
AuthorizationError :: Text -> SubmitError

authorizationErrorMessage :: SubmitError -> Text

-- | Given disclosed contract key does not match the contract key of the contract on ledger.
@url https://docs.daml.com/daml-script/api/Daml-Script.html#constr-daml-script-internal-questions-submit-error-disclosedcontractkeyhashingerror-69749
DisclosedContractKeyHashingError :: AnyContractId -> AnyContractKey -> Text -> SubmitError

contractId :: SubmitError -> AnyContractId

expectedKey :: SubmitError -> AnyContractKey

givenKeyHash :: SubmitError -> Text

-- | Attempted to create a contract with a contract key that already exists
@url https://docs.daml.com/daml-script/api/Daml-Script.html#constr-daml-script-internal-questions-submit-error-duplicatecontractkey-60422
DuplicateContractKey :: Optional AnyContractKey -> SubmitError

-- | Canton will often not provide this key, IDELedger will
duplicateContractKey :: SubmitError -> Optional AnyContractKey

-- | Contract key lookup yielded different results
@url https://docs.daml.com/daml-script/api/Daml-Script.html#constr-daml-script-internal-questions-submit-error-inconsistentcontractkey-74433
InconsistentContractKey :: AnyContractKey -> SubmitError

contractKey :: SubmitError -> AnyContractKey

-- | Unhandled user thrown exception
@url https://docs.daml.com/daml-script/api/Daml-Script.html#constr-daml-script-internal-questions-submit-error-unhandledexception-86682
UnhandledException :: Optional AnyException -> SubmitError

-- | Errors more complex than simple records cannot currently be encoded over the grpc status. Such errors will be missing here.
exc :: SubmitError -> Optional AnyException

-- | Transaction failure due to abort/assert calls pre-exceptions
@url https://docs.daml.com/daml-script/api/Daml-Script.html#constr-daml-script-internal-questions-submit-error-usererror-2902
UserError :: Text -> SubmitError

userErrorMessage :: SubmitError -> Text

-- | Failure due to false result from `ensure`, strictly pre-exception.
--   According to docs, not throwable with LF >= 1.14.
--   On LF >= 1.14, a failed `ensure` will result in a `PreconditionFailed`
--   exception wrapped in `UnhandledException`.
@url https://docs.daml.com/daml-script/api/Daml-Script.html#constr-daml-script-internal-questions-submit-error-templatepreconditionviolated-57506
TemplatePreconditionViolated :: SubmitError

-- | Attempted to create a contract with empty contract key maintainers
@url https://docs.daml.com/daml-script/api/Daml-Script.html#constr-daml-script-internal-questions-submit-error-createemptycontractkeymaintainers-30280
CreateEmptyContractKeyMaintainers :: AnyTemplate -> SubmitError

invalidTemplate :: SubmitError -> AnyTemplate

-- | Attempted to fetch a contract with empty contract key maintainers
@url https://docs.daml.com/daml-script/api/Daml-Script.html#constr-daml-script-internal-questions-submit-error-fetchemptycontractkeymaintainers-19351
FetchEmptyContractKeyMaintainers :: AnyContractKey -> SubmitError

failedTemplateKey :: SubmitError -> AnyContractKey

-- | Attempted to exercise/fetch a contract with the wrong template type
@url https://docs.daml.com/daml-script/api/Daml-Script.html#constr-daml-script-internal-questions-submit-error-wronglytypedcontract-14384
WronglyTypedContract :: AnyContractId -> TemplateTypeRep -> TemplateTypeRep -> SubmitError

-- | Any contract Id of the actual contract
contractId :: SubmitError -> AnyContractId

expectedTemplateId :: SubmitError -> TemplateTypeRep

actualTemplateId :: SubmitError -> TemplateTypeRep

-- | Attempted to use a contract as an interface that it does not implement
@url https://docs.daml.com/daml-script/api/Daml-Script.html#constr-daml-script-internal-questions-submit-error-contractdoesnotimplementinterface-89439
ContractDoesNotImplementInterface :: AnyContractId -> TemplateTypeRep -> TemplateTypeRep -> SubmitError

contractId :: SubmitError -> AnyContractId

templateId :: SubmitError -> TemplateTypeRep

interfaceId :: SubmitError -> TemplateTypeRep

-- | Attempted to use a contract as a required interface that it does not implement
@url https://docs.daml.com/daml-script/api/Daml-Script.html#constr-daml-script-internal-questions-submit-error-contractdoesnotimplementrequiringinterface-51672
ContractDoesNotImplementRequiringInterface :: AnyContractId -> TemplateTypeRep -> TemplateTypeRep -> TemplateTypeRep -> SubmitError

contractId :: SubmitError -> AnyContractId

templateId :: SubmitError -> TemplateTypeRep

requiredInterfaceId :: SubmitError -> TemplateTypeRep

requiringInterfaceId :: SubmitError -> TemplateTypeRep

-- | Attempted to compare values that are not comparable
@url https://docs.daml.com/daml-script/api/Daml-Script.html#constr-daml-script-internal-questions-submit-error-noncomparablevalues-97474
NonComparableValues :: SubmitError

-- | Illegal Contract ID found in Contract Key
@url https://docs.daml.com/daml-script/api/Daml-Script.html#constr-daml-script-internal-questions-submit-error-contractidincontractkey-60542
ContractIdInContractKey :: SubmitError

-- | Attempted to compare incomparable contract IDs. You're doing something very wrong.
--   Two contract IDs with the same prefix are incomparable if one of them is local and the other non-local
--   or if one is relative and the other relative or absolute with a different suffix.
@url https://docs.daml.com/daml-script/api/Daml-Script.html#constr-daml-script-internal-questions-submit-error-contractidcomparability-98492
ContractIdComparability :: Text -> SubmitError

-- | We do not know the template ID at time of comparison.
globalExistingContractId :: SubmitError -> Text

-- | A value has been nested beyond a given depth limit
@url https://docs.daml.com/daml-script/api/Daml-Script.html#constr-daml-script-internal-questions-submit-error-valuenesting-53471
ValueNesting :: Int -> SubmitError

-- | Nesting limit that was exceeded
limit :: SubmitError -> Int

-- | The transaction refers to locked contracts which are in the process of being created, transferred, or
--   archived by another transaction. If the other transaction fails, this transaction could be successfully retried.
@url https://docs.daml.com/daml-script/api/Daml-Script.html#constr-daml-script-internal-questions-submit-error-localverdictlockedcontracts-9414
LocalVerdictLockedContracts :: [AnyContractId] -> SubmitError

-- | Locked contract ids
localVerdictLockedContracts :: SubmitError -> [AnyContractId]

-- | The transaction refers to locked keys which are in the process of being modified by another transaction.
@url https://docs.daml.com/daml-script/api/Daml-Script.html#constr-daml-script-internal-questions-submit-error-localverdictlockedkeys-14824
LocalVerdictLockedKeys :: [AnyContractKey] -> SubmitError

-- | Locked contract keys
localVerdictLockedKeys :: SubmitError -> [AnyContractKey]

-- | Upgrade exception
@url https://docs.daml.com/daml-script/api/Daml-Script.html#constr-daml-script-internal-questions-submit-error-upgradeerror-4562
UpgradeError :: UpgradeErrorType -> Text -> SubmitError

errorType :: SubmitError -> UpgradeErrorType

errorMessage :: SubmitError -> Text

@url https://docs.daml.com/daml-script/api/Daml-Script.html#constr-daml-script-internal-questions-submit-error-failurestatuserror-13880
FailureStatusError :: FailureStatus -> SubmitError

failureStatus :: SubmitError -> FailureStatus

-- | Crypto exceptions
@url https://docs.daml.com/daml-script/api/Daml-Script.html#constr-daml-script-internal-questions-submit-error-cryptoerror-24426
CryptoError :: CryptoErrorType -> Text -> SubmitError

cryptoErrorType :: SubmitError -> CryptoErrorType

cryptoErrorMessage :: SubmitError -> Text

-- | Development feature exceptions
@url https://docs.daml.com/daml-script/api/Daml-Script.html#constr-daml-script-internal-questions-submit-error-deverror-73533
DevError :: DevErrorType -> Text -> SubmitError

devErrorType :: SubmitError -> DevErrorType

devErrorMessage :: SubmitError -> Text

-- | Generic catch-all for missing errors.
@url https://docs.daml.com/daml-script/api/Daml-Script.html#constr-daml-script-internal-questions-submit-error-unknownerror-23808
UnknownError :: Text -> SubmitError

unknownErrorMessage :: SubmitError -> Text

-- | One of the above error types where the full exception body did not fit into the response, and was incomplete.
--   TODO: Should we expose this at all?
@url https://docs.daml.com/daml-script/api/Daml-Script.html#constr-daml-script-internal-questions-submit-error-truncatederror-47926
TruncatedError :: Text -> Text -> SubmitError

-- | One of the constructor names of SubmitFailure except DevError, UnknownError, TruncatedError
truncatedErrorType :: SubmitError -> Text

truncatedErrorMessage :: SubmitError -> Text

@url https://docs.daml.com/daml-script/api/Daml-Script.html#type-daml-script-internal-questions-submit-error-upgradeerrortype-94779
data UpgradeErrorType

@url https://docs.daml.com/daml-script/api/Daml-Script.html#constr-daml-script-internal-questions-submit-error-validationfailed-35370
ValidationFailed :: AnyContractId -> TemplateTypeRep -> TemplateTypeRep -> [Party] -> [Party] -> Optional (AnyContractKey, [Party]) -> UpgradeErrorType

coid :: UpgradeErrorType -> AnyContractId

srcTemplateId :: UpgradeErrorType -> TemplateTypeRep

dstTemplateId :: UpgradeErrorType -> TemplateTypeRep

signatories :: UpgradeErrorType -> [Party]

observers :: UpgradeErrorType -> [Party]

keyOpt :: UpgradeErrorType -> Optional (AnyContractKey, [Party])

@url https://docs.daml.com/daml-script/api/Daml-Script.html#constr-daml-script-internal-questions-submit-error-downgradedropdefinedfield-50092
DowngradeDropDefinedField :: Text -> Int -> UpgradeErrorType

expectedType :: UpgradeErrorType -> Text

fieldIndex :: UpgradeErrorType -> Int

@url https://docs.daml.com/daml-script/api/Daml-Script.html#constr-daml-script-internal-questions-submit-error-downgradefailed-38019
DowngradeFailed :: Text -> UpgradeErrorType

expectedType :: UpgradeErrorType -> Text

@url https://docs.daml.com/daml-script/api/Daml-Script.html#type-daml-script-internal-questions-transactiontree-created-98301
data Created

@url https://docs.daml.com/daml-script/api/Daml-Script.html#constr-daml-script-internal-questions-transactiontree-created-79356
Created :: AnyContractId -> AnyTemplate -> Created

contractId :: Created -> AnyContractId

argument :: Created -> AnyTemplate

@url https://docs.daml.com/daml-script/api/Daml-Script.html#type-daml-script-internal-questions-transactiontree-createdindexpayload-52051
data CreatedIndexPayload t

@url https://docs.daml.com/daml-script/api/Daml-Script.html#constr-daml-script-internal-questions-transactiontree-createdindexpayload-17054
CreatedIndexPayload :: TemplateTypeRep -> Int -> CreatedIndexPayload

templateId :: CreatedIndexPayload -> TemplateTypeRep

offset :: CreatedIndexPayload -> Int

@url https://docs.daml.com/daml-script/api/Daml-Script.html#type-daml-script-internal-questions-transactiontree-exercised-22057
data Exercised

@url https://docs.daml.com/daml-script/api/Daml-Script.html#constr-daml-script-internal-questions-transactiontree-exercised-56388
Exercised :: AnyContractId -> Text -> AnyChoice -> [TreeEvent] -> Exercised

contractId :: Exercised -> AnyContractId

choice :: Exercised -> Text

argument :: Exercised -> AnyChoice

childEvents :: Exercised -> [TreeEvent]

@url https://docs.daml.com/daml-script/api/Daml-Script.html#type-daml-script-internal-questions-transactiontree-exercisedindexpayload-19779
data ExercisedIndexPayload t

@url https://docs.daml.com/daml-script/api/Daml-Script.html#constr-daml-script-internal-questions-transactiontree-exercisedindexpayload-97386
ExercisedIndexPayload :: TemplateTypeRep -> Text -> Int -> TreeIndex t -> ExercisedIndexPayload

templateId :: ExercisedIndexPayload -> TemplateTypeRep

choice :: ExercisedIndexPayload -> Text

offset :: ExercisedIndexPayload -> Int

child :: ExercisedIndexPayload -> TreeIndex t

@url https://docs.daml.com/daml-script/api/Daml-Script.html#type-daml-script-internal-questions-transactiontree-transactiontree-91781
data TransactionTree

@url https://docs.daml.com/daml-script/api/Daml-Script.html#constr-daml-script-internal-questions-transactiontree-transactiontree-56296
TransactionTree :: [TreeEvent] -> TransactionTree

rootEvents :: TransactionTree -> [TreeEvent]

@url https://docs.daml.com/daml-script/api/Daml-Script.html#type-daml-script-internal-questions-transactiontree-treeevent-1267
data TreeEvent

@url https://docs.daml.com/daml-script/api/Daml-Script.html#constr-daml-script-internal-questions-transactiontree-createdevent-60119
CreatedEvent :: Created -> TreeEvent

@url https://docs.daml.com/daml-script/api/Daml-Script.html#constr-daml-script-internal-questions-transactiontree-exercisedevent-2627
ExercisedEvent :: Exercised -> TreeEvent

@url https://docs.daml.com/daml-script/api/Daml-Script.html#type-daml-script-internal-questions-transactiontree-treeindex-21327
data TreeIndex t

@url https://docs.daml.com/daml-script/api/Daml-Script.html#constr-daml-script-internal-questions-transactiontree-createdindex-88223
CreatedIndex :: CreatedIndexPayload t -> TreeIndex

@url https://docs.daml.com/daml-script/api/Daml-Script.html#constr-daml-script-internal-questions-transactiontree-exercisedindex-22399
ExercisedIndex :: ExercisedIndexPayload t -> TreeIndex

@url https://docs.daml.com/daml-script/api/Daml-Script.html#type-daml-script-internal-questions-util-anycontractid-11399
data AnyContractId

@url https://docs.daml.com/daml-script/api/Daml-Script.html#constr-daml-script-internal-questions-util-anycontractid-12200
AnyContractId :: TemplateTypeRep -> ContractId () -> AnyContractId

templateId :: AnyContractId -> TemplateTypeRep

contractId :: AnyContractId -> ContractId ()

@url https://docs.daml.com/daml-script/api/Daml-Script.html#type-daml-script-internal-questions-partymanagement-participantname-88190
data ParticipantName

@url https://docs.daml.com/daml-script/api/Daml-Script.html#constr-daml-script-internal-questions-partymanagement-participantname-13079
ParticipantName :: Text -> ParticipantName

participantName :: ParticipantName -> Text

-- | The party details returned by the party management service.
@url https://docs.daml.com/daml-script/api/Daml-Script.html#type-daml-script-internal-questions-partymanagement-partydetails-4369
data PartyDetails

@url https://docs.daml.com/daml-script/api/Daml-Script.html#constr-daml-script-internal-questions-partymanagement-partydetails-1790
PartyDetails :: Party -> Bool -> PartyDetails

-- | Party id
party :: PartyDetails -> Party

-- | True if party is hosted by the backing participant.
isLocal :: PartyDetails -> Bool

-- | A hint to the backing participant what party id to allocate.
--   Must be a valid PartyIdString (as described in @value.proto@).
@url https://docs.daml.com/daml-script/api/Daml-Script.html#type-daml-script-internal-questions-partymanagement-partyidhint-14540
data PartyIdHint

@url https://docs.daml.com/daml-script/api/Daml-Script.html#constr-daml-script-internal-questions-partymanagement-partyidhint-11617
PartyIdHint :: Text -> PartyIdHint

partyIdHint :: PartyIdHint -> Text

-- | A DER formatted private key to be used for ECDSA message signing
@url https://docs.daml.com/daml-script/api/Daml-Script.html#type-daml-script-internal-questions-crypto-text-privatekeyhex-82732
type PrivateKeyHex = BytesHex

@url https://docs.daml.com/daml-script/api/Daml-Script.html#type-daml-script-internal-questions-crypto-text-secp256k1keypair-9395
data Secp256k1KeyPair

@url https://docs.daml.com/daml-script/api/Daml-Script.html#constr-daml-script-internal-questions-crypto-text-secp256k1keypair-60460
Secp256k1KeyPair :: PrivateKeyHex -> PublicKeyHex -> Secp256k1KeyPair

privateKey :: Secp256k1KeyPair -> PrivateKeyHex

publicKey :: Secp256k1KeyPair -> PublicKeyHex

-- | This is used to build up the commands send as part of `submit`.
--   If you enable the `ApplicativeDo` extension by adding
--   `{-# LANGUAGE ApplicativeDo #-}` at the top of your file, you can
--   use `do`-notation but the individual commands must not depend
--   on each other and the last statement in a `do` block
--   must be of the form ``return expr`` or ``pure expr``.
@url https://docs.daml.com/daml-script/api/Daml-Script.html#type-daml-script-internal-questions-commands-commands-79301
data Commands a

@url https://docs.daml.com/daml-script/api/Daml-Script.html#constr-daml-script-internal-questions-commands-commands-42332
Commands :: [CommandWithMeta] -> ([CommandResult] -> a) -> Commands

commands :: Commands -> [CommandWithMeta]

continue :: Commands -> [CommandResult] -> a

@url https://docs.daml.com/daml-script/api/Daml-Script.html#type-daml-script-internal-questions-commands-disclosure-40298
data Disclosure

@url https://docs.daml.com/daml-script/api/Daml-Script.html#constr-daml-script-internal-questions-commands-disclosure-14083
Disclosure :: TemplateTypeRep -> ContractId () -> Text -> Disclosure

templateId :: Disclosure -> TemplateTypeRep

contractId :: Disclosure -> ContractId ()

blob :: Disclosure -> Text

-- | This is the type of A Daml script. `Script` is an instance of `Action`,
--   so you can use `do` notation.
@url https://docs.daml.com/daml-script/api/Daml-Script.html#type-daml-script-internal-lowlevel-script-4781
data Script a

@url https://docs.daml.com/daml-script/api/Daml-Script.html#constr-daml-script-internal-lowlevel-script-73096
Script :: (() -> Free ScriptF (a, ())) -> () -> Script

-- | HIDE
--   We use an inlined StateT () to separate evaluation of
--   something of type Script from execution and to ensure
--   proper sequencing of evaluation. This is mainly so that `debug` does something
--   slightly more sensible.
runScript :: Script -> () -> Free ScriptF (a, ())

-- | HIDE
--   Dummy field to make sure damlc does not consider this an old-style
--   typeclass.
dummy :: Script -> ()

-- | Defines a type that can be transformed into a SubmitOptions
@url https://docs.daml.com/daml-script/api/Daml-Script.html#class-daml-script-internal-questions-submit-issubmitoptions-64211
class IsSubmitOptions options

@url https://docs.daml.com/daml-script/api/Daml-Script.html#function-daml-script-internal-questions-submit-tosubmitoptions-99319
toSubmitOptions :: (IsSubmitOptions options) => options -> SubmitOptions

-- | Defines an applicative that can run transaction submissions. Usually this is simply `Script`.
@url https://docs.daml.com/daml-script/api/Daml-Script.html#class-daml-script-internal-questions-submit-scriptsubmit-55101
class (Applicative script) => ScriptSubmit script

@url https://docs.daml.com/daml-script/api/Daml-Script.html#function-daml-script-internal-questions-submit-liftsubmission-99954
liftSubmission :: (ScriptSubmit script, HasCallStack) => ConcurrentSubmits a -> script a

-- | Extract the name-text from a user identitifer.
@url https://docs.daml.com/daml-script/api/Daml-Script.html#function-daml-script-internal-questions-usermanagement-useridtotext-75939
userIdToText :: UserId -> Text

-- | Construct a user identifer from text. May throw InvalidUserId.
@url https://docs.daml.com/daml-script/api/Daml-Script.html#function-daml-script-internal-questions-usermanagement-validateuserid-51917
validateUserId :: (HasCallStack) => Text -> Script UserId

-- | Create a user with the given rights. May throw UserAlreadyExists.
@url https://docs.daml.com/daml-script/api/Daml-Script.html#function-daml-script-internal-questions-usermanagement-createuser-37948
createUser :: (HasCallStack) => User -> [UserRight] -> Script ()

-- | Create a user with the given rights on the given participant. May throw UserAlreadyExists.
@url https://docs.daml.com/daml-script/api/Daml-Script.html#function-daml-script-internal-questions-usermanagement-createuseron-3905
createUserOn :: (HasCallStack) => User -> [UserRight] -> ParticipantName -> Script ()

-- | Fetch a user record by user id. May throw UserNotFound.
@url https://docs.daml.com/daml-script/api/Daml-Script.html#function-daml-script-internal-questions-usermanagement-getuser-5077
getUser :: (HasCallStack) => UserId -> Script User

-- | Fetch a user record by user id from the given participant. May throw UserNotFound.
@url https://docs.daml.com/daml-script/api/Daml-Script.html#function-daml-script-internal-questions-usermanagement-getuseron-1968
getUserOn :: (HasCallStack) => UserId -> ParticipantName -> Script User

-- | List all users. This function may make multiple calls to underlying paginated ledger API.
@url https://docs.daml.com/daml-script/api/Daml-Script.html#function-daml-script-internal-questions-usermanagement-listallusers-63416
listAllUsers :: Script [User]

-- | List all users on the given participant. This function may make multiple calls to underlying paginated ledger API.
@url https://docs.daml.com/daml-script/api/Daml-Script.html#function-daml-script-internal-questions-usermanagement-listalluserson-20857
listAllUsersOn :: ParticipantName -> Script [User]

-- | Grant rights to a user. Returns the rights that have been newly granted. May throw UserNotFound.
@url https://docs.daml.com/daml-script/api/Daml-Script.html#function-daml-script-internal-questions-usermanagement-grantuserrights-87478
grantUserRights :: (HasCallStack) => UserId -> [UserRight] -> Script [UserRight]

-- | Grant rights to a user on the given participant. Returns the rights that have been newly granted. May throw UserNotFound.
@url https://docs.daml.com/daml-script/api/Daml-Script.html#function-daml-script-internal-questions-usermanagement-grantuserrightson-91259
grantUserRightsOn :: (HasCallStack) => UserId -> [UserRight] -> ParticipantName -> Script [UserRight]

-- | Revoke rights for a user. Returns the revoked rights. May throw UserNotFound.
@url https://docs.daml.com/daml-script/api/Daml-Script.html#function-daml-script-internal-questions-usermanagement-revokeuserrights-85325
revokeUserRights :: (HasCallStack) => UserId -> [UserRight] -> Script [UserRight]

-- | Revoke rights for a user on the given participant. Returns the revoked rights. May throw UserNotFound.
@url https://docs.daml.com/daml-script/api/Daml-Script.html#function-daml-script-internal-questions-usermanagement-revokeuserrightson-21608
revokeUserRightsOn :: (HasCallStack) => UserId -> [UserRight] -> ParticipantName -> Script [UserRight]

-- | Delete a user. May throw UserNotFound.
@url https://docs.daml.com/daml-script/api/Daml-Script.html#function-daml-script-internal-questions-usermanagement-deleteuser-2585
deleteUser :: (HasCallStack) => UserId -> Script ()

-- | Delete a user on the given participant. May throw UserNotFound.
@url https://docs.daml.com/daml-script/api/Daml-Script.html#function-daml-script-internal-questions-usermanagement-deleteuseron-74248
deleteUserOn :: (HasCallStack) => UserId -> ParticipantName -> Script ()

-- | List the rights of a user. May throw UserNotFound.
@url https://docs.daml.com/daml-script/api/Daml-Script.html#function-daml-script-internal-questions-usermanagement-listuserrights-50525
listUserRights :: (HasCallStack) => UserId -> Script [UserRight]

-- | List the rights of a user on the given participant. May throw UserNotFound.
@url https://docs.daml.com/daml-script/api/Daml-Script.html#function-daml-script-internal-questions-usermanagement-listuserrightson-11796
listUserRightsOn :: (HasCallStack) => UserId -> ParticipantName -> Script [UserRight]

-- | Submit the commands with the actAs and readAs claims granted to a user. May throw UserNotFound.
@url https://docs.daml.com/daml-script/api/Daml-Script.html#function-daml-script-internal-questions-usermanagement-submituser-29476
submitUser :: (HasCallStack) => UserId -> Commands a -> Script a

-- | Submit the commands with the actAs and readAs claims granted to the user on the given participant. May throw UserNotFound.
@url https://docs.daml.com/daml-script/api/Daml-Script.html#function-daml-script-internal-questions-usermanagement-submituseron-39337
submitUserOn :: (HasCallStack) => UserId -> ParticipantName -> Commands a -> Script a

-- | Set the time via the time service.
--   
--   This is only supported in Daml Studio and `daml test` as well as
--   when running over the gRPC API against a ledger in static time mode.
--   
--   Note that the ledger time service does not support going backwards in time.
--   However, you can go back in time in Daml Studio.
@url https://docs.daml.com/daml-script/api/Daml-Script.html#function-daml-script-internal-questions-time-settime-32330
setTime :: (HasCallStack) => Time -> Script ()

-- | Sleep for the given duration.
--   
--   This is primarily useful in tests
--   where you repeatedly call `query` until a certain state is reached.
--   
--   Note that this will sleep for the same duration in both wall clock and static time mode.
@url https://docs.daml.com/daml-script/api/Daml-Script.html#function-daml-script-internal-questions-time-sleep-58882
sleep :: (HasCallStack) => RelTime -> Script ()

-- | Advance ledger time by the given interval.
--   
--   This is only supported in Daml Studio and `daml test` as well as
--   when running over the gRPC API against a ledger in static time mode.
--   Note that this is not an atomic operation over the
--   gRPC API so no other clients should try to change time while this is
--   running.
--   
--   Note that the ledger time service does not support going backwards in time.
--   However, you can go back in time in Daml Studio.
@url https://docs.daml.com/daml-script/api/Daml-Script.html#function-daml-script-internal-questions-time-passtime-50024
passTime :: RelTime -> Script ()

-- | Builds a SubmitOptions with given actAs parties.
--   Any given submission must include at least one actAs party.
--   Note that the parties type is constrainted by `IsParties`, allowing for specifying parties as any of the following:
--   ```
--   Party
--   [Party]
--   NonEmpty Party
--   Set Party
--   Optional Party
--   ```
@url https://docs.daml.com/daml-script/api/Daml-Script.html#function-daml-script-internal-questions-submit-actas-76494
actAs :: (IsParties parties) => parties -> SubmitOptions

-- | Builds a SubmitOptions with given readAs parties.
--   A given submission may omit any readAs parties and still be valid.
--   Note that the parties type is constrainted by `IsParties`, allowing for specifying parties as any of the following:
--   ```
--   Party
--   [Party]
--   NonEmpty Party
--   Set Party
--   Optional Party
--   ```
@url https://docs.daml.com/daml-script/api/Daml-Script.html#function-daml-script-internal-questions-submit-readas-67481
readAs :: (IsParties parties) => parties -> SubmitOptions

-- | Provides many Explicit Disclosures to the transaction.
@url https://docs.daml.com/daml-script/api/Daml-Script.html#function-daml-script-internal-questions-submit-disclosemany-53386
discloseMany :: [Disclosure] -> SubmitOptions

-- | Provides an Explicit Disclosure to the transaction.
@url https://docs.daml.com/daml-script/api/Daml-Script.html#function-daml-script-internal-questions-submit-disclose-59895
disclose :: Disclosure -> SubmitOptions

-- | Provide a package id selection preference for upgrades for a submission
@url https://docs.daml.com/daml-script/api/Daml-Script.html#function-daml-script-internal-questions-submit-packagepreference-25445
packagePreference :: [PackageId] -> SubmitOptions

-- | Provide a list of contract keys to prefetch for a submission
@url https://docs.daml.com/daml-script/api/Daml-Script.html#function-daml-script-internal-questions-submit-prefetchkeys-84998
prefetchKeys :: [AnyContractKey] -> SubmitOptions

-- | Allows for concurrent submission of transactions, using an applicative, similar to Commands.
--   Concurrently takes a computation in `ConcurrentSubmits`, which supports all the existing `submit` functions
--   that `Script` supports. It however does not implement `Action`, and thus does not support true binding and computation interdependence
--   NOTE: The submission order of transactions within `concurrently` is deterministic, this function is not intended to test contention.
--   It is only intended to allow faster submission of many unrelated transactions, by not waiting for completion for each transaction before
--   sending the next.
--   Example:
--   ```
--   exerciseResult <- concurrently $ do
--     alice `submit` createCmd ...
--     res <- alice `submit` exerciseCmd ...
--     bob `submit` createCmd ...
--     pure res
--   ```
@url https://docs.daml.com/daml-script/api/Daml-Script.html#function-daml-script-internal-questions-submit-concurrently-75077
concurrently :: (HasCallStack) => ConcurrentSubmits a -> Script a

-- | Equivalent to `submit` but returns the result and the full transaction tree.
@url https://docs.daml.com/daml-script/api/Daml-Script.html#function-daml-script-internal-questions-submit-submitresultandtree-13546
submitResultAndTree :: (HasCallStack, ScriptSubmit script, IsSubmitOptions options) => options -> Commands a -> script (a, TransactionTree)

-- | Equivalent to `trySubmit` but returns the result and the full transaction tree.
@url https://docs.daml.com/daml-script/api/Daml-Script.html#function-daml-script-internal-questions-submit-trysubmitresultandtree-33682
trySubmitResultAndTree :: (HasCallStack, ScriptSubmit script, IsSubmitOptions options) => options -> Commands a -> script (Either SubmitError (a, TransactionTree))

-- | Equivalent to `submitMustFail` but returns the error thrown.
@url https://docs.daml.com/daml-script/api/Daml-Script.html#function-daml-script-internal-questions-submit-submitwitherror-52958
submitWithError :: (HasCallStack, ScriptSubmit script, IsSubmitOptions options) => options -> Commands a -> script SubmitError

-- | `submit p cmds` submits the commands `cmds` as a single transaction
--   from party `p` and returns the value returned by `cmds`.
--   The `options` field can either be any "Parties" like type (See `IsParties`) or `SubmitOptions`
--   which allows for finer control over parameters of the submission.
--   
--   If the transaction fails, `submit` also fails.
@url https://docs.daml.com/daml-script/api/Daml-Script.html#function-daml-script-internal-questions-submit-submit-5889
submit :: (HasCallStack, ScriptSubmit script, IsSubmitOptions options) => options -> Commands a -> script a

-- | DEPRECATED: Daml 2.9 compatibility helper, use 'submit' instead
@url https://docs.daml.com/daml-script/api/Daml-Script.html#function-daml-script-internal-questions-submit-submitwithoptions-56152
submitWithOptions :: (HasCallStack, ScriptSubmit script, IsSubmitOptions options) => options -> Commands a -> script a

-- | Equivalent to `submit` but returns the full transaction tree.
@url https://docs.daml.com/daml-script/api/Daml-Script.html#function-daml-script-internal-questions-submit-submittree-5925
submitTree :: (HasCallStack, ScriptSubmit script, IsSubmitOptions options) => options -> Commands a -> script TransactionTree

-- | Submit a transaction and recieve back either the result, or a `SubmitError`.
--   In the majority of failures, this will not crash at runtime.
@url https://docs.daml.com/daml-script/api/Daml-Script.html#function-daml-script-internal-questions-submit-trysubmit-23693
trySubmit :: (HasCallStack, ScriptSubmit script, IsSubmitOptions options) => options -> Commands a -> script (Either SubmitError a)

-- | Equivalent to `trySubmit` but returns the full transaction tree.
@url https://docs.daml.com/daml-script/api/Daml-Script.html#function-daml-script-internal-questions-submit-trysubmittree-68085
trySubmitTree :: (HasCallStack, ScriptSubmit script, IsSubmitOptions options) => options -> Commands a -> script (Either SubmitError TransactionTree)

-- | `submitMustFail p cmds` submits the commands `cmds` as a single transaction
--   from party `p`.
--   See submitWithOptions for details on the `options` field
--   
--   It only succeeds if the submitting the transaction fails.
@url https://docs.daml.com/daml-script/api/Daml-Script.html#function-daml-script-internal-questions-submit-submitmustfail-63662
submitMustFail :: (HasCallStack, ScriptSubmit script, IsSubmitOptions options) => options -> Commands a -> script ()

-- | DEPRECATED: Daml 2.9 compatibility helper, use 'submitMustFail' instead
@url https://docs.daml.com/daml-script/api/Daml-Script.html#function-daml-script-internal-questions-submit-submitmustfailwithoptions-20017
submitMustFailWithOptions :: (HasCallStack, ScriptSubmit script, IsSubmitOptions options) => options -> Commands a -> script ()

-- | `submitMulti actAs readAs cmds` submits `cmds` as a single transaction
--   authorized by `actAs`. Fetched contracts must be visible to at least
--   one party in the union of actAs and readAs.
--   
--   Note: This behaviour can be achieved using `submit (actAs actors <> readAs readers) cmds`
--   and is only provided for backwards compatibility.
--   DEPRECATED: Legacy API, use `submit`, `actAs` and `readAs` separately
@url https://docs.daml.com/daml-script/api/Daml-Script.html#function-daml-script-internal-questions-submit-submitmulti-45107
submitMulti :: (HasCallStack, ScriptSubmit script) => [Party] -> [Party] -> Commands a -> script a

-- | `submitMultiMustFail actAs readAs cmds` behaves like `submitMulti actAs readAs cmds`
--   but fails when `submitMulti` succeeds and the other way around.
--   
--   Note: This behaviour can be achieved using `submitMustFail (actAs actors <> readAs readers) cmds`
--   and is only provided for backwards compatibility.
--   DEPRECATED: Legacy API, use `submitMustFail`, `actAs` and `readAs` separately
@url https://docs.daml.com/daml-script/api/Daml-Script.html#function-daml-script-internal-questions-submit-submitmultimustfail-77808
submitMultiMustFail :: (HasCallStack, ScriptSubmit script) => [Party] -> [Party] -> Commands a -> script ()

-- | Equivalent to `submitMulti` but returns the full transaction tree.
--   
--   Note: This behaviour can be achieved using `submitTree (actAs actors <> readAs readers) cmds`
--   and is only provided for backwards compatibility.
--   DEPRECATED: Legacy API, use `submitTree`, `actAs` and `readAs` separately
@url https://docs.daml.com/daml-script/api/Daml-Script.html#function-daml-script-internal-questions-submit-submittreemulti-4879
submitTreeMulti :: (HasCallStack, ScriptSubmit script) => [Party] -> [Party] -> Commands a -> script TransactionTree

-- | Alternate version of `trySubmit` that allows specifying the actAs and readAs parties.
--   
--   Note: This behaviour can be achieved using `trySubmit (actAs actors <> readAs readers) cmds`
--   and is only provided for backwards compatibility.
--   DEPRECATED: Legacy API, use `trySubmit`, `actAs` and `readAs` separately
@url https://docs.daml.com/daml-script/api/Daml-Script.html#function-daml-script-internal-questions-submit-trysubmitmulti-31939
trySubmitMulti :: (HasCallStack, ScriptSubmit script) => [Party] -> [Party] -> Commands a -> script (Either SubmitError a)

-- | DEPRECATED: Legacy API, use `concurrent` and `trySubmit` separately
@url https://docs.daml.com/daml-script/api/Daml-Script.html#function-daml-script-internal-questions-submit-trysubmitconcurrently-11443
trySubmitConcurrently :: (HasCallStack) => Party -> [Commands a] -> Script [Either SubmitError a]

-- | DEPRECATED: Legacy API, use `trySubmit` and `disclosures` separately
@url https://docs.daml.com/daml-script/api/Daml-Script.html#function-daml-script-internal-questions-submit-submitwithdisclosures-50120
submitWithDisclosures :: (HasCallStack) => Party -> [Disclosure] -> Commands a -> Script a

-- | DEPRECATED: Legacy API, use `submitMustFail` and `disclosures` separately
@url https://docs.daml.com/daml-script/api/Daml-Script.html#function-daml-script-internal-questions-submit-submitwithdisclosuresmustfail-28475
submitWithDisclosuresMustFail :: (HasCallStack) => Party -> [Disclosure] -> Commands a -> Script ()

-- | Finds the contract id of an event within a tree given a tree index
--   Tree indices are created using the `created(N)` and `exercised(N)` builders
--   which allow building "paths" within a transaction to a create node
--   For example, `exercisedN @MyTemplate1 "MyChoice" 2 $ createdN @MyTemplate2 1`
--   would find the `ContractId MyTemplate2` of the second (0 index) create event under
--   the 3rd exercise event of `MyChoice` from `MyTemplate1`
@url https://docs.daml.com/daml-script/api/Daml-Script.html#function-daml-script-internal-questions-transactiontree-fromtree-1340
fromTree :: (Template t) => TransactionTree -> TreeIndex t -> ContractId t

-- | Index for the first create event of a given template
--   e.g. `created @MyTemplate`
@url https://docs.daml.com/daml-script/api/Daml-Script.html#function-daml-script-internal-questions-transactiontree-created-56097
created :: (HasTemplateTypeRep t) => TreeIndex t

-- | Index for the Nth create event of a given template
--   e.g. `createdN 2 @MyTemplate`
--   `created = createdN 0`
@url https://docs.daml.com/daml-script/api/Daml-Script.html#function-daml-script-internal-questions-transactiontree-createdn-71930
createdN :: (HasTemplateTypeRep t) => Int -> TreeIndex t

-- | Index for the first exercise of a given choice on a given template
--   e.g. `exercised @MyTemplate "MyChoice"`
@url https://docs.daml.com/daml-script/api/Daml-Script.html#function-daml-script-internal-questions-transactiontree-exercised-13349
exercised :: (HasTemplateTypeRep t) => Text -> TreeIndex t' -> TreeIndex t'

-- | Index for the Nth exercise of a given choice on a given template
--   e.g. `exercisedN @MyTemplate "MyChoice" 2`
--   `exercised c = exercisedN c 0`
@url https://docs.daml.com/daml-script/api/Daml-Script.html#function-daml-script-internal-questions-transactiontree-exercisedn-70910
exercisedN :: (HasTemplateTypeRep t) => Text -> Int -> TreeIndex t' -> TreeIndex t'

@url https://docs.daml.com/daml-script/api/Daml-Script.html#function-daml-script-internal-questions-util-fromanycontractid-11435
fromAnyContractId :: (Template t) => AnyContractId -> Optional (ContractId t)

-- | Query the set of active contracts of the template
--   that are visible to the given party.
@url https://docs.daml.com/daml-script/api/Daml-Script.html#function-daml-script-internal-questions-query-query-55941
query :: (Template t, HasEnsure t, IsParties p) => p -> Script [(ContractId t, t)]

-- | Query the set of active contracts of the template
--   that are visible to the given party and match the given predicate.
@url https://docs.daml.com/daml-script/api/Daml-Script.html#function-daml-script-internal-questions-query-queryfilter-99157
queryFilter :: (Template c, HasEnsure c, IsParties p) => p -> (c -> Bool) -> Script [(ContractId c, c)]

-- | Query for the contract with the given contract id.
--   
--   Returns `None` if there is no active contract the party is a stakeholder on.
--   Otherwise returns a triplet (anyTemplate, templateId, blob) where anyTemplate
--   is the contract upgraded or downgraded to `t`, templateId is the ID of the
--   template as stored in the ledger (may be different from `t`), and blob is the
--   disclosure of the template as stored in the ledger (of type templateId).
--   
--   WARNING: Over the gRPC and with the JSON API
--   in-memory backend this performs a linear search so only use this if the number of
--   active contracts is small.
--   
--   This is semantically equivalent to calling `query`
--   and filtering on the client side.
@url https://docs.daml.com/daml-script/api/Daml-Script.html#function-daml-script-internal-questions-query-querycontractid-7634
queryContractId_ :: (Template t, IsParties p, HasCallStack) => p -> ContractId t -> Script (Optional (AnyTemplate, TemplateTypeRep, Text))

@url https://docs.daml.com/daml-script/api/Daml-Script.html#function-daml-script-internal-questions-query-querycontractid-24166
queryContractId :: (Template t, HasEnsure t, IsParties p, HasCallStack) => p -> ContractId t -> Script (Optional t)

@url https://docs.daml.com/daml-script/api/Daml-Script.html#function-daml-script-internal-questions-query-querydisclosure-12000
queryDisclosure :: (Template t, IsParties p, HasCallStack) => p -> ContractId t -> Script (Optional Disclosure)

-- | Query the set of active contract views for an interface
--   that are visible to the given party.
--   If the view function fails for a given contract id, The `Optional v` will be `None`.
--   
--   WARNING: Information about instances with failed-views is not currently returned over the JSON API: the `Optional v` will be `Some _` for every element in the returned list.
@url https://docs.daml.com/daml-script/api/Daml-Script.html#function-daml-script-internal-questions-query-queryinterface-52085
queryInterface :: (Template i, HasInterfaceView i v, IsParties p) => p -> Script [(ContractId i, Optional v)]

-- | Query for the contract view with the given contract id.
--   
--   Returns `None` if there is no active contract the party is a stakeholder on.
--   
--   Returns `None` if the view function fails for the given contract id.
--   
--   WARNING: Over the gRPC and with the JSON API
--   in-memory backend this performs a linear search so only use this if the number of
--   active contracts is small.
--   
--   This is semantically equivalent to calling `queryInterface`
--   and filtering on the client side.
@url https://docs.daml.com/daml-script/api/Daml-Script.html#function-daml-script-internal-questions-query-queryinterfacecontractid-18438
queryInterfaceContractId :: (Template i, HasInterfaceView i v, IsParties p, HasCallStack) => p -> ContractId i -> Script (Optional v)

-- | Returns `None` if there is no active contract with the given key that
--   the party is a stakeholder on.
--   
--   WARNING: Over the gRPC and with the JSON API
--   in-memory backend this performs a linear search so only use this if the number of
--   active contracts is small.
--   
--   This is semantically equivalent to calling `query`
--   and filtering on the client side.
@url https://docs.daml.com/daml-script/api/Daml-Script.html#function-daml-script-internal-questions-query-querycontractkey-51277
queryContractKey :: (HasCallStack, TemplateKey t k, IsParties p) => p -> k -> Script (Optional (ContractId t, t))

-- | Allocate a party with the given display name
--   using the party management service.
@url https://docs.daml.com/daml-script/api/Daml-Script.html#function-daml-script-internal-questions-partymanagement-allocateparty-4749
allocateParty :: (HasCallStack) => Text -> Script Party

-- | DEPRECATED: Daml 3.3 compatibility helper, use 'allocatePartyByHint' instead of 'allocatePartyWithHint'
@url https://docs.daml.com/daml-script/api/Daml-Script.html#function-daml-script-internal-questions-partymanagement-allocatepartywithhint-96426
allocatePartyWithHint :: (HasCallStack) => Text -> PartyIdHint -> Script Party

-- | Allocate a party with the given id hint
--   using the party management service.
@url https://docs.daml.com/daml-script/api/Daml-Script.html#function-daml-script-internal-questions-partymanagement-allocatepartybyhint-55067
allocatePartyByHint :: (HasCallStack) => PartyIdHint -> Script Party

-- | Allocate a party with the given display name
--   on the specified participant using the party management service.
@url https://docs.daml.com/daml-script/api/Daml-Script.html#function-daml-script-internal-questions-partymanagement-allocatepartyon-59020
allocatePartyOn :: Text -> ParticipantName -> Script Party

-- | DEPRECATED: Daml 3.3 compatibility helper, use 'allocatePartyByHintOn' instead of 'allocatePartyWithHintOn'
@url https://docs.daml.com/daml-script/api/Daml-Script.html#function-daml-script-internal-questions-partymanagement-allocatepartywithhinton-11859
allocatePartyWithHintOn :: Text -> PartyIdHint -> ParticipantName -> Script Party

-- | Allocate a party with the given id hint
--   on the specified participant using the party management service.
@url https://docs.daml.com/daml-script/api/Daml-Script.html#function-daml-script-internal-questions-partymanagement-allocatepartybyhinton-5218
allocatePartyByHintOn :: PartyIdHint -> ParticipantName -> Script Party

-- | List the parties known to the default participant.
@url https://docs.daml.com/daml-script/api/Daml-Script.html#function-daml-script-internal-questions-partymanagement-listknownparties-55540
listKnownParties :: (HasCallStack) => Script [PartyDetails]

-- | List the parties known to the given participant.
@url https://docs.daml.com/daml-script/api/Daml-Script.html#function-daml-script-internal-questions-partymanagement-listknownpartieson-55333
listKnownPartiesOn :: (HasCallStack) => ParticipantName -> Script [PartyDetails]

-- | Named version of the `try catch` behaviour of Daml-Script.
--   Note that this is no more powerful than `try catch` in daml-script, and will not catch exceptions in submissions.
--   (Use `trySubmit` for this)
--   Input computation is deferred to catch pure exceptions
@url https://docs.daml.com/daml-script/api/Daml-Script.html#function-daml-script-internal-questions-exceptions-trytoeither-58773
tryToEither :: (() -> Script t) -> Script (Either AnyException t)

@url https://docs.daml.com/daml-script/api/Daml-Script.html#function-daml-script-internal-questions-exceptions-tryfailurestatus-576
tryFailureStatus :: Script a -> Script (Either FailureStatus a)

-- | Using a DER formatted private key (encoded as a hex string) use Secp256k1 to sign a hex encoded string message.
--   
--   Note that this implementation uses a random source with a fixed PRNG and seed, ensuring it behaves deterministically during testing.
--   
--   For example, CCTP attestation services may be mocked in daml-script code.
@url https://docs.daml.com/daml-script/api/Daml-Script.html#function-daml-script-internal-questions-crypto-text-secp256k1sign-72886
secp256k1sign :: (HasCallStack) => PrivateKeyHex -> BytesHex -> Script BytesHex

-- | Generate DER formatted Secp256k1 public/private key pairs.
@url https://docs.daml.com/daml-script/api/Daml-Script.html#function-daml-script-internal-questions-crypto-text-secp256k1generatekeypair-90200
secp256k1generatekeypair :: (HasCallStack) => Script Secp256k1KeyPair

-- | Create a contract of the given template.
@url https://docs.daml.com/daml-script/api/Daml-Script.html#function-daml-script-internal-questions-commands-createcmd-46830
createCmd :: (Template t, HasEnsure t) => t -> Commands (ContractId t)

-- | Exercise a choice on the given contract.
@url https://docs.daml.com/daml-script/api/Daml-Script.html#function-daml-script-internal-questions-commands-exercisecmd-7438
exerciseCmd :: (Choice t c r) => ContractId t -> c -> Commands r

-- | Exercise a choice on the contract with the given key.
@url https://docs.daml.com/daml-script/api/Daml-Script.html#function-daml-script-internal-questions-commands-exercisebykeycmd-80697
exerciseByKeyCmd :: (TemplateKey t k, Choice t c r) => k -> c -> Commands r

-- | Create a contract and exercise a choice on it in the same transaction, returns the created ContractId, and the choice result.
@url https://docs.daml.com/daml-script/api/Daml-Script.html#function-daml-script-internal-questions-commands-createandexercisewithcidcmd-21289
createAndExerciseWithCidCmd :: (Template t, Choice t c r, HasEnsure t) => t -> c -> Commands (ContractId t, r)

-- | Create a contract and exercise a choice on it in the same transaction, returns only the choice result.
@url https://docs.daml.com/daml-script/api/Daml-Script.html#function-daml-script-internal-questions-commands-createandexercisecmd-8600
createAndExerciseCmd :: (Template t, Choice t c r, HasEnsure t) => t -> c -> Commands r

-- | Create a contract of the given template, using the exact package ID of the template given - upgrades are disabled.
@url https://docs.daml.com/daml-script/api/Daml-Script.html#function-daml-script-internal-questions-commands-createexactcmd-86998
createExactCmd :: (Template t, HasEnsure t) => t -> Commands (ContractId t)

-- | Exercise a choice on the given contract, using the exact package ID of the template given - upgrades are disabled.
@url https://docs.daml.com/daml-script/api/Daml-Script.html#function-daml-script-internal-questions-commands-exerciseexactcmd-18398
exerciseExactCmd :: (Choice t c r) => ContractId t -> c -> Commands r

-- | Exercise a choice on the contract with the given key, using the exact package ID of the template given - upgrades are disabled.
@url https://docs.daml.com/daml-script/api/Daml-Script.html#function-daml-script-internal-questions-commands-exercisebykeyexactcmd-4555
exerciseByKeyExactCmd :: (TemplateKey t k, Choice t c r) => k -> c -> Commands r

-- | Create a contract and exercise a choice on it in the same transaction, returns the created ContractId, and the choice result.
--   Uses the exact package ID of the template given - upgrades are disabled.
@url https://docs.daml.com/daml-script/api/Daml-Script.html#function-daml-script-internal-questions-commands-createandexercisewithcidexactcmd-15363
createAndExerciseWithCidExactCmd :: (Template t, Choice t c r, HasEnsure t) => t -> c -> Commands (ContractId t, r)

-- | Create a contract and exercise a choice on it in the same transaction, returns only the choice result.
@url https://docs.daml.com/daml-script/api/Daml-Script.html#function-daml-script-internal-questions-commands-createandexerciseexactcmd-54956
createAndExerciseExactCmd :: (Template t, Choice t c r, HasEnsure t) => t -> c -> Commands r

-- | Archive the given contract.
--   
--   `archiveCmd cid` is equivalent to `exerciseCmd cid Archive`.
@url https://docs.daml.com/daml-script/api/Daml-Script.html#function-daml-script-internal-questions-commands-archivecmd-47203
archiveCmd :: (Choice t Archive ()) => ContractId t -> Commands ()

-- | Convenience helper to declare you are writing a Script.
--   
--   This is only useful for readability and to improve type inference.
--   Any expression of type `Script a` is a valid script regardless of whether
--   it is implemented using `script` or not.
@url https://docs.daml.com/daml-script/api/Daml-Script.html#function-daml-script-internal-lowlevel-script-65113
script :: Script a -> Script a

-- | Contains all Internal and Alpha functionality provided by Daml Script
@url https://docs.daml.com/daml-script/api/Daml-Script-Internal.html#module-daml-script-internal-18793
module Daml.Script.Internal

@url https://docs.daml.com/daml-script/api/Daml-Script-Internal.html#type-daml-script-internal-questions-testing-commandname-12991
data CommandName

@url https://docs.daml.com/daml-script/api/Daml-Script-Internal.html#constr-daml-script-internal-questions-testing-commandname-12826
CommandName :: Text -> CommandName

getCommandName :: CommandName -> Text

@url https://docs.daml.com/daml-script/api/Daml-Script-Internal.html#type-daml-script-internal-questions-testing-errorclassname-49861
data ErrorClassName

@url https://docs.daml.com/daml-script/api/Daml-Script-Internal.html#constr-daml-script-internal-questions-testing-errorclassname-42862
ErrorClassName :: Text -> ErrorClassName

getErrorClassName :: ErrorClassName -> Text

@url https://docs.daml.com/daml-script/api/Daml-Script-Internal.html#type-daml-script-internal-questions-testing-errormessage-78991
data ErrorMessage

@url https://docs.daml.com/daml-script/api/Daml-Script-Internal.html#constr-daml-script-internal-questions-testing-errormessage-24784
ErrorMessage :: Text -> ErrorMessage

getErrorMessage :: ErrorMessage -> Text

-- | Pseudo exception that daml-script can throw/catch, but that isn't seen as an exception in the dar
--   and as such, does not need to be serializable/cannot be thrown in Update
@url https://docs.daml.com/daml-script/api/Daml-Script-Internal.html#type-daml-script-internal-questions-testing-failedcmd-88074
data FailedCmd

@url https://docs.daml.com/daml-script/api/Daml-Script-Internal.html#constr-daml-script-internal-questions-testing-failedcmd-77803
FailedCmd :: CommandName -> ErrorClassName -> ErrorMessage -> FailedCmd

commandName :: FailedCmd -> CommandName

errorClassName :: FailedCmd -> ErrorClassName

errorMessage :: FailedCmd -> ErrorMessage

-- | Additional debugging info optionally provided by the ledger
@url https://docs.daml.com/daml-script/api/Daml-Script-Internal.html#type-daml-script-internal-questions-submit-error-contractnotfoundadditionalinfo-6199
data ContractNotFoundAdditionalInfo

-- | Errors that will be promoted to SubmitError once stable - code needs to be kept in sync with SubmitError.scala
@url https://docs.daml.com/daml-script/api/Daml-Script-Internal.html#type-daml-script-internal-questions-submit-error-deverrortype-71788
data DevErrorType

@url https://docs.daml.com/daml-script/api/Daml-Script-Internal.html#constr-daml-script-internal-questions-submit-error-choiceguardfailed-92292
ChoiceGuardFailed :: DevErrorType

@url https://docs.daml.com/daml-script/api/Daml-Script-Internal.html#constr-daml-script-internal-questions-submit-error-wronglytypedcontractsoft-93780
WronglyTypedContractSoft :: DevErrorType

-- | This should never happen - Update Scripts when you see this!
@url https://docs.daml.com/daml-script/api/Daml-Script-Internal.html#constr-daml-script-internal-questions-submit-error-unknownnewfeature-96345
UnknownNewFeature :: DevErrorType

@url https://docs.daml.com/daml-script/api/Daml-Script-Internal.html#type-daml-script-internal-questions-packages-packagename-68696
data PackageName

@url https://docs.daml.com/daml-script/api/Daml-Script-Internal.html#constr-daml-script-internal-questions-packages-packagename-3807
PackageName :: Text -> Text -> PackageName

name :: PackageName -> Text

version :: PackageName -> Text

-- | Internal testing tool that allows us to catch FailedCmds in the daml language
@url https://docs.daml.com/daml-script/api/Daml-Script-Internal.html#function-daml-script-internal-questions-testing-trycommands-17332
tryCommands :: Script a -> Script (Either FailedCmd a)

-- | Runs a script and lifts FailedCmd scala exceptions into the FailedCmd daml exception, which can be caught via try-catch
@url https://docs.daml.com/daml-script/api/Daml-Script-Internal.html#function-daml-script-internal-questions-testing-liftfailedcommandtofailurestatus-62416
liftFailedCommandToFailureStatus :: Script a -> Script a

@url https://docs.daml.com/daml-script/api/Daml-Script-Internal.html#function-daml-script-internal-questions-submit-error-isnotactive-40539
isNotActive :: ContractNotFoundAdditionalInfo -> Optional AnyContractId

@url https://docs.daml.com/daml-script/api/Daml-Script-Internal.html#function-daml-script-internal-questions-packages-vetpackages-16211
vetPackages :: (HasCallStack) => [PackageName] -> Script ()

@url https://docs.daml.com/daml-script/api/Daml-Script-Internal.html#function-daml-script-internal-questions-packages-vetpackagesonparticipant-8324
vetPackagesOnParticipant :: (HasCallStack) => [PackageName] -> ParticipantName -> Script ()

@url https://docs.daml.com/daml-script/api/Daml-Script-Internal.html#function-daml-script-internal-questions-packages-unvetpackages-80050
unvetPackages :: (HasCallStack) => [PackageName] -> Script ()

@url https://docs.daml.com/daml-script/api/Daml-Script-Internal.html#function-daml-script-internal-questions-packages-unvetpackagesonparticipant-47459
unvetPackagesOnParticipant :: (HasCallStack) => [PackageName] -> ParticipantName -> Script ()

@url https://docs.daml.com/daml-script/api/Daml-Script-Internal.html#function-daml-script-internal-questions-packages-listvettedpackages-3001
listVettedPackages :: (HasCallStack) => Script [PackageName]

@url https://docs.daml.com/daml-script/api/Daml-Script-Internal.html#function-daml-script-internal-questions-packages-listallpackages-50063
listAllPackages :: (HasCallStack) => Script [PackageName]

-- | Allocate a party with the given display name on the specified main participant using the party management service
--   and replicates it to the specified (possibly empty) list of additional participants. Commands submitted by the
--   allocated party will be routed to the main participant.
@url https://docs.daml.com/daml-script/api/Daml-Script-Internal.html#function-daml-script-internal-questions-partymanagement-allocatereplicatedpartyon-96671
allocateReplicatedPartyOn :: Text -> ParticipantName -> [ParticipantName] -> Script Party

-- | Allocate a party with the given display name and id hint on the specified main participant using the party
--   management service and replicates it to the specified (possibly empty) list of additional participants. Commands
--   submitted by the allocated party will be routed to the main participant.
@url https://docs.daml.com/daml-script/api/Daml-Script-Internal.html#function-daml-script-internal-questions-partymanagement-allocatereplicatedpartywithhinton-30144
allocateReplicatedPartyWithHintOn :: Text -> PartyIdHint -> ParticipantName -> [ParticipantName] -> Script Party

@url https://docs.daml.com/daml-script/api/Daml-Script-Internal.html#function-daml-script-internal-questions-exceptions-throwanyexception-70957
throwAnyException :: AnyException -> Script t


