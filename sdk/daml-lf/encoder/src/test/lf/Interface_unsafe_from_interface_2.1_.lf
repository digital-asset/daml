// Copyright (c) 2025 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.
// SPDX-License-Identifier: Apache-2.0

module InterfaceUnsafeFromMod {

  interface (this: Root) = {
    viewtype RecordMod:MyUnit;
  };

  interface (this: Boxy) = {
    viewtype RecordMod:MyUnit;
    requires InterfaceUnsafeFromMod:Root;
    method getParty: Party;
    choice @nonConsuming ReturnInt (self) (i: Int64): Int64
      , controllers Cons @Party [call_method @InterfaceUnsafeFromMod:Boxy getParty this] (Nil @Party)
      , observers Nil @Party
      to upure @Int64 i;
  };

  record @serializable Box = { party: Party, name: Text };

  template (this: Box) = {
    precondition True;
    signatories Cons @Party [InterfaceUnsafeFromMod:Box {party} this] (Nil @Party);
    observers Cons @Party [InterfaceUnsafeFromMod:Box {party} this] (Nil @Party);
  };

  val unsafeBoxyToBox: ContractId InterfaceMod:Boxy -> InterfaceMod:Boxy -> InterfaceMod:Box =
    \(cid: ContractId InterfaceMod:Boxy) (boxy: InterfaceMod:Boxy) ->
      unsafe_from_interface @InterfaceMod:Boxy @InterfaceMod:Box cid boxy;
}
