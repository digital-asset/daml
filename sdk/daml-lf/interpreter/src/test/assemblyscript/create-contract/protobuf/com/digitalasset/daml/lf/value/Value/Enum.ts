// Copyright (c) 2024 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.
// SPDX-License-Identifier: Apache-2.0

// Code generated by protoc-gen-as. DO NOT EDIT.
// Versions:
//   protoc-gen-as v1.3.0
//   protoc        v3.8.0

import { Writer, Reader, Protobuf } from "as-proto/assembly";

export class Enum {
  static encode(message: Enum, writer: Writer): void {
    writer.uint32(10);
    writer.string(message.value);
  }

  static decode(reader: Reader, length: i32): Enum {
    const end: usize = length < 0 ? reader.end : reader.ptr + length;
    const message = new Enum();

    while (reader.ptr < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.value = reader.string();
          break;

        default:
          reader.skipType(tag & 7);
          break;
      }
    }

    return message;
  }

  value: string;

  constructor(value: string = "") {
    this.value = value;
  }
}

export function encodeEnum(message: Enum): Uint8Array {
  return Protobuf.encode(message, Enum.encode);
}

export function decodeEnum(buffer: Uint8Array): Enum {
  return Protobuf.decode<Enum>(buffer, Enum.decode);
}
