-- Copyright (c) 2024 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.
-- SPDX-License-Identifier: Apache-2.0

module Daml.Script.Internal.Questions.PartyManagement where

import Daml.Script.Internal.LowLevel
import Daml.Script.Stable (PartyDetails (..), PartyIdHint (..), ParticipantName (..))
import DA.Stack

data AllocateParty = AllocateParty with
  displayName : Text
  idHint : Text
  participant : Optional Text
instance IsQuestion AllocateParty Party where command = "AllocateParty"

-- | Allocate a party with the given display name
-- using the party management service.
allocateParty : HasCallStack => Text -> Script Party
allocateParty displayName = lift $ AllocateParty with
  displayName
  idHint = ""
  participant = None

-- | Allocate a party with the given display name and id hint
-- using the party management service.
allocatePartyWithHint : HasCallStack => Text -> PartyIdHint -> Script Party
allocatePartyWithHint displayName (PartyIdHint idHint) = lift $ AllocateParty with
  displayName
  idHint = idHint
  participant = None

-- | Allocate a party with the given display name
-- on the specified participant using the party management service.
allocatePartyOn : Text -> ParticipantName -> Script Party
allocatePartyOn displayName (ParticipantName participant) = lift $ AllocateParty with
  displayName
  idHint = ""
  participant = Some participant

-- | Allocate a party with the given display name and id hint
-- on the specified participant using the party management service.
allocatePartyWithHintOn : Text -> PartyIdHint -> ParticipantName -> Script Party
allocatePartyWithHintOn displayName (PartyIdHint idHint) (ParticipantName participant) = lift $ AllocateParty with
  displayName
  idHint = idHint
  participant = Some participant

data ListKnownParties = ListKnownParties with
  participant : Optional Text
instance IsQuestion ListKnownParties [PartyDetails] where command = "ListKnownParties"

-- | List the parties known to the default participant.
listKnownParties : HasCallStack => Script [PartyDetails]
listKnownParties = lift $ ListKnownParties None

-- | List the parties known to the given participant.
listKnownPartiesOn : HasCallStack => ParticipantName -> Script [PartyDetails]
listKnownPartiesOn (ParticipantName participant) = lift $ ListKnownParties $ Some participant
