// Copyright (c) 2024 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.
// SPDX-License-Identifier: Apache-2.0

syntax = "proto3";

package com.digitalasset.canton.protocol.v0;

import "com/digitalasset/canton/crypto/v0/crypto.proto";
import "google/protobuf/timestamp.proto";

// Definitions shared by at least 2 out of mediator.proto, participant_transaction.proto and participant_transfer.proto

enum ViewType {
  MissingViewType = 0;
  TransactionViewType = 1;
  TransferOutViewType = 2;
  TransferInViewType = 3;
}

message SerializableContract {
  message Metadata {
    repeated string non_maintainer_signatories = 1;
    repeated string non_signatory_stakeholders = 2;
    GlobalKey key = 3; // optional: only set if contract has a key
    repeated string maintainers = 4; // optional; only set if contract has a key
  }

  string contract_id = 1;
  bytes raw_contract_instance = 2;
  Metadata metadata = 3;
  google.protobuf.Timestamp ledger_create_time = 4;
}

message GlobalKey {
  bytes template_id = 1;
  bytes key = 2;
}

message DriverContractMetadata {
  crypto.v0.Salt contract_salt = 1;
}
