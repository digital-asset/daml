// Copyright (c) 2024 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.
// SPDX-License-Identifier: Apache-2.0

syntax = "proto3";

package com.digitalasset.canton.protocol.v30;

import "com/digitalasset/canton/protocol/v30/common.proto";
import "com/digitalasset/canton/protocol/v30/mediator_response.proto";
import "com/digitalasset/canton/protocol/v30/merkle.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";
import "google/rpc/status.proto";
import "scalapb/scalapb.proto";

// Messages related to the transaction or transfer protocol sent by a mediator

message MediatorRejection {
  enum Code {
    MissingCode = 0;
    InformeesNotHostedOnActiveParticipant = 1;
    NotEnoughConfirmingParties = 2;
    ViewThresholdBelowMinimumThreshold = 3;
    InvalidRootHashMessage = 4;
    Timeout = 5;
    WrongDeclaredMediator = 6;
    NonUniqueRequestUuid = 7;
  }
}

message InformeeTree {
  option (scalapb.message).companion_extends = "com.digitalasset.canton.version.StableProtoVersion";

  GenTransactionTree tree = 1;
}

message ParticipantReject {
  repeated RejectionReason reasons = 1;
}

message RejectionReason {
  repeated string parties = 1;
  com.digitalasset.canton.protocol.v30.LocalReject reject = 2;
}

message MediatorReject {
  google.rpc.Status reason = 1; // Must not be OK
}

message MalformedMediatorRequestResult {
  option (scalapb.message).companion_extends = "com.digitalasset.canton.version.UnstableProtoVersion";

  google.protobuf.Timestamp request_id = 1;
  string domain_id = 2;
  com.digitalasset.canton.protocol.v30.ViewType view_type = 3;
  MediatorReject rejection = 4;
}

message Verdict {
  option (scalapb.message).companion_extends = "com.digitalasset.canton.version.UnstableProtoVersion";

  oneof some_verdict {
    google.protobuf.Empty approve = 1;
    com.digitalasset.canton.protocol.v30.ParticipantReject participant_reject = 2;
    com.digitalasset.canton.protocol.v30.MediatorReject mediator_reject = 3;
  }
}

message TransactionResultMessage {
  option (scalapb.message).companion_extends = "com.digitalasset.canton.version.UnstableProtoVersion";

  google.protobuf.Timestamp request_id = 1;
  Verdict verdict = 2;
  bytes root_hash = 3;
  string domain_id = 4;
}

message TransferResult {
  option (scalapb.message).companion_extends = "com.digitalasset.canton.version.UnstableProtoVersion";

  google.protobuf.Timestamp request_id = 1;
  oneof domain {
    string source_domain = 2; // result for transfer-out request
    string target_domain = 3; // result for transfer-in request
  }
  repeated string informees = 4;
  Verdict verdict = 5;
}
