// Copyright (c) 2024 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.
// SPDX-License-Identifier: Apache-2.0

syntax = "proto3";

package com.daml.ledger.api.v2;

import "com/daml/ledger/api/v1/event.proto";
import "com/daml/ledger/api/v1/event_query_service.proto";

option java_outer_classname = "EventQueryServiceOuterClass";
option java_package = "com.daml.ledger.api.v2";
option csharp_namespace = "Com.Daml.Ledger.Api.V2";

// Query events by contract id.
//
// Note that querying by contract key is not (yet) supported, as contract keys
// are not supported (yet) in multi-domain scenarios.
service EventQueryService {

  // Get the create and the consuming exercise event for the contract with the provided ID.
  // No events will be returned for contracts that have been pruned because they
  // have already been archived before the latest pruning offset.
  rpc GetEventsByContractId (com.daml.ledger.api.v1.GetEventsByContractIdRequest) returns (GetEventsByContractIdResponse);
}

message GetEventsByContractIdResponse {

  // The create event for the contract with the ``contract_id`` given in the request
  // provided it exists and has not yet been pruned.
  // Optional
  Created created = 1;

  // The archive event for the contract with the ``contract_id`` given in the request
  // provided such an archive event exists and it has not yet been pruned.
  // Optional
  Archived archived = 2;
}

message Created {

  // Required
  com.daml.ledger.api.v1.CreatedEvent created_event = 1;

  // The domain which sequenced the creation of the contract
  // Required
  string domain_id = 2;
}

message Archived {

  // Required
  com.daml.ledger.api.v1.ArchivedEvent archived_event = 1;

  // Required
  // The domain which sequenced the archival of the contract
  string domain_id = 2;
}
