// Copyright (c) 2024 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.
// SPDX-License-Identifier: Apache-2.0

syntax = "proto3";

package com.daml.ledger.api.v1;

import "com/daml/ledger/api/v1/value.proto";


option java_outer_classname = "CommandsOuterClass";
option java_package = "com.daml.ledger.api.v1";
option csharp_namespace = "Com.Daml.Ledger.Api.V1";

// A command can either create a new contract or exercise a choice on an existing contract.
message Command {
  oneof command {
    CreateCommand create = 1;
    ExerciseCommand exercise = 2;
    ExerciseByKeyCommand exerciseByKey = 4;
    CreateAndExerciseCommand createAndExercise = 3;
  }
}

// Create a new contract instance based on a template.
message CreateCommand {
  // The template of contract the client wants to create.
  // Required
  Identifier template_id = 1;

  // The arguments required for creating a contract from this template.
  // Required
  Record create_arguments = 2;
}

// Exercise a choice on an existing contract.
message ExerciseCommand {
  // The template of contract the client wants to exercise.
  // Required
  Identifier template_id = 1;

  // The ID of the contract the client wants to exercise upon.
  // Must be a valid LedgerString (as described in ``value.proto``).
  // Required
  string contract_id = 2;

  // The name of the choice the client wants to exercise.
  // Must be a valid NameString (as described in ``value.proto``)
  // Required
  string choice = 3;

  // The argument for this choice.
  // Required
  Value choice_argument = 4;
}

// Exercise a choice on an existing contract specified by its key.
message ExerciseByKeyCommand {
  // The template of contract the client wants to exercise.
  // Required
  Identifier template_id = 1;

  // The key of the contract the client wants to exercise upon.
  // Required
  Value contract_key = 2;

  // The name of the choice the client wants to exercise.
  // Must be a valid NameString (as described in ``value.proto``)
  // Required
  string choice = 3;

  // The argument for this choice.
  // Required
  Value choice_argument = 4;
}

// Create a contract and exercise a choice on it in the same transaction.
message CreateAndExerciseCommand {
  // The template of the contract the client wants to create.
  // Required
  Identifier template_id = 1;

  // The arguments required for creating a contract from this template.
  // Required
  Record create_arguments = 2;

  // The name of the choice the client wants to exercise.
  // Must be a valid NameString (as described in ``value.proto``).
  // Required
  string choice = 3;

  // The argument for this choice.
  // Required
  Value choice_argument = 4;
}

// An additional contract that is used to resolve
// contract & contract key lookups.
message DisclosedContract {
  // The template id of the contract.
  // Required
  Identifier template_id = 1;
  // The contract id
  // Required
  string contract_id = 2;

  reserved 3; // removed create_arguments

  reserved 4; // removed metadata

  reserved 5; // removed create_arguments_blob

  // Opaque byte string containing the complete payload required by the Daml engine
  // to reconstruct a contract not known to the receiving participant.
  // Required
  bytes created_event_blob = 6;
}
