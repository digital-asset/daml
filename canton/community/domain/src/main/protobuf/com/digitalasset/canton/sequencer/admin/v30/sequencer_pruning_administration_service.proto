// Copyright (c) 2024 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.
// SPDX-License-Identifier: Apache-2.0

syntax = "proto3";

package com.digitalasset.canton.sequencer.admin.v30;

import "com/digitalasset/canton/admin/pruning/v30/pruning.proto";
import "google/protobuf/timestamp.proto";

// administration service for enterprise feature supporting sequencer instances
service SequencerPruningAdministrationService {
  // Remove data from the Sequencer
  rpc Prune(SequencerPruning.PruneRequest) returns (SequencerPruning.PruneResponse);

  // Enable automatic pruning using the specified schedule parameters
  // The following errors may occur on the SetSchedule or Update commands:
  // - ``INVALID_ARGUMENT``: if a parameter is missing or an invalid cron expression
  //   or duration.
  // - ``FAILED_PRECONDITION``: if automatic background pruning has not been enabled
  //   or if invoked on a participant running the Community Edition.
  rpc SetSchedule(com.digitalasset.canton.admin.pruning.v30.SetSchedule.Request) returns (com.digitalasset.canton.admin.pruning.v30.SetSchedule.Response);

  // Modify individual pruning schedule parameters.
  // - ``INVALID_ARGUMENT``: if the payload is malformed or no schedule is configured
  rpc SetCron(com.digitalasset.canton.admin.pruning.v30.SetCron.Request) returns (com.digitalasset.canton.admin.pruning.v30.SetCron.Response);
  rpc SetMaxDuration(com.digitalasset.canton.admin.pruning.v30.SetMaxDuration.Request) returns (com.digitalasset.canton.admin.pruning.v30.SetMaxDuration.Response);
  rpc SetRetention(com.digitalasset.canton.admin.pruning.v30.SetRetention.Request) returns (com.digitalasset.canton.admin.pruning.v30.SetRetention.Response);

  // Disable automatic pruning and remove the persisted schedule configuration.
  rpc ClearSchedule(com.digitalasset.canton.admin.pruning.v30.ClearSchedule.Request) returns (com.digitalasset.canton.admin.pruning.v30.ClearSchedule.Response);

  // Retrieve the automatic pruning configuration.
  rpc GetSchedule(com.digitalasset.canton.admin.pruning.v30.GetSchedule.Request) returns (com.digitalasset.canton.admin.pruning.v30.GetSchedule.Response);

  // Retrieve pruning timestamp at or near the "beginning" of events.
  rpc LocatePruningTimestamp(com.digitalasset.canton.admin.pruning.v30.LocatePruningTimestamp.Request) returns (com.digitalasset.canton.admin.pruning.v30.LocatePruningTimestamp.Response);
}

message SequencerPruning {
  message PruneRequest {
    google.protobuf.Timestamp timestamp = 1;
  }

  message PruneResponse {
    // description of what was removed
    string details = 1;
  }
}
