module Setup where

import DA.Action (unless)
import DA.Foldable (forA_)
import qualified DA.Text as T
import Daml.Script

setup : Script ()
setup = do
  let displayNames = ["Alice", "Bob", "Charlie"]
  forA_ displayNames $ \displayName -> do
    let userId = toUserId displayName
    u <- getUser userId
    case u of
      Some _ ->
        -- user already exists do nothing
        pure ()
      None -> do
        let partyIdHint = toPartyIdHint displayName
        p <- allocatePartyWithHint displayName (PartyIdHint partyIdHint)
        createUser (User userId (Some p)) [CanActAs p]
        pure ()

toUserId : Text -> Text
toUserId = T.asciiToLower

-- TODO Drop hints once we have aliases.
toPartyIdHint : Text -> Text
toPartyIdHint p = "p" <> toUserId p
