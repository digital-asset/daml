# Copyright (c) 2024 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.
# SPDX-License-Identifier: Apache-2.0

trigger: none

pr:
  autoCancel: true # cancel previous builds on push
  branches:
    include:
      - main
      - main-2.x
      - release/*

jobs:
- template: build.yml
  parameters:
    test_mode: pr
- template: check-for-release-job.yml

- job: test_out_token
  condition: true
  dependsOn:
  pool:
    name: 'ubuntu_20_04'
    demands: assignment -equals default
#  variables:
  #  branch_sha: $[ dependencies.git_sha.outputs['out.branch'] ]
  #  status: $[ dependencies.collect_build_data.result ]
  #  is_release: $[ dependencies.check_for_release.outputs['out.is_release'] ]
  steps:
    - checkout: self
      persistCredentials: true
    - template: bash-lib.yml
      parameters:
        var_name: bash-lib
    - bash: |
        set -euo pipefail
        cd sdk
        eval "$(./dev-env/bin/dade-assist)"
        source $(bash-lib)

        #gh issue create --title 'test, ignore' --body test
        #gh issue list
        #echo "something" > aa
        #git add aa
        #open_pr foo "test, ignore" test
      env:
        GH_TOKEN: $(GH_DAML_READWRITE)
    # - bash: |
    #     curl \
    #       -X POST \
    #       -H 'Authorization: Bearer $(System.AccessToken)' \
    #       -H 'Content-Type: application/json' \
    #       -d '[
    #             {
    #               "daysValid": 11,
    #               "definitionId": $(System.DefinitionId),
    #               "ownerId": "User:$(Build.RequestedForId)",
    #               "protectPipeline": false,
    #               "runId": $(Build.BuildId)
    #             }
    #           ]' \
    #       "$(System.CollectionUri)$(System.TeamProject)/_apis/build/retention/leases?api-version=6.0-preview.1"
    #   condition: and(succeeded(), not(canceled()))
    #   name: RetainOnSuccess
    #   displayName: Retain on Success
    