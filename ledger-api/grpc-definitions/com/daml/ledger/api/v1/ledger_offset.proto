// Copyright (c) 2021 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.
// SPDX-License-Identifier: Apache-2.0

syntax = "proto3";

package com.daml.ledger.api.v1;


option java_outer_classname = "LedgerOffsetOuterClass";
option java_package = "com.daml.ledger.api.v1";
option csharp_namespace = "Com.Daml.Ledger.Api.V1";

// Describes a specific point on the ledger.
//
// The Ledger API endpoints that take offsets allow to specify portions
// of the ledger that are relevant for the client to read.
//
// Offsets returned by the Ledger API can be used as-is (e.g.
// to keep track of processed transactions and provide a restart
// point to use in case of need).
//
// The format of absolute offsets is opaque to the client: no
// client-side transformation of an offset is guaranteed
// to return a meaningful offset.
//
// The server implementation ensures internally that offsets
// are lexicographically comparable.
message LedgerOffset {

  oneof value {
    // The format of this string is specific to the ledger and opaque to the client.
    string absolute = 1;
    LedgerBoundary boundary = 2;
  }

  enum LedgerBoundary {
    // Refers to the first transaction.
    LEDGER_BEGIN = 0;

    // Refers to the currently last transaction, which is a moving target.
    LEDGER_END = 1;
  }
}
