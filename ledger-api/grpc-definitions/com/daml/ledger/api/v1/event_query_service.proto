// Copyright (c) 2023 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.
// SPDX-License-Identifier: Apache-2.0

syntax = "proto3";

package com.daml.ledger.api.v1;

import "com/daml/ledger/api/v1/event.proto";
import "com/daml/ledger/api/v1/value.proto";

option java_outer_classname = "EventQueryServiceOuterClass";
option java_package = "com.daml.ledger.api.v1";
option csharp_namespace = "Com.Daml.Ledger.Api.V1";

// Allow clients to query events
service EventQueryService {

  // Get the create and the consuming exercise event for the contract with the provided ID
  rpc GetEventsByContractId (GetEventsByContractIdRequest) returns (GetEventsByContractIdResponse);

  // Get all create and consuming exercise events for the contracts with the provided contract key
  rpc GetEventsByContractKey (GetEventsByContractKeyRequest) returns (GetEventsByContractKeyResponse);

}

message GetEventsByContractIdRequest {
  // The contract id being queried.
  // Required
  string contract_id = 1;

  // The parties whose events the client expects to see.
  // The events associated with the contract id will only be returned if the requesting parties includes
  // at least one party that is a witness of the action that created the event. For a full description
  // of witness see https://docs.daml.com/concepts/ledger-model/ledger-privacy.html#projections.
  // Required
  repeated string requesting_parties = 2;

}

message GetEventsByContractIdResponse {

  // Will be populated if a created event is found for the contract id
  // Optional
  CreatedEvent create_event = 1;

  // Will be populated if a archive event is found for the contract id
  // Optional
  ArchivedEvent archive_event = 2;

}

message GetEventsByContractKeyRequest {

  // The contract key to search for.
  // Required
  Value contract_key = 1;

  // The template id associated with the contract key
  // Required
  Identifier template_id = 2;

  // The parties whose events the client expects to see.
  // The events associated with the contract key will only be returned if the requesting parties includes
  // at least one party that is a witness of the action that created the event. For a full description
  // of witness see https://docs.daml.com/concepts/ledger-model/ledger-privacy.html#projections.
  // Required
  repeated string requesting_parties = 3;

  // If populated the `create_event` in the response will be the last create event to happen prior to this event
  // If not populated then the create event in the response will be that latest create event.
  // By working backwards from event to event all historical key events can be discovered.
  // Optional
  string end_exclusive_event_id = 4;

}

message GetEventsByContractKeyResponse {

  // Will be populated if a created event is found for the contract key. If the `create_event`
  // is populated then the event_id can be used to set the `end_exclusive_event_id` field
  // in a subsequent request in order to find the preceeding create event.
  // key creation event
  // Optional
  CreatedEvent create_event = 1;

  // Will be populated if a archive event is found for the `created_event`
  // Optional
  ArchivedEvent archive_event = 2;

}

