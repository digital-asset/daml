// Copyright (c) 2023 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.
// SPDX-License-Identifier: Apache-2.0

syntax = "proto3";

package com.daml.ledger.api.v2;

import "com/daml/ledger/api/v1/event.proto";
import "com/daml/ledger/api/v1/value.proto";

option java_outer_classname = "EventQueryServiceOuterClass";
option java_package = "com.daml.ledger.api.v2";
option csharp_namespace = "Com.Daml.Ledger.Api.V2";

// Query events by contract id or key.
service EventQueryService {

  // Get the create and the consuming exercise event for the contract with the provided ID.
  // No events will be returned for contracts that have been pruned because they 
  // have already been archived before the latest pruning offset. 
  rpc GetEventsByContractId (GetEventsByContractIdRequest) returns (GetEventsByContractIdResponse);

}

message GetEventsByContractIdRequest {
  // The contract id being queried.
  // Required
  string contract_id = 1;

  // The parties whose events the client expects to see.
  // The events associated with the contract id will only be returned if the requesting parties includes
  // at least one party that is a stakeholder of the event. For a definition of stakeholders see
  // https://docs.daml.com/concepts/ledger-model/ledger-privacy.html#contract-observers-and-stakeholders
  // Required
  repeated string requesting_parties = 2;

}

message GetEventsByContractIdResponse {

  // The create event for the contract with the ``contract_id`` given in the request
  // provided it exists and has not yet been pruned.
  // Optional
  Created created = 1;

  // The archive event for the contract with the ``contract_id`` given in the request
  // provided such an archive event exists and it has not yet been pruned.
  // Optional
  Archived archived = 2;

}

message Created {

  // Required
  CreatedEvent created_event = 1;

  // The domain ID where the contract was created
  // Required
  string domain_id = 2;

}

message Archived {

  // Required
  ArchivedEvent archived_event = 1;

  // Required
  // The domain ID where the contract was archived
  string domain_id = 2;

}