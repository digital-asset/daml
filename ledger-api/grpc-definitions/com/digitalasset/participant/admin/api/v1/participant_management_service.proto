
// Copyright (c) 2019 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.
// SPDX-License-Identifier: Apache-2.0

syntax = "proto3";

package com.digitalasset.admin.api.v1;

option java_outer_classname = "PartyManagementServiceOuterClass";
option java_package = "com.digitalasset.admin.api.v1";

// Inspect the administrative state of a ledger participant and modify the
// parts that are modifiable. We use 'backing participant' to refer to this
// specific participant in the methods of this API.
service ParticipantManagementService {

  // Return the identifier of the backing participant.
  rpc GetParticipantId (GetParticipantIdRequest) returns (GetParticipantIdResponse)

  // List the participants known by the backing participant.
  rpc ListKnownParticipants (ListKnownParticipantsRequest) returns (ListKnownParticipantsResponse)

  // List the parties known by the backing participant. The parties listed for
  // the backing participant are in particular the ones that
  rpc ListKnownParties (ListKnownPartiesRequest) returns (ListKnownPartiesResponse)

  // allocate new party: name given, name allocated
  rpc AllocateNewParty (AllocateNewPartyRequest) returns (AllocateNewPartyResponse)

  // Returns the details of all DAML-LF packages known to the backing
  // participant.
  rpc ListKnownPackageDetails (ListKnownPackageDetailsRequest) returns
  (ListKnownPackageDetailsResponse);

  // Upload a DAR file to the backing participant. Depending on the ledger
  // implementation this might also make the package available on the whole
  // ledger.
  //
  // Shorthand for uploading all DAML-LF packages.
  rpc UploadDarFile (UploadDarFileRequest) returns (UploadDarFileResponse)
}


// NOTES on KV-utils changes
// - manage participant mapping
// - topology is fully known at all participants
// - validation
     - checks whether participant was allowed to submit
     - all parties mentioned as witness in tx are hosted on the system





