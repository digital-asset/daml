// Copyright (c) 2019 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.
// SPDX-License-Identifier: Apache-2.0

syntax = "proto3";

package com.digitalasset.ledger.api.v1.testing;

import "google/protobuf/empty.proto";


option java_outer_classname = "ResetServiceOuterClass";
option java_package = "com.digitalasset.ledger.api.v1.testing";

// Service to reset the ledger state. The goal here is to be able to reset the state in a way
// that's much faster compared to restarting the whole ledger application (be it a sandbox
// or the real ledger server).
//
// Note that *all* state present in the ledger implementation will be reset, most importantly
// including the ledger ID. This means that clients will have to re-fetch the ledger ID
// from the identity service after hitting this endpoint.
//
// The semantics are as follows:
//
// * When the reset service returns the reset is initiated, but not completed;
// * While the reset is performed, the ledger will not accept new requests. In fact we guarantee
//   that ledger stops accepting new requests by the time the response to Reset is delivered;
// * In-flight requests might be aborted, we make no guarantees on when or how quickly this
//   happens;
// * The ledger might be unavailable for a period of time before the reset is complete.
//
// Given the above, the recommended mode of operation for clients of the reset endpoint is to
// call it, then call the ledger identity endpoint in a retry loop that will tolerate a brief
// window when the ledger is down, and resume operation as soon as the new ledger ID is delivered.
//
// Note that this service will be available on the sandbox and might be available in some other testing
// environments, but will *never* be available in production.
service ResetService {

  // Resets the ledger state. Note that loaded DARs won't be removed -- this only rolls back the
  // ledger to genesis.
  rpc Reset (ResetRequest) returns (google.protobuf.Empty);
}

message ResetRequest {
  // Must correspond to the ledger ID reported by the Ledger Identification Service.
  // Required
  string ledger_id = 1;
}
