// Copyright (c) 2019 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.
// SPDX-License-Identifier: Apache-2.0

syntax = "proto3";

package com.digitalasset.ledger.api.v1.testing;

import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";


option java_outer_classname = "TimeServiceOuterClass";
option java_package = "com.digitalasset.ledger.api.v1.testing";

// Optional service, exposed for testing static time scenarios.
service TimeService {

  // Returns a stream of time updates.
  // Always returns at least one response, where the first one is the current time.
  // Subsequent responses are emitted whenever the ledger server's time is updated.
  rpc GetTime (GetTimeRequest) returns (stream GetTimeResponse);

  // Allows clients to change the ledger's clock in an atomic get-and-set operation.
  rpc SetTime (SetTimeRequest) returns (google.protobuf.Empty);

}

message GetTimeRequest {

  // Must correspond to the ledger ID reported by the Ledger Identification Service.
  // Required
  string ledger_id = 1;
}

message GetTimeResponse {

  // The current time according to the ledger server.
  google.protobuf.Timestamp current_time = 1;
}

message SetTimeRequest {

  // Must correspond to the ledger ID reported by the Ledger Identification Service.
  // Required
  string ledger_id = 1;

  // MUST precisely match the current time as it's known to the ledger server.
  // On mismatch, an ``INVALID_PARAMETER`` gRPC error will be returned.
  google.protobuf.Timestamp current_time = 2;

  // The time the client wants to set on the ledger.
  // MUST be a point int time after ``current_time``.
  google.protobuf.Timestamp new_time = 3;
}
